(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    855106,      17593]
NotebookOptionsPosition[    720065,      14969]
NotebookOutlinePosition[    833705,      17140]
CellTagsIndexPosition[    833314,      17126]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Title", "Title",
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577,ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Author", " ", "Name"}], "Author"]], "Author",
 CellTags->"AuthorName",
 CellID->960727095,ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c"],

Cell["Abstract", "Abstract",
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573,ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e"],

Cell[CellGroupData[{

Cell["Section", "Section",
 CellTags->"SectionHeader",
 CellID->453852445,ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940"],

Cell["XXXX", "Text",
 CellTags->"ExampleTopicSentence",
 CellID->816667160,ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f"],

Cell["XXXX:", "CodeText",
 CellTags->"ExampleCodeText",
 CellID->66178570,ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0"],

Cell[CellGroupData[{

Cell[BoxData[Cell[BoxData[
 "XXXX"], "Input",ExpressionUUID->
  "199b1e12-e32a-43d2-bb61-3ded10db1ed0"]], "Input",
 CellTags->"ExampleInput",
 CellLabel->"In[1]:=",
 CellID->844129532,ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5"],

Cell[BoxData[Cell[BoxData[
 "XXXX"], "Output",ExpressionUUID->
  "3d10bd36-6381-4cae-81b3-785c45643fb1"]], "Output",
 CellTags->"ExampleOutput",
 CellLabel->"Out[1]=",
 CellID->171130590,ExpressionUUID->"c00f4ee8-0557-49a4-ab3b-dadc018208b9"]
}, Open  ]],

Cell["XXXX", "Item",
 CellID->316654537,ExpressionUUID->"acdb2ad8-0a92-4f50-8bae-de040b09b38c"],

Cell["XXXX", "Item",
 CellID->316654538,ExpressionUUID->"8090181c-e17a-4c99-bc3c-696fb19cb01c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Notes", "Section",
 CellChangeTimes->{{3.8744108563424063`*^9, 3.8744108568489876`*^9}},
 CellID->472529298,ExpressionUUID->"8286c212-9b89-469d-9130-506272b3fb92"],

Cell["Some statements come to us in the form.", "Text",
 CellChangeTimes->{{3.8744108595444417`*^9, 3.8744108703842654`*^9}},
 CellID->202213930,ExpressionUUID->"8a448c8d-68ca-4514-9399-cdecb94bb552"],

Cell[TextData[{
 "Let n\[Element]\[DoubleStruckCapitalN], or ",
 Cell[BoxData[
  TemplateBox[{},
   "PositiveIntegers"]],ExpressionUUID->
  "ea348e6a-585c-4f7e-a583-5b8594e1c489"],
 "."
}], "Text",
 CellChangeTimes->{{3.8744108717843184`*^9, 3.8744108967438173`*^9}},
 CellID->651557233,ExpressionUUID->"a66b3aa3-99b4-4b35-9164-d9f17ced7229"],

Cell[CellGroupData[{

Cell[BoxData["PositiveIntegers"], "Input",
 CellChangeTimes->{{3.874410881564417*^9, 3.8744108834576855`*^9}},
 CellLabel->"In[1]:=",
 CellID->79423883,ExpressionUUID->"65ed3749-a897-4557-a0a0-97604888f2b1"],

Cell[BoxData[
 TemplateBox[{},
  "PositiveIntegers"]], "Output",
 CellChangeTimes->{3.8744108839089556`*^9},
 CellLabel->"Out[1]=",
 CellID->26484653,ExpressionUUID->"98183efc-cb99-4238-aec5-6f3667415527"]
}, Open  ]],

Cell["(\[ForAll]n\[GreaterEqual]M)(P(n)).", "Text",
 CellChangeTimes->{{3.874410903501257*^9, 3.874410924085998*^9}},
 CellID->75843069,ExpressionUUID->"0d6b809e-bdf3-4750-b80a-7aa6b664dc29"],

Cell["But we don't have to start with m.", "Text",
 CellChangeTimes->{{3.874410926237179*^9, 3.8744109339804325`*^9}},
 CellID->442976440,ExpressionUUID->"cd485f84-0680-4ded-8601-6dc9d16f549b"],

Cell["\<\
For this we have the extended principle/principal of mathematical induction.\
\>", "Text",
 CellChangeTimes->{{3.8744109366359158`*^9, 3.8744109560229445`*^9}},
 CellID->11063210,ExpressionUUID->"22e09202-7acf-4b0d-8d23-3c7ca321d8de"],

Cell[TextData[{
 "Let m be an integer. m\[Element]",
 Cell[BoxData[
  TemplateBox[{},
   "Integers"]],ExpressionUUID->"11a1ec6a-f7bd-46c7-9a54-9c6f7a28ee2e"],
 "."
}], "Text",
 CellChangeTimes->{{3.874410958140937*^9, 3.874410965933571*^9}},
 CellID->131205281,ExpressionUUID->"c171bb24-6646-4bc5-ae24-ed35b3345731"],

Cell["If T is a subset of \[DoubleStruckCapitalN] such that: T\[Subset]\
\[DoubleStruckCapitalN]", "Text",
 CellChangeTimes->{{3.874410968150745*^9, 3.874411018436779*^9}},
 CellID->299432710,ExpressionUUID->"c1238648-f5e9-4830-8b0f-c71634049ea9"],

Cell["M\[Element]T", "Text",
 CellChangeTimes->{{3.8744110024913683`*^9, 3.874411011262803*^9}},
 CellID->210230365,ExpressionUUID->"8288fac0-2476-4255-8e68-a9d6eb7e38a9"],

Cell["\[ForAll] k \[Element]\[DoubleStruckCapitalN] with k\[GreaterEqual]M, \
if k\[Element]T then k+1\[Element]T. if P(k) is true.", "Text",
 CellChangeTimes->{{3.8744110207046633`*^9, 3.8744110446122355`*^9}, {
  3.874411104623714*^9, 3.8744111173044004`*^9}},
 CellID->59263262,ExpressionUUID->"3d94d2ae-09f0-467e-9810-c3adc96f0994"],

Cell["Then T contains all integers greater than or equal to M.", "Text",
 CellChangeTimes->{{3.874411119880541*^9, 3.874411128809577*^9}},
 CellID->112798681,ExpressionUUID->"512c8136-4aac-45f2-9006-c186618b7be2"],

Cell["What is the link between this nice principle and P(n)?", "Text",
 CellChangeTimes->{{3.8744111605145187`*^9, 3.874411175469073*^9}},
 CellID->85100390,ExpressionUUID->"99af6316-6ead-4b38-8beb-9b5aa3612cd2"],

Cell[CellGroupData[{

Cell["principle", "WolframAlphaLong",
 CellChangeTimes->{{3.874411176419421*^9, 3.8744111780758314`*^9}},
 CellLabel->"In[2]:=",
 CellID->30061086,ExpressionUUID->"fbf1ac55-28db-4f32-9192-d142d02ad174"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "principle", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}, 
    PodStates -> {"Phrase:WordData__More"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Entity[\"Word\", \"principle\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               TemplateBox[{
                 TagBox[
                  TagBox["\"principle\"", 
                   $CellContext`TagBoxWrapper[
                   "Entity" -> {WordData, "principle"}]], Identity], "\"  \"", 
                 StyleBox[
                  
                  RowBox[{
                   "\"(\"", "\[NoBreak]", "\"English word\"", "\[NoBreak]", 
                    "\")\""}], {
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"], LineIndent -> 0], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Definitions", "scanner" -> "Data", "id" -> 
     "Definition:WordData", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"principle\"][EntityProperty[\"Word\", \
\"Definitions\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox["1", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"noun\"", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    "\"a basic generalization that is accepted as true and \
that can be used as a basis for reasoning or conduct\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox["2", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"noun\"", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    "\"a rule or standard especially of good behavior\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox["3", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"noun\"", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    "\"a basic truth or law or assumption\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox["4", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"noun\"", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    "\"a rule or law concerning a natural phenomenon or the \
function of a complex system\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox["5", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"noun\"", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    "\"rule of personal conduct\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox["6", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"noun\"", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    "\"(law) an explanation of the fundamental reasons \
(especially an explanation of the working of some device in terms of laws of \
nature)\"", {LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0}]}},
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{{Top}, {Bottom}}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {{None}}}, 
                   GridBoxFrame -> {
                    "Columns" -> None, "Rows" -> {{True}}, 
                    "ItemsIndexed" -> {{{1, -1}, {1, -1}} -> None}}, 
                   GridBoxItemSize -> {"Columns" -> {
                    Scaled[0.045], Automatic, Automatic}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {0, 0, 0.8, 0}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                PaneBox[
                 TagBox[
                  Cell[
                   TextData[{
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"6", "\" meanings\""}, "RowDefault"], 
                    "\[NoBreak]", "\")\""}], TraditionalForm]]], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Pronunciation", "scanner" -> "Data", "id" -> 
     "Pronunciation:WordData", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"principle\"][EntityProperty[\"Word\", \
\"Pronunciation\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"pr'insuhpuhl\"", {
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                 0}], "\"  \"", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{
                    StyleBox[
                    "\"IPA\"", {FontFamily -> "Roboto", FontSize -> 9, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\": \"", "\"pr\:02c8\:026ans\:0259p\:0259l\""}, 
                   "RowDefault"], "\[NoBreak]", "\")\""}], {
                FontFamily -> "Roboto", FontSize -> 10, 
                 GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}]}, "RowDefault"], LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Hyphenation", "scanner" -> "Data", "id" -> 
     "Hyphenation:WordData", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"principle\"][EntityProperty[\"Word\", \
\"Hyphenation\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"  ", "\"  \"", 
              TemplateBox[{
                StyleBox[
                 RowBox[{"\"prin\"", 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    StyleBox["\"\[Hyphen]\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], AutoSpacing -> True], "\"ci\"", 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    StyleBox["\"\[Hyphen]\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], AutoSpacing -> True], "\"ple\""}], 
                 LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0, 
                 ZeroWidthTimes -> True]}, "RowDefault"], 
              StyleBox[
               RowBox[{"\"(\"", "\[NoBreak]", 
                 TemplateBox[{
                   StyleBox[
                    RowBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["9", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"letters\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    StyleBox[
                    StyleBox[
                    "\"  | \"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    GrayLevel[0.6], StripOnInput -> False]}], AutoSpacing -> 
                    True], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["3", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"syllables\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}], 
                    LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                    0]}, "RowDefault"], "\[NoBreak]", "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "RowWithSeparators"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "First known use in English", "scanner" -> "Data", "id" -> 
     "FirstRecordYear:WordData", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"HistoricalPeriodData"}], "\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"TheWikimediaFoundationIncWikipedia"}],
          "\n   "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"  ", "\"  \"", 
              FormBox[
               TagBox["\"1380\"", Identity], TraditionalForm], 
              StyleBox[
               RowBox[{"\"(\"", "\[NoBreak]", 
                 TagBox[
                  TagBox["\"Late Middle ages\"", 
                   $CellContext`TagBoxWrapper[
                   "Entity" -> {HistoricalPeriodData, "LateMiddleAges"}]], 
                  Identity], "\[NoBreak]", "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              StyleBox[
               RowBox[{"\"(\"", "\[NoBreak]", 
                 TemplateBox[{
                   StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["642", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"years\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\" ago\""}, "RowDefault"], 
                 "\[NoBreak]", "\")\""}], {
               FontFamily -> "Roboto", FontSize -> 10, 
                GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "RowWithSeparators"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Word origins", "scanner" -> "Data", "id" -> 
     "LanguageOrigin:WordData", "position" -> "600", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"principle\"][EntityProperty[\"Word\", \
\"LanguageOrigin\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               FormBox[
                TagBox[
                 TagBox["\"Old French\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {LanguageData, "OldFrench"}]], Identity], 
                TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"Latin\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {LanguageData, "Latin"}]], Identity], 
                TraditionalForm]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Overall typical frequency", "scanner" -> "Data", "id" -> 
     "Frequency:WordData", "position" -> "700", "error" -> "false", 
     "numsubpods" -> "3"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TemplateBox[{
               StyleBox[
                TemplateBox[{
                  TemplateBox[{
                    StyleBox["\"written: \"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    TagBox[
                    SuperscriptBox["1174", "\"th\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> 
                    RowBox[{"1174", "\[InvisibleSpace]", "\"th\""}]]], 
                    "\" most common\""}, "RowDefault"], "\"  \"", 
                  StyleBox[
                   RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"1", 
                    StyleBox["\" in \"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["11494", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"words\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "RowDefault"], "\[NoBreak]",
                     "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], "\"  \"", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{"\" >\[ThinSpace]\"", 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["99", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "99", "SRString" -> "99"]], "\[NoBreak]", 
                    StyleBox[
                    "\"%\"", FontFamily -> "Roboto", FontSize -> Smaller]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                    LineIndent -> 0, ZeroWidthTimes -> False], "\" \"", 
                    "\"noun\""}, "RowDefault"], "\[NoBreak]", "\")\""}], {
                FontFamily -> "Bitstream Charter", FontSize -> Smaller, 
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}]}, "RowDefault"], LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TemplateBox[{
               TemplateBox[{
                 StyleBox["\"spoken: \"", {
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}], 
                 TagBox[
                  SuperscriptBox["1639", "\"th\""], 
                  $CellContext`TagBoxWrapper[
                  "StringBoxes" -> 
                   RowBox[{"1639", "\[InvisibleSpace]", "\"th\""}]]], 
                 "\" most common\""}, "RowDefault"], "\"  \"", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{"1", 
                    StyleBox["\" in \"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["29412", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"words\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}, "RowDefault"], "\[NoBreak]",
                   "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                 GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}]}, "RowDefault"], LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            PaneBox[
             TagBox[
              Cell[
               TextData[{
                 StyleBox[
                  Cell[
                   BoxData[
                    FormBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"includes some inflected forms\"", "\[NoBreak]", 
                    "\")\""}], TraditionalForm]]], {
                  FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}]], 
              $CellContext`TagBoxWrapper["Label"]], 
             BaseStyle -> {LineIndent -> 0}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {
    "title" -> "Word frequency history", "scanner" -> "Data", "id" -> 
     "BookMatchFrequency:WordData", "position" -> "800", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"WordData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                GraphicsComplexBox[CompressedData["
1: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

                 "], {{{}, {
                    EdgeForm[], 
                    Directive[
                    Opacity[0.05], 
                    Hue[0.67, 0.6, 0.6]], 
                    GraphicsGroupBox[{
                    
                    PolygonBox[{{1, 850, 665, 760, 422, 526, 9, 202, 8, 7, 6, 
                    5, 4, 3, 2, 201}}], 
                    PolygonBox[CompressedData["
1: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
c/eq21tztfr/oBB2NQ==
                    "]]}]}, {}, {}}, {{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    LineBox[CompressedData["
1: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
82v8J+VOkYY=
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$950097#1"]& ]}}], {}}, {
               GridLines -> Dynamic[
                  Join[{{{-1.26227808*^10, 
                    Directive[
                    GrayLevel[0.9]]}, {-9.4671072*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-6.3113472*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {0., 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {6.3114336*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, {0, 5, 10, 15, 20}}, 
                   Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x$, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y$, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x$, 
                    GrayLevel[0.7]}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y$, 
                    GrayLevel[0.7]}}}}], 2]], FrameTicks -> {{{{0., 
                    FormBox[
                    TagBox["0", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {2.5, 
                    FormBox[
                    TagBox["2.5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "2.5", "SRString" -> "2.5"]], 
                    TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {5., 
                    FormBox[
                    TagBox["5", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {7.5, 
                    FormBox[
                    TagBox["7.5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "7.5", "SRString" -> "7.5"]], 
                    TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {10., 
                    FormBox[
                    TagBox["10", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {12.5, 
                    FormBox[
                    TagBox["12.5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "12.5", "SRString" -> "12.5"]], 
                    TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {15., 
                    FormBox[
                    TagBox["15", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {17.5, 
                    FormBox[
                    TagBox["17.5", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "17.5", "SRString" -> "17.5"]], 
                    TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {0.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {4., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {4.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {5.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {6., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {6.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {7., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {8., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {8.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {9., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {9.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {10.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {11., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {11.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {12., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {13., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {13.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {14., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {14.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {15.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {16., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {16.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {17., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}, {{0., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {2.5, 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {5., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {7.5, 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {10., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {12.5, 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {15., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {17.5, 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {0.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {1.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {4., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {4.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {5.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {6., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {6.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {7., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {8., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {8.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {9., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {9.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {10.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {11., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {11.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {12., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {13., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {13.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {14., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {14.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {15.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {16., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {16.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {17., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}}, {{{-1.26227808*^10, 
                    FormBox[
                    StyleBox["\"1500\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-9.4671072*^9, 
                    FormBox[
                    StyleBox["\"1600\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-6.3113472*^9, 
                    FormBox[
                    StyleBox["\"1700\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-3.1556736*^9, 
                    FormBox[
                    StyleBox["\"1800\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {0., 
                    FormBox[
                    StyleBox["\"1900\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    StyleBox["\"2000\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {6.3114336*^9, 
                    FormBox[
                    StyleBox["\"2100\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}}, {{-1.26227808*^10, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-9.4671072*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-6.3113472*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {0., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {6.3114336*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-1.26227808*^10, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-1.19917152*^10, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-1.13605632*^10, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-1.07294112*^10, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-1.00982592*^10, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-9.4671072*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-9.4671072*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-8.8359552*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-8.2048032*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-7.5736512*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-6.9424992*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-6.3113472*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-6.3113472*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-5.6802816*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-5.0491296*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-4.4179776*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-2.524608*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-1.893456*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-1.262304*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-6.31152*^8, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {0., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {0., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {6.310656*^8, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {1.2622176*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {1.8933696*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.5245216*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {4.4179776*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {5.0491296*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {5.6802816*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {6.3114336*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}}}}, ImagePadding -> All, 
                GridLines -> {{{-1.26227808*^10, 
                    Directive[
                    GrayLevel[0.9]]}, {-9.4671072*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-6.3113472*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {0., 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {6.3114336*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, PlotRangePadding -> None, 
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {{0., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {5., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {10., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {15., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {6., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {7., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {8., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {9., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {11., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {12., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {13., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {14., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {16., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {17., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {18., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {19., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {20., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}}}, {Automatic, {{-1.*^10, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-7.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-5.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-2.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {0., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-1.25*^10, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-1.2*^10, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-1.15*^10, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-1.1*^10, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-1.05*^10, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-9.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-9.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-8.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-8.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-7.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-6.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-6.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-5.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-4.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-4.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-3.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-3.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-2.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-1.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-1.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-5.*^8, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {5.*^8, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {5.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}}}}, 
                GridLines -> {{{-1.26227808*^10, 
                    Directive[
                    GrayLevel[0.9]]}, {-9.4671072*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-6.3113472*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {0., 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {6.3114336*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, DisplayFunction -> 
                Identity, PlotRangePadding -> {{None, None}, {None, None}}, 
                PlotRangeClipping -> True, ImagePadding -> All, 
                DisplayFunction -> Identity, AspectRatio -> 0.2, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, AxesStyle -> Directive[
                  GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                  FontOpacity -> 1], BaseStyle -> AbsoluteThickness[1], 
                DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                  FontOpacity -> 1], 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {{{-1.26227808*^10, 
                    Directive[
                    GrayLevel[0.9]]}, {-9.4671072*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-6.3113472*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {0., 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {6.3114336*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, GridLinesStyle -> 
                GrayLevel[0.9], ImageSize -> Scaled[0.75], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultMeshStyle" -> PointSize[Medium], 
                  "PointSizeFunction" -> "SmallPointSize", "ScalingFunctions" -> 
                  None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}, "AxesInFront" -> True}, 
                PlotRange -> {{-1.1991715200000267`*^10, 
                  3.408134400000076*^9}, {0, 17.939999999999998`}}, 
                PlotRangeClipping -> True, 
                PlotRangePadding -> {{None, None}, {None, None}}, Prolog -> {
                  Opacity[0], 
                  TagBox[
                   RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "DatePlot", "Frame"]& ]}, 
                Ticks -> {Automatic, Automatic}}], 
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"from \"", 
                    FormBox[
                    TagBox["\"1540\"", Identity], TraditionalForm], 
                    "\" to \"", 
                    FormBox[
                    TagBox["\"2008\"", Identity], TraditionalForm]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], 
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"in occurrences per hundred thousand words per year\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}}], "Grid"]}, 
             "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  
                  ItemBox[#2, Alignment -> {Left, Inherited}, 
                   DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Roboto", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", 
                  RowBox[{"{", #2, "}"}], ",", 
                  TemplateBox[{
                    GridBox[{{
                    StyleBox[
                    "Bottom", FontFamily -> "Roboto", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Left", FontFamily -> "Roboto", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                   DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                   InterpretationFunction -> (#& )]}], "]"}]& )], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"computabledata,formatteddata,timeseriesdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Linear scale", "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Linear scale", "input" -> 
           "BookMatchFrequency:WordData__Linear scale"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Log scale", "input" -> 
           "BookMatchFrequency:WordData__Log scale"}, {}]}], 
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Binned", "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Binned", "input" -> 
           "BookMatchFrequency:WordData__Binned"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Raw", "input" -> 
           "BookMatchFrequency:WordData__Raw"}, {}]}]}], 
     XMLElement["definitions", {"count" -> "1"}, {
       XMLElement[
       "definition", {
        "word" -> "Word frequency history", "desc" -> 
         "based on a Google Books sample of one million books in English; \
Michel, J.-B., Y. K. Shen, A. P. Aiden, A. Veres, M. K. Gray, The Google \
Books Team, J. P. Pickett, D. Hoiberg, D. Clancy, P. Norvig, J. Orwant, S. \
Pinker, M. A. Nowak, and E. L. Aiden. \"Quantitative Analysis of Culture \
Using Millions of Digitized Books.\" Science 331 (2011)"}, {}]}]}], 
   Typeset`pod9$$ = XMLElement[
   "pod", {"title" -> "Inflected form", "scanner" -> "Data", "id" -> 
     "InflectedForms:WordData", "position" -> "900", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"principle\"][EntityProperty[\"Word\", \
\"InflectedForms\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["\"principles\"", TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod10$$ = XMLElement[
   "pod", {"title" -> "Synonyms", "scanner" -> "Data", "id" -> 
     "Synonyms:WordData", "position" -> "1000", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"principle\"][EntityProperty[\"Word\", \
\"SynonymsList\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               FormBox[
                TagBox[
                 TagBox["\"rule\"", 
                  $CellContext`TagBoxWrapper["Entity" -> {WordData, "rule"}]],
                  Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"precept\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {WordData, "precept"}]], Identity], 
                TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"rationale\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {WordData, "rationale"}]], Identity], 
                TraditionalForm]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Show synonym network", "input" -> 
         "Synonyms:WordData__Show synonym network"}, {}], 
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Meanings combined", "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Meanings divided", "input" -> 
           "Synonyms:WordData__Meanings divided"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Meanings combined", "input" -> 
           "Synonyms:WordData__Meanings combined"}, {}]}]}]}], 
   Typeset`pod11$$ = XMLElement[
   "pod", {"title" -> "Narrower terms", "scanner" -> "Data", "id" -> 
     "Hyponym:WordData", "position" -> "1100", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"principle\"][EntityProperty[\"Word\", \
\"NarrowerTermsList\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               RowBox[{
                 FormBox[
                  TagBox[
                   TagBox["\"feng shui\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "feng shui"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"pillar\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "pillar"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"yang\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "yang"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"yin\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "yin"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"accounting principle\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "accounting principle"}]], 
                   Identity], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"accounting standard\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "accounting standard"}]], 
                   Identity], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"chivalry\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "chivalry"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"ethic\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "ethic"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"Hellenism\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "Hellenism"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"judicial doctrine\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "judicial doctrine"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"judicial principle\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "judicial principle"}]], Identity],
                   TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"knightliness\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "knightliness"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"legal principle\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "legal principle"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"moral principle\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "moral principle"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"scruple\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "scruple"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 "\"\[Ellipsis]\""}], "   ", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{" ", "\"total:\"", "62"}, "RowWithSeparator"], 
                  "\[NoBreak]", "\")\""}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Meanings combined", "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Meanings divided", "input" -> 
           "Hyponym:WordData__Meanings divided"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Meanings combined", "input" -> 
           "Hyponym:WordData__Meanings combined"}, {}]}], 
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "Hyponym:WordData__More"}, {}]}]}], 
   Typeset`pod12$$ = XMLElement[
   "pod", {"title" -> "Broader terms", "scanner" -> "Data", "id" -> 
     "Hypernym:WordData", "position" -> "1200", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"principle\"][EntityProperty[\"Word\", \
\"BroaderTermsList\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               RowBox[{
                 FormBox[
                  TagBox[
                   TagBox["\"generalisation\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "generalisation"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"generality\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "generality"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"generalization\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "generalization"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"value\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "value"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"law\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "law"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"natural law\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "natural law"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"law of nature\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "law of nature"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"prescript\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "prescript"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"rule\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "rule"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"explanation\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "explanation"}]], Identity], 
                  TraditionalForm]}], "   ", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{" ", "\"total:\"", "10"}, "RowWithSeparator"], 
                  "\[NoBreak]", "\")\""}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Meanings combined", "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Meanings divided", "input" -> 
           "Hypernym:WordData__Meanings divided"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Meanings combined", "input" -> 
           "Hypernym:WordData__Meanings combined"}, {}]}]}]}], 
   Typeset`pod13$$ = XMLElement[
   "pod", {"title" -> "Rhymes", "scanner" -> "Data", "id" -> "Rhyme:WordData",
      "position" -> "1300", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"WordData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                FormBox[
                 TagBox[
                  TagBox["\"principal\"", 
                   $CellContext`TagBoxWrapper[
                   "Entity" -> {WordData, "principal"}]], Identity], 
                 TraditionalForm]}, {
                PaneBox[
                 TagBox[
                  Cell[
                   TextData[{
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"based on typical American pronunciation\"", 
                    "\[NoBreak]", "\")\""}], TraditionalForm]]], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "statelist", {
        "count" -> "4", "value" -> "Sorted alphabetically", "delimiters" -> 
         ""}, {
         XMLElement[
         "state", {
          "name" -> "Sorted alphabetically", "input" -> 
           "Rhyme:WordData__Sorted alphabetically"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Sorted by length", "input" -> 
           "Rhyme:WordData__Sorted by length"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Sorted by syllables", "input" -> 
           "Rhyme:WordData__Sorted by syllables"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Sorted by frequency", "input" -> 
           "Rhyme:WordData__Sorted by frequency"}, {}]}]}]}], 
   Typeset`pod14$$ = XMLElement[
   "pod", {"title" -> "Homophone", "scanner" -> "Data", "id" -> 
     "Homophones:WordData", "position" -> "1400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              TagBox["\"principal\"", 
               $CellContext`TagBoxWrapper[
               "Entity" -> {WordData, "principal"}]], Identity], 
             TraditionalForm], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod15$$ = XMLElement[
   "pod", {"title" -> "Lexically close words", "scanner" -> "Data", "id" -> 
     "LexicallyCloseWords:WordData", "position" -> "1500", "error" -> "false",
      "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"WordData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              TagBox["\"principled\"", 
               $CellContext`TagBoxWrapper[
               "Entity" -> {WordData, "principled"}]], Identity], 
             TraditionalForm], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "statelist", {
        "count" -> "3", "value" -> "1-letter difference", "delimiters" -> 
         ""}, {
         XMLElement[
         "state", {
          "name" -> "1-letter difference", "input" -> 
           "LexicallyCloseWords:WordData__1-letter difference"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Up to 2-letter difference", "input" -> 
           "LexicallyCloseWords:WordData__Up to 2-letter difference"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Up to 3-letter difference", "input" -> 
           "LexicallyCloseWords:WordData__Up to 3-letter difference"}, \
{}]}]}]}], Typeset`pod16$$ = XMLElement[
   "pod", {"title" -> "Anagrams", "scanner" -> "Data", "id" -> 
     "Anagram:WordData", "position" -> "1600", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", "\"none among common words\"", 
                 "\[NoBreak]", "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              $CellContext`TagBoxWrapper[
              "Missing" -> "WordDataNotAvailable"]], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod17$$ = XMLElement[
   "pod", {"title" -> "Phrases", "scanner" -> "Data", "id" -> 
     "Phrase:WordData", "position" -> "100", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"principle\"][EntityProperty[\"Word\", \
\"Phrase\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               RowBox[{
                 FormBox[
                  TagBox[
                   TagBox["\"Archimedes' principle\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "Archimedes' principle"}]], 
                   Identity], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"bitter principle\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "bitter principle"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"exclusion principle\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "exclusion principle"}]], 
                   Identity], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"first principle\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "first principle"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"indeterminacy principle\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "indeterminacy principle"}]], 
                   Identity], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"in principle\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "in principle"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"life principle\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "life principle"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"Pauli exclusion principle\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "Pauli exclusion principle"}]], 
                   Identity], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"principle of relativity\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "principle of relativity"}]], 
                   Identity], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"uncertainty principle\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "uncertainty principle"}]], 
                   Identity], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"vital principle\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "vital principle"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"working principle\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "working principle"}]], Identity], 
                  TraditionalForm]}], "   ", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{" ", "\"total:\"", "12"}, "RowWithSeparator"], 
                  "\[NoBreak]", "\")\""}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Less", "input" -> "Phrase:WordData__Less"}, {}]}]}], 
   Typeset`pod18$$ = XMLElement[
   "pod", {"title" -> "Translations", "scanner" -> "Data", "id" -> 
     "ManyTranslations:TranslationData", "position" -> "1800", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"CountryData"}], "\n    ", 
         XMLElement["microsource", {}, {"LanguageData"}], "\n    ", 
         XMLElement["microsource", {}, {"TranslationData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"Ethnologue"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TemplateBox[{
                   FormBox[
                    TagBox[
                    TagBox["\"Mandarin Chinese\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {LanguageData, "ChineseMandarin"}]], 
                    Identity], TraditionalForm], "\": \""}, "RowDefault"], 
                 GrayLevel[0.3], StripOnInput -> False], 
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TagBox["\"\:539f\:5247\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"ChineseMandarin", "\:539f\:5247"}}]],
                     Identity], "\"  \"", 
                   StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"noun\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                StyleBox[
                 TemplateBox[{
                   FormBox[
                    TagBox[
                    TagBox["\"Hindi\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {LanguageData, "Hindi"}]], Identity], 
                    TraditionalForm], "\": \""}, "RowDefault"], 
                 GrayLevel[0.3], StripOnInput -> False], 
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TagBox[
                    "\"\:0938\:093f\:0926\:094d\:0927\:093e\:0902\:0924\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {
                    "Hindi", 
                    "\:0938\:093f\:0926\:094d\:0927\:093e\:0902\:0924"}}]], 
                    Identity], "\"  \"", 
                   StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"noun\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                StyleBox[
                 TemplateBox[{
                   FormBox[
                    TagBox[
                    TagBox["\"Arabic\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {LanguageData, "Arabic"}]], Identity], 
                    TraditionalForm], "\": \""}, "RowDefault"], 
                 GrayLevel[0.3], StripOnInput -> False], 
                StyleBox[
                 TemplateBox[{
                   TagBox[
                    TagBox["\"\:0645\:064e\:0628\:062f\:064e\:0623\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {
                    "Arabic", "\:0645\:064e\:0628\:062f\:064e\:0623"}}]], 
                    Identity], "\"  \"", 
                   StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"noun\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                StyleBox[
                 TemplateBox[{
                   FormBox[
                    TagBox[
                    TagBox["\"Spanish\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {LanguageData, "Spanish"}]], Identity], 
                    TraditionalForm], "\": \""}, "RowDefault"], 
                 GrayLevel[0.3], StripOnInput -> False], 
                StyleBox[
                 RowBox[{
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"principio\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"Spanish", "principio"}}]], Identity],
                     "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"reasoning\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"principio\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"Spanish", "principio"}}]], Identity],
                     "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"morality\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}], 
                 LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                 0]}, {
                StyleBox[
                 TemplateBox[{
                   FormBox[
                    TagBox[
                    TagBox["\"French\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {LanguageData, "French"}]], Identity], 
                    TraditionalForm], "\": \""}, "RowDefault"], 
                 GrayLevel[0.3], StripOnInput -> False], 
                StyleBox[
                 RowBox[{
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"principe\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {"TranslationData", {"French", "principe"}}]],
                     Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"reasoning\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"principe\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {"TranslationData", {"French", "principe"}}]],
                     Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"morality\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}], 
                 LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                 0]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              FrameStyle -> GrayLevel[0.92]], "Grid"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "ManyTranslations:TranslationData__More"}, {}]}]}], Typeset`pod19$$ =
    XMLElement[
   "pod", {"title" -> "Other notable uses", "scanner" -> "Data", "id" -> 
     "Entities:WordData", "position" -> "1900", "error" -> "false", 
     "numsubpods" -> "2"}, {
     XMLElement["subpod", {"title" -> "Books"}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"BookData"}], "\n   ", 
         XMLElement["microsource", {}, {"WordData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               TemplateBox[{
                 TagBox[
                  TagBox["\"The Dilbert Principle\"", 
                   $CellContext`TagBoxWrapper[
                   "Entity" -> {$CellContext`BookData, 
                    "TheDilbertPrinciple"}]], Identity], "\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    FormBox[
                    TagBox[
                    TagBox["\"Scott Adams\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {$CellContext`PeopleData, 
                    "ScottAdams::rf5vd"}]], Identity], TraditionalForm]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                  FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               TemplateBox[{
                 TagBox[
                  TagBox["\"The Peter Principle\"", 
                   $CellContext`TagBoxWrapper[
                   "Entity" -> {$CellContext`BookData, "ThePeterPrinciple"}]],
                   Identity], "\" \"", 
                 StyleBox[
                  RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    FormBox[
                    TagBox[
                    TagBox["\"Laurence J. Peter\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {$CellContext`PeopleData, 
                    "LaurenceJPeter::x58xk"}]], Identity], TraditionalForm], 
                    "\", \"", 
                    FormBox[
                    TagBox[
                    TagBox["\"Raymond Hull\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {$CellContext`PeopleData, 
                    "RaymondHull::ksk5n"}]], Identity], TraditionalForm]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                  FontFamily -> "Roboto", FontSize -> 10, 
                   GrayLevel[0.5], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> "Internet domains"}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"InternetData"}], "\n   ", 
         XMLElement["microsource", {}, {"WordData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               RowBox[{
                 FormBox[
                  TagBox[
                   TagBox["\"principle.com\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {$CellContext`InternetData, 
                    "principle.com"}]], Identity], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"principle.net\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {$CellContext`InternetData, 
                    "principle.net"}]], Identity], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"principle.org\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {$CellContext`InternetData, 
                    "principle.org"}]], Identity], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"principle.info\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {$CellContext`InternetData, 
                    "principle.info"}]], Identity], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"principle.biz\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {$CellContext`InternetData, 
                    "principle.biz"}]], Identity], TraditionalForm]}], "   ", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{" ", "\"total:\"", "5"}, "RowWithSeparator"], 
                  "\[NoBreak]", "\")\""}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "15"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod20$$ = XMLElement[
   "pod", {"title" -> "Crossword puzzle clues", "scanner" -> "Data", "id" -> 
     "NYTCrosswordPuzzleClues:WordData", "position" -> "2000", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"WordData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"XWordInfo"}], "\n  "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"principle\"][EntityProperty[\"Word\", \
\"NYTCrosswordPuzzleClues\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", "\"none\"", "\[NoBreak]", "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              $CellContext`TagBoxWrapper["Missing" -> "None"]], 
             TraditionalForm], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod21$$ = XMLElement[
   "pod", {"title" -> "Scrabble score", "scanner" -> "Data", "id" -> 
     "ScrabbleScore:WordData", "position" -> "2100", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"WordData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               StyleBox[
                TemplateBox[{
                  StyleBox[
                   TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["15", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "15", "SRString" -> "15"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                   LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", "\"International English\"", 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
                TemplateBox[{
                  StyleBox[
                   TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["15", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "15", "SRString" -> "15"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                   LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", "\"North American English\"", 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False, False, False}, True}, 
   Typeset`aux8$$ = {True, False, {False}, True}, Typeset`aux9$$ = {
   True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False, False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "principle", "template" -> 
        "Assuming \"principle\" is a word${separator}Use as ${desc} or \
${desc} instead", "count" -> "3", "pulldown" -> "false", "default" -> 
        "{\"C\", \"principle\"} -> {\"Word\", \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "Word", "desc" -> "a word", "input" -> 
          "{\"C\", \"principle\"} -> {\"Word\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "MathWorld", "desc" -> 
          " referring to a mathematical definition", "input" -> 
          "{\"C\", \"principle\"} -> {\"MathWorld\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Periodical", "desc" -> "a periodical", "input" -> 
          "{\"C\", \"principle\"} -> {\"Periodical\"}"}, {}]}]}], 
    XMLElement["sources", {"count" -> "19"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
AdministrativeDivisionDataSourceInformationNotes.html", "text" -> 
        "Administrative division data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
BookDataSourceInformationNotes.html", "text" -> "Book data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
BridgeDataSourceInformationNotes.html", "text" -> "Bridge data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
BuildingDataSourceInformationNotes.html", "text" -> "Building data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
CityDataSourceInformationNotes.html", "text" -> "City data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
CompanyDataSourceInformationNotes.html", "text" -> "Company data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
CountryDataSourceInformationNotes.html", "text" -> "Country data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
GivenNameDataSourceInformationNotes.html", "text" -> "Given name data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
HistoricalPeriodDataSourceInformationNotes.html", "text" -> 
        "Historical period data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
InternetDataSourceInformationNotes.html", "text" -> "Internet data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
LakeDataSourceInformationNotes.html", "text" -> "Lake data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
LanguageDataSourceInformationNotes.html", "text" -> "Language data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
MountainDataSourceInformationNotes.html", "text" -> "Mountain data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
MovieDataSourceInformationNotes.html", "text" -> "Movie data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
OceanDataSourceInformationNotes.html", "text" -> "Ocean data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
RiverDataSourceInformationNotes.html", "text" -> "River data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
SurnameDataSourceInformationNotes.html", "text" -> "Surname data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
TranslationDataSourceInformationNotes.html", "text" -> 
        "Translation data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
WordDataSourceInformationNotes.html", "text" -> "Word data"}, {}]}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "21", "datatypes" -> 
    "AdministrativeDivision,Book,Bridge,Building,City,Company,Country,\
GivenName,HistoricalPeriod,Internet,Lake,Language,Mountain,Movie,Ocean,River,\
Surname,Translation,Word", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
    "3.876", "parsetiming" -> "0.139", "parsetimedout" -> "false", 
    "recalculate" -> "", "id" -> 
    "MSP17281290106ag4bedheb00002dh246a0f4f83g86", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "1", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa17291290106ag4bedheb00005519ab4h8cf519307794153569472399936", "version" -> 
    "2.6", "inputstring" -> "principle"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2022, 10, 10, 13, 19, 45.5784532`9.4113344488253}, "Line" -> 2,
     "SessionID" -> 19494576396667832503}, Typeset`showpods$$ = {1, 2, 3, 4, 
   5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "principle"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{497., {988.3544921875, 993.6455078125}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{3.874411185684901*^9},
 CellID->74764740,ExpressionUUID->"3363037a-0bd3-42f3-a52d-4a098f4563ba"]
}, Open  ]],

Cell["We want to show the elements are related in what way.", "Text",
 CellChangeTimes->{{3.8744112408802633`*^9, 3.874411248266428*^9}},
 CellID->186742117,ExpressionUUID->"8420b33c-d0e1-4039-9559-4f371e303e23"],

Cell["We want to show that the elements in T make P(n) true!", "Text",
 CellChangeTimes->{{3.874411279943829*^9, 3.874411288776766*^9}},
 CellID->319308745,ExpressionUUID->"9c50c069-e340-4fee-9561-31ac33a46280"],

Cell["How do we use this?", "Text",
 CellChangeTimes->{{3.8744112925727186`*^9, 3.8744112968132696`*^9}},
 CellID->739313864,ExpressionUUID->"30ab35bd-c168-441f-be5b-4e764ada803f"],

Cell[CellGroupData[{

Cell["induction", "WolframAlphaLong",
 CellChangeTimes->{{3.87441131197771*^9, 3.8744113136429605`*^9}},
 CellLabel->"In[3]:=",
 CellID->56366454,ExpressionUUID->"5bc24a5b-4c61-4a0b-9704-5b40c0af21cc"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "induction", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}, 
    PodStates -> {
     "Synonyms:WordData__Show synonym network", "Hyponym:WordData__More", 
      "Hyponym:WordData__Less"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Entity[\"Word\", \"induction\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               TemplateBox[{
                 TagBox[
                  TagBox["\"induction\"", 
                   $CellContext`TagBoxWrapper[
                   "Entity" -> {WordData, "induction"}]], Identity], "\"  \"", 
                 StyleBox[
                  
                  RowBox[{
                   "\"(\"", "\[NoBreak]", "\"English word\"", "\[NoBreak]", 
                    "\")\""}], {
                   GrayLevel[0.6], 
                   LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                   0}]}, "RowDefault"], LineIndent -> 0], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Definitions", "scanner" -> "Data", "id" -> 
     "Definition:WordData", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"induction\"][EntityProperty[\"Word\", \
\"Definitions\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox["1", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"noun\"", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    "\"a formal entry into an organization or position or \
office\"", {LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0}]}, {
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox["2", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"noun\"", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    "\"an electrical phenomenon whereby an electromotive \
force (EMF) is generated in a closed circuit by a change in the flow of \
current\"", {LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0}]}, {
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox["3", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"noun\"", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    "\"reasoning from detailed facts to general \
principles\"", {LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox["4", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"noun\"", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    "\"stimulation that calls up (draws forth) a particular \
class of behaviors\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox["5", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"noun\"", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    "\"the act of bringing about something (especially at an \
early time)\"", {LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox["6", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    TagBox[
                    TagBox[
                    PaneBox[
                    StyleBox[
                    "\"noun\"", {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    StyleBox[
                    "\"an act that sets in motion some course of events\"", {
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{{Top}, {Bottom}}}}, 
                   AutoDelete -> False, 
                   GridBoxBackground -> {"Columns" -> {{None}}}, 
                   GridBoxFrame -> {
                    "Columns" -> None, "Rows" -> {{True}}, 
                    "ItemsIndexed" -> {{{1, -1}, {1, -1}} -> None}}, 
                   GridBoxItemSize -> {"Columns" -> {
                    Scaled[0.045], Automatic, Automatic}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {0, 0, 0.8, 0}, "Rows" -> {{1}}}, FrameStyle -> 
                   GrayLevel[0.84], BaselinePosition -> Automatic, 
                   AllowScriptLevelChange -> False], "Grid"], 
                 LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
                 False]}, {
                PaneBox[
                 TagBox[
                  Cell[
                   TextData[{
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"6", "\" meanings\""}, "RowDefault"], 
                    "\[NoBreak]", "\")\""}], TraditionalForm]]], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Pronunciation", "scanner" -> "Data", "id" -> 
     "Pronunciation:WordData", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"induction\"][EntityProperty[\"Word\", \
\"Pronunciation\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\",ind'uhkshuhn\"", {
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                 0}], "\"  \"", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{
                    StyleBox[
                    "\"IPA\"", {FontFamily -> "Roboto", FontSize -> 9, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\": \"", 
                    "\"\:02cc\:026and\:02c8\:028ck\:0283\:0259n\""}, 
                   "RowDefault"], "\[NoBreak]", "\")\""}], {
                FontFamily -> "Roboto", FontSize -> 10, 
                 GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}]}, "RowDefault"], LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Hyphenation", "scanner" -> "Data", "id" -> 
     "Hyphenation:WordData", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"induction\"][EntityProperty[\"Word\", \
\"Hyphenation\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"  ", "\"  \"", 
              TemplateBox[{
                StyleBox[
                 RowBox[{"\"in\"", 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    StyleBox["\"\[Hyphen]\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], AutoSpacing -> True], "\"duc\"", 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    StyleBox["\"\[Hyphen]\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], AutoSpacing -> True], "\"tion\""}], 
                 LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0, 
                 ZeroWidthTimes -> True]}, "RowDefault"], 
              StyleBox[
               RowBox[{"\"(\"", "\[NoBreak]", 
                 TemplateBox[{
                   StyleBox[
                    RowBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["9", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"letters\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    StyleBox[
                    StyleBox[
                    "\"  | \"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    GrayLevel[0.6], StripOnInput -> False]}], AutoSpacing -> 
                    True], 
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["3", #& ], "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"syllables\"", {
                    FontFamily -> "Roboto", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False]}], 
                    LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                    0]}, "RowDefault"], "\[NoBreak]", "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "RowWithSeparators"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Word frequency history", "scanner" -> "Data", "id" -> 
     "BookMatchFrequency:WordData", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"WordData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                GraphicsComplexBox[CompressedData["
1:eJxNm3c8l/v/xjMqSSpKSJLs8SkrctCHJCMlpVDJKqSsyMhKGZEoM4TKaiF7
ZM8oWUlCNkVlpUj5nXN+3/O+6p/zePY4h/u+3/d1PV/v+77PNlNb3TO0y5Yt
M6Vbtuyff6Z+DLdiP7aiUpHx7QO7XxLUFy3LM2IkwceTrPN4mMDZazwuS40t
J7zeS/fRQjW4q4srtiYebP/qtsaWy+CLj34VuhwFu4SIhQdQwJqrV4rxr15e
uex/fwLsO3xrhugJh9kcvjtdDr53MZS7/S6Y06zapNAZbPLxganoUTCroQv/
PXFwXes63caVYI2Bowo+Q3SEZbuDxxRKwdPnHXSvxYA5xrQ8X18Eq1h/ZH2t
DZbzlbQ4IQKOuW7nPk4HbuAzPMTQR0t4sW7ljXfPwXf0HgWmR4Lp3X6orbsI
7gr4q8bpADg7QeVpiADYQPub7i46sPVwXFFfNw1hzQ2THzYVgsW0VtrSRdJU
MjzhMjQv5qG6nmctn7YFh/M1NtkcAHPWOSd84QfbLGsW/0kDrlae4H/eu4yw
34VfH7wLwBt3Fh1vDQev67G+JWizjBzPmtv90hLq4Lc9tJF1fGBOIUmHqsWl
iv94W2Wu1PpcsPj5ivo6G/C68bx+X17wzSi6S6fe/yY8yC5/U+Hm74oURjV+
J9pPexQe/XC9pgLeacXcP/zzF+HFxTUvD2aAzUrNJVsswPeOJnOd4AQPLlzo
0m5aJFzeFMxq6A92co5qviAPrtH+wRA7/bOCg/4Ys3hWzR4O6f4NEk/Aql+z
k5pOgxk7ezJ82cGpEVNKqo0LhDXMgu9Ze4H9jLy9nsiBYyin+mfH5/Hvi90q
PZY0X2HzgOb5cpbOPb92a9tuMwIHcM08mFkPThebPPKh4Qfhx+vf+rd6gPfy
bZT9IAP+oPa+8OjX74SPKAWVt9wHm5rdVrE88b0iwOxUtxpd8x71U1fVVzCD
JS0Wt62pnCOcH//ykvhl8IbHfof0KGCm4agHkSPfCDPskGikJoLfa+dcmj4C
1oi5ebeE6VsFe37Lsl7a/j0hxbrqoWWzhN9NxNc2XgSXaqmU84iD3bxeK3r0
zRBu6cveNRMNFtfloWvVBRtHXzpSsAJMYeLbWlA2XSFjVKTBRDu1p+1osU2Z
A5i18eHuPhGw/mGeTquhKcKOT7wXFqLAojJy0ck64MLb7wqP04G1ltFlOORP
EnaJvbo11W6yIuvu19RaLRqqx+ovrIPbwbt1T6+0L/hK+MrT6eDPomCXLAMu
17AvhJNZbO/JLgd7c+lTllt/Jmyudtg0qW2CsGfjjxuX1MBqCxfLjj8dr+g7
FBxlw/Jzj+q1u2PW3OCp/BiOkKufCKeuTpu6Ov6RcFiRWfnjU2Bx1pnIgaox
wr9qd5ofkAZ3xHh2+qeOEjZiTzzayjxa8U3oZEjlNzoq15Rt3SHvEcIBF1lV
uoeHCf/aWGcmfxCcxirs3lg+RJim2CjOWhAcWqKSrRQ9SFiob5f94Gqw7ZPf
u6IuDlQMN/O+n/dcSZ1oc5zxGO4nvCm5NP+iFtilJc8hrriP8MCWsvZICvib
4C4PquiHiu55z3PPHVmptxs0lQrX9BK+Ub5irU5nN+HouQHxwLT3hNcNbpYX
Ce6qMPnnB7qyUod5F/XGDN4RFuDYfZrpr07CLoci89q2va1Y+Pc/30QVfBez
pXDyDWEVjkV7+vZ2wkVP6DsuJLRVbEjf3+8WzkFV9RYPcLNrJSzPmC34Wa+l
4krE3qDzFuzU4NEPHR7bmwlHz7WOjDE2EW6ult7DktD4v/t7K1WU9a2Uj9IL
wqeaJOlKV9RV6O/Oqb+kxE3V2NkzJZNQTXjNErXY1biyIvLvHzdazEud1R7m
oRcvJyzqn6kVEVZcISDxt9FitlG3Hli1uog7n7Cf0RLDcc2sipg7//wRoloO
THjScjwmzFdcfsyPev9/672DevNU/PFvh29V/HO6Gyh8VGqwyNoznSrK//H+
5cG1avy3lf+m9P0m/FSx8o25s9H3CR/RXIplc3+s/Pd0pch4nI/6gustLV9I
FmHecHGvDI18ZY89f1+BVdupjRLr1R5kFRNeViFqEaJYruzP9q7pe9g2qop7
hA6NayXhhtBMTtmhamX7fwc4PuoO/iB1AdU6wiUHnsRqXH6h/Lvd5aPAs63U
W688X+8caCQc3B8ldICnSXnPvwuwlZotX+AQKtxMWEXCo6LbsEV5478nzEc9
Yz/MW+XcSljUKMUx6EmbcgG37/jhAkHqB8b9Lpnv2wkL0gTdtJ17o1z4D8sJ
UlmSBCPWCb8lfCvUIl1rf6fy5X9vKBHqbwV/18HT7wivjVySPhXapfz3Yvy9
InzUbLnNdPZP3hP+6R9ScbavW3ngn+vdL0B9y5N6e26pR3n1Pxc4UIB6zzV+
4yDHB8L+e5yrO/n7lLf+c3jcAtSVo3Yrg3PA74YiVSQP9Sv/i8uFqPcrn3Qs
HwXL7NvgmOI4oPzv4W0Qo3Jyp62SYx4k/CI2OC3y7qCy8D+3j5A41XbeNHG7
yBDhs0/NQ+9VDv3/z/MVpwquKLg+oTNMWD5X9rLQ+LDyxD9oTaGqqqbW3PYZ
+d/1oFDZXSw5GtaOElaiPXZmOm1U+d/lLhGkUiQiikZlx5Tt/v0LQapt3jKG
plbw6uQjbN7mHwkXnNK+YaCK/cUc18ZUb2XsB0xecfR1cGE/YFX6Rf/bd8zr
Xe5q2osNmF+LMy6nBqeCW08Eb/rpg3m0qel97MMUzJu3V4TNul8B38wXMBM7
gfnykHLP46nfmA/lOrlpX+WAQ004rhlbYj7kfMAyPWiM+e3uQN35a2yLZJ76
Wj7BfPY15rPQWptMHRbMXw7i31/z12Oe2i71lU3hCviOipQi6wvMR13NN2m2
eGEe0usL3JcvDXYonU7kcMM8w+K4jVF/J3ji0eS0wAjmFTUnLdEaMcwf+3W1
d8sNThP2zvxa+9cdzBs+GjbSZ3owLwxo7x1lCge7tRVw7NPEvDDFkOy8Jhg+
HzDdJTA6D3/vK2No7z8D/pR5nPvTZ/g3xiCETfwE/FtCz8B8qw7+7W5SYFmv
C18eqOU8WlIGX1LKd0cEioGffi96wOEEH3ZLGLLKVn8grOpa3uMeBx+2n1+S
6uKE/xZomdSvz8B3K+JjDN0a4LtDOaOMdulvCeuEs59Tu95B/Cbt2lhnZAr/
/TZdxle4u534zYuNY8fsSvhvz77Jt1KDLYSHXDS8cp/Dd+9MNTSnhV4Tzumh
C/vV/pL47fe47+4GmwbC1ZPXNify1hM+suS/MN9aQ3z3eFNIx1uvKsLeAqxf
StUqiO8Cb5XUNs2VEL8lfzz5WNCgkLCuHn1gQE4O4aLXTuqdHRnEd7VNHeeq
n6QQ341/DKG98jGGMN8q/h2Sxd7Ef88MVnxd9dyH+K9Z5SR79ONY4juqb2Ca
L2Mq8du8sXValEAm4Uv6tBVWEznEb3OmCabCnoWERwykGfvZSgnfi+87oX6i
gvjOb8UDmbj0KsKLXXefUTbUEt/NFWyezj9dT1gwOEKmJL2B+C7k+Gp3JZpX
hN1E6f3zdr8mvlvI5YzZVQn/HT0sMX3oI/xXP1qjJcjSRtg359LcFlX4jm6F
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
+XCQpg4/lkE+/vv/v/473/++z/yP/w8ED/DS
                 "], {{{}, {
                    EdgeForm[], 
                    Directive[
                    Opacity[0.05], 
                    Hue[0.67, 0.6, 0.6]], 
                    GraphicsGroupBox[{
                    
                    PolygonBox[{{1, 865, 671, 774, 414, 521, 9, 202, 8, 7, 6, 
                    5, 4, 3, 2, 201}}], 
                    
                    PolygonBox[{{776, 798, 571, 663, 367, 445, 209, 316, 41, 
                    208, 40, 39, 38, 37, 36, 35, 207, 34, 495, 366, 727, 593, 
                    830, 675}}], 
                    PolygonBox[CompressedData["
1:eJwl1nfc1lMcxvG7ksxQkmRVRlK0h6SSkmhpiVI9KhSSkJWyadEQDWSlQoho
GBmF7JGRIi1FyI4i7+vVH5/X5/ucc51z/+7fGfdTqWjQmZcULxQKxfC8onqJ
QqEIb/m7gcY3uT4v5d7aN8kcx1fyC9gNLXGfzGeoh4FYIj+N6+Zv/T9xR+OW
qQ/hE3gSBmhfgDfk6/DrXEr7VHV3uW/UR3NvfgLLtVfn2nwhXpOfwrXwIy7I
c+jvgCbGPcSleL72CupX5WuqF/NkPh6bcT7a5ztxG/mX1QfwgXwTXpE/Tt/L
fC/XwPo8P06Rm8v78A/aG6n78/N4Sb46v8j38LF5bv3fcwf5t9UHc0O+G/20
z8Mi+Wq8kK/Qvis+zmehsfz9XJInyXyKY9A371K+Ks/nkplTfZbc1+qjuBc/
jk/yLHm3fB5ekD8qz8y7aJ+oXsXn4mTjZvPe/LH2auojuSjPKj+Bj8Am9EE7
/c/lu3N51DLuRv417fJV9D3L47kyNqI32up/Nu8q7x41jbuBf8Fc+Ur6nuFx
fHjWWvt3WbfsV3VFbpBnRy/tc/G0/GH8FN/Fh2at9W/I3ub6wbgJvCPfN5+B
OfKH8JNcQvud6pXcE83lZ/Fe/FHefdaQe+IJ+Yr8OBfXPlb9FfdAM/mZvCd/
qL2q+iDugdnyFXhWzqL2Mepz+IO8F/kl6gp8dObEgenHTPny/FghH1gojFaf
ze/nTGXNUc+4Mbwt7zX9mCFejh/lHTwq503/ezmDWV/UNW40/4P9049H5Mvy
w/wfj8z+0v9uziIfgTrGjeK/USb9eEh+P36Q7+B9877k1skcy/35GazPHcLd
snaYLr8PP8C3c+m8L/m1MtW4Hz+NdblruGvWGvfL78338eXa/1V3ynqpD+cW
ubNwm/Z3sBe6YJr8njyVt/Ot6Ca/Iu+Eu/FjWKa9Cu/BnTFF/hbeHWvzWThD
/xw+zbhF6nJcjkdgsvxu+u7lbXwzump/m1/lyrnj5Efy1txh2s/EPfK78iS+
iUtmH8itkTmG+/JTWKO9DnfMHsbdOdc8kYdkTdUf5mzjBOOm8S45p9rfQonc
T5iQbcXj+bKsqfqDnAE0kp/KJXJOc55QLOcR4wo7f1TuohG8g8+T/Tb3g/zS
7H2uzePRLmcHd2ZfYSz+xRj0ktsoU4MHF9/5O7VVthkP56XYLteWR+d9YhSu
9/c/vDprgdNz93Fr8yzMnub9MwdGyv2dvYmt2Wv4S3YYvtTfBU3lZ2TNcx61
V1L/JXe6+jb+E7fij+wFXKr/T33vZywaGjeFi/N1OZ/4Xa5N1j/riRvxG27I
PNqvzb6Q/yJnizvzo3g9d2DuVLnT1CP4FwzP98YwbMF1uEb/z/ytfBFamGcO
l87vq75a6ta5g/J5cj9lDK7GVRiKK/M7hB9zntInu5m/5lNzdsy13DxVuA0/
iFnay/IQuR+yfzA47wWDcAkuxve4KJ8lv4lXcaucG2NnZn5zLlCX5TJ8PQbK
bcQAXIgLcD76ox/64rvsuVh+EFoZPy93Ev9u3pPUQ3NvYYNcSy7i9eiD3tl7
OBc90QPrcE6e3djf5N/jJmhgzslcLP8b5QznHpA7Jfctr0F3nIVu6Iou6Jx1
QSf8KntF7g7zLM6eNdfi3PV8GN+B1XItchfwN+iIDmiPdjkDOCPrkn2ZtZJd
xWebY7XxVbkPP4mV+mrmDsjvB9rIrcx+QmucilZ5L/ke+CqfnftDdkX+5ua5
/8z5ae4sbs3TMUP7fplb7ks0RzM0xUloghPxBRpnb8h/zityrrPm2ec8n/fF
8eYexltyX8l9hkZoiAaoj3qoizpYjtpZO+M2GPM/0TtTPQ==
                    "]]}]}, {}, {}}, {{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$758040#1"]& ]}}], {}}, {
               GridLines -> Dynamic[
                  Join[{{{-1.26227808*^10, 
                    Directive[
                    GrayLevel[0.9]]}, {-9.4671072*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-6.3113472*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {0., 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {6.3114336*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, {0, 5, 10, 15, 20, 25}}, 
                   Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x$, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y$, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x$, 
                    GrayLevel[0.7]}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y$, 
                    GrayLevel[0.7]}}}}], 2]], FrameTicks -> {{{{0., 
                    FormBox[
                    TagBox["0", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {5., 
                    FormBox[
                    TagBox["5", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {10., 
                    FormBox[
                    TagBox["10", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {15., 
                    FormBox[
                    TagBox["15", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {20., 
                    FormBox[
                    TagBox["20", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {1., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {4., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {6., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {7., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {8., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {9., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {11., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {12., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {13., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {14., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {16., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {17., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {18., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {19., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}, {{0., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {5., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {10., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {15., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {20., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {1., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {2., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {3., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {4., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {6., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {7., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {8., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {9., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {11., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {12., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {13., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {14., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {16., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {17., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {18., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {19., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}}, {{{-1.26227808*^10, 
                    FormBox[
                    StyleBox["\"1500\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-9.4671072*^9, 
                    FormBox[
                    StyleBox["\"1600\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-6.3113472*^9, 
                    FormBox[
                    StyleBox["\"1700\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-3.1556736*^9, 
                    FormBox[
                    StyleBox["\"1800\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {0., 
                    FormBox[
                    StyleBox["\"1900\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    StyleBox["\"2000\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {6.3114336*^9, 
                    FormBox[
                    StyleBox["\"2100\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}}, {{-1.26227808*^10, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-9.4671072*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-6.3113472*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {0., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {6.3114336*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {-1.26227808*^10, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-1.19917152*^10, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-1.13605632*^10, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-1.07294112*^10, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-1.00982592*^10, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-9.4671072*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-9.4671072*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-8.8359552*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-8.2048032*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-7.5736512*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-6.9424992*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-6.3113472*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-6.3113472*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-5.6802816*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-5.0491296*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-4.4179776*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-2.524608*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-1.893456*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-1.262304*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {-6.31152*^8, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {0., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {0., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {6.310656*^8, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {1.2622176*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {1.8933696*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.5245216*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {4.4179776*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {5.0491296*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {5.6802816*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {6.3114336*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}}}}, ImagePadding -> All, 
                GridLines -> {{{-1.26227808*^10, 
                    Directive[
                    GrayLevel[0.9]]}, {-9.4671072*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-6.3113472*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {0., 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {6.3114336*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, PlotRangePadding -> None, 
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {{0., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {5., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {10., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {15., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {20., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {6., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {7., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {8., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {9., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {11., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {12., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {13., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {14., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {16., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {17., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {18., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {19., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {21., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {22., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {23., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {24., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {25., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}}}, {Automatic, {{-1.*^10, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-7.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-5.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-2.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {0., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-1.25*^10, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-1.2*^10, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-1.15*^10, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-1.1*^10, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-1.05*^10, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-9.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-9.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-8.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-8.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-7.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-6.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-6.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-5.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-4.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-4.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-3.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-3.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-2.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-1.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-1.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-5.*^8, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {5.*^8, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {5.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}}}}, 
                GridLines -> {{{-1.26227808*^10, 
                    Directive[
                    GrayLevel[0.9]]}, {-9.4671072*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-6.3113472*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {0., 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {6.3114336*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, DisplayFunction -> 
                Identity, PlotRangePadding -> {{None, None}, {None, None}}, 
                PlotRangeClipping -> True, ImagePadding -> All, 
                DisplayFunction -> Identity, AspectRatio -> 0.2, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, AxesStyle -> Directive[
                  GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                  FontOpacity -> 1], BaseStyle -> AbsoluteThickness[1], 
                DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                  FontOpacity -> 1], 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {{{-1.26227808*^10, 
                    Directive[
                    GrayLevel[0.9]]}, {-9.4671072*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-6.3113472*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {-3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {0., 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {6.3114336*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, GridLinesStyle -> 
                GrayLevel[0.9], ImageSize -> Scaled[0.75], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultMeshStyle" -> PointSize[Medium], 
                  "PointSizeFunction" -> "SmallPointSize", "ScalingFunctions" -> 
                  None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}, "AxesInFront" -> True}, 
                PlotRange -> {{-1.1991715200000267`*^10, 
                  3.408134400000076*^9}, {0, 20.688499999999998`}}, 
                PlotRangeClipping -> True, 
                PlotRangePadding -> {{None, None}, {None, None}}, Prolog -> {
                  Opacity[0], 
                  TagBox[
                   RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "DatePlot", "Frame"]& ]}, 
                Ticks -> {Automatic, Automatic}}], 
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"from \"", 
                    FormBox[
                    TagBox["\"1540\"", Identity], TraditionalForm], 
                    "\" to \"", 
                    FormBox[
                    TagBox["\"2008\"", Identity], TraditionalForm]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], 
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"in occurrences per million words per year\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}}], "Grid"]}, 
             "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  
                  ItemBox[#2, Alignment -> {Left, Inherited}, 
                   DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Roboto", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", 
                  RowBox[{"{", #2, "}"}], ",", 
                  TemplateBox[{
                    GridBox[{{
                    StyleBox[
                    "Bottom", FontFamily -> "Roboto", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Left", FontFamily -> "Roboto", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                   DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                   InterpretationFunction -> (#& )]}], "]"}]& )], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"computabledata,formatteddata,timeseriesdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Linear scale", "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Linear scale", "input" -> 
           "BookMatchFrequency:WordData__Linear scale"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Log scale", "input" -> 
           "BookMatchFrequency:WordData__Log scale"}, {}]}], 
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Binned", "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Binned", "input" -> 
           "BookMatchFrequency:WordData__Binned"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Raw", "input" -> 
           "BookMatchFrequency:WordData__Raw"}, {}]}]}], 
     XMLElement["definitions", {"count" -> "1"}, {
       XMLElement[
       "definition", {
        "word" -> "Word frequency history", "desc" -> 
         "based on a Google Books sample of one million books in English; \
Michel, J.-B., Y. K. Shen, A. P. Aiden, A. Veres, M. K. Gray, The Google \
Books Team, J. P. Pickett, D. Hoiberg, D. Clancy, P. Norvig, J. Orwant, S. \
Pinker, M. A. Nowak, and E. L. Aiden. \"Quantitative Analysis of Culture \
Using Millions of Digitized Books.\" Science 331 (2011)"}, {}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Inflected form", "scanner" -> "Data", "id" -> 
     "InflectedForms:WordData", "position" -> "600", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"induction\"][EntityProperty[\"Word\", \
\"InflectedForms\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["\"inductions\"", TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Synonyms", "scanner" -> "Data", "id" -> 
     "Synonyms:WordData", "position" -> "100", "error" -> "false", 
     "numsubpods" -> "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"induction\"][EntityProperty[\"Word\", \
\"SynonymsList\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               RowBox[{
                 FormBox[
                  TagBox[
                   TagBox["\"initiation\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "initiation"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"installation\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "installation"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"inductance\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "inductance"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"generalisation\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "generalisation"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"generalization\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "generalization"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"inductive reasoning\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "inductive reasoning"}]], 
                   Identity], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"elicitation\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "elicitation"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"evocation\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "evocation"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"trigger\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "trigger"}]], Identity], 
                  TraditionalForm]}], "   ", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{" ", "\"total:\"", "9"}, "RowWithSeparator"], 
                  "\[NoBreak]", "\")\""}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[
             TagBox[
              GraphicsGroupBox[{
                GraphicsComplexBox[CompressedData["
1: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
                 "], {
                  GrayLevel[0.5], 
                  GrayLevel[0.6], 
                  LineBox[CompressedData["
1:eJwVxed60zAUANDgYktc2fJtGWaIC63EsHwRezSmCcuslpXBbIGEPcve8+14
LODH+c70eLk3jlqt1p9//r8iiuIomYhWRnEvruN+PIiHSZ30k0EyFFKsEiCU
SEUmtMgFykk5JVfLNXKtBKlkKjOpZS4R3oKCFN7Be/gAHyEDDTmg+qxSlSmt
coXqS5qlOs1TzHSWZ6hzjTnid/yBP/EX/p6EdUXRFKeLM+uLDcVGtckYNvfM
ffPABPNwM9EClXSBLtIl8uSoIkNMgS7TlS20FaZhxs44u8PutGRL662zlTWW
7S4b7G67x1XOOHa3XdhG223pS1dWpSm5DN75xlfeePaLfskHrytTcRX4MT/h
wE/52V7eV+yHA+4gHFKH1RE1256t23X7eN2vfd3U+ijPdea6x8wJd5JPQTNq
Ok33rDvH59U89ZLB8CpeU9f1DbwZbtWLS3fMXR51Rt0xPOLn+EK9xGV4FV7D
G/iEX/Eb/gW++0Hw
                   "]]}, {}], {
                 GrayLevel[0.6], {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{5.474874334803431, 8.550799723377484}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{5.423024165050267, 7.661753391550774}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{5.211591574323586, 8.470753801416192}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{5.730119571450375, 8.438435170069374}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{5.29095369898012, 6.487976443354015}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{5.409634399929041, 6.473916669654524}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{8.446660022785135, 4.448312109737857}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{8.39626700499702, 4.080643729455557}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{8.178222394484003, 5.0465003362373855`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{9.073590644440095, 5.069632326965581}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{9.303491150957868, 4.228262128807138}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{8.562373096184285, 4.347603484737386}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{8.54604615288131, 4.227414988226617}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{7.222023458146362, 4.374539057197859}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{8.43703327164711, 4.295499859112483}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{8.993856170608563, 3.5042167120285552`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{8.819105452549348, 4.685018900190498}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{7.824192536070335, 3.9602253177107345`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{8.088537414332453, 3.345340287756212}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{7.921453233567085, 3.5903742443629176`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{8.359341176539141, 3.3783059642855124`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{4.178265254802668, 0.25672672943382935`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{4.1263620659081575`, 0.9465115193202998}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{3.603233169996634, 0.2924321827197751}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{4.229307995092071, 0.}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{10.031314657453105`, 4.549966822846486}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{2.484219668991854, 5.592023023762923}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{2.1345149545012867`, 4.8617076690475844`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{0.37722157417686475`, 3.4308488850800085`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{1.3829548697534126`, 3.898005977411975}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{0.6030732474606841, 3.6140510508539623`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{8.864595241060314, 5.965916781777734}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{9.837399078494341, 5.912266639251103}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{1.5025983911765604`, 4.470485996067453}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{1.7527404384640666`, 5.030202762789983}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{1.9798815351756365`, 4.100578014259928}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{0.4930351993592419, 3.2483988248811286`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{1.190985101684026, 5.990376652887293}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{1.4097630538738977`, 6.021924070985546}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{1.6477545106756653`, 5.996253999656323}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{2.065876470595949, 4.5137785611990715`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{3.371896010297133, 4.369652581159904}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{2.0280753010614347`, 4.409038751194953}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{1.170098653393854, 4.7453534434769775`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{1.3476402364881928`, 5.715821068999933}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{2.171557710887551, 4.41036384565771}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{1.0751128622165576`, 5.530122688493922}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{1.0151409271289351`, 5.781777209349615}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{0.05938990029290547, 4.635173184560535}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{3.864348224809497, 0.014594614071918421`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{10.068198422620203`, 5.480369564211797}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{1.974462237978369, 3.4348317730673443`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{9.223471819569617, 5.6996593280800045`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{10.416296380518393`, 4.099542089336548}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{10.169209215011994`, 4.2508564657125385`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{10.30863895991421, 4.582503526360926}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{5.25183129370503, 5.408645832733054}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{4.964200260142754, 5.684074725244848}]}, {}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{0.3746709272251998, 4.704790095907244}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{4.576684387747898, 1.662237470902935}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{4.3574733583336, 2.1621822186692916`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{4.606643817071062, 2.208239264110817}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{1.89846486588185, 5.5312058681522975`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{4.701501572015609, 6.313987968663806}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{1.5940585732176644`, 3.45857095033402}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{0.09149180280487013, 5.201101456265092}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{9.115914143482572, 6.009238802985976}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{4.345848764498717, 3.015574734907956}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{3.866976929884443, 0.30278289524007906`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{4.518838766500572, 0.22607834485633482`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{1.7667850550446946`, 3.208232987973714}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{0.23343850474651706`, 4.941425709153798}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{9.938039819369582, 3.795934103183253}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{0.7928347783052345, 3.3993656139075417`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{0.8458873430036968, 2.976114884609019}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{0.3028466916883694, 3.659423493681477}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{1.136028073161854, 2.918593911097151}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{0.6656898367455426, 3.1048239826330652`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{0.45409358427388735`, 3.8650742770235667`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{1.0595541746944148`, 3.169821785509988}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{5.1853792750896615`, 7.034040197378573}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{5.341922684061311, 5.9072851427427455`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{5.644995977696056, 6.959154659863883}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{5.4495427929421645`, 7.048696267892642}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{9.788756607778108, 2.706916648959866}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{10.335817854563935`, 3.892266012847576}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{6.809486953167584, 4.414582872009528}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{9.979019102533872, 3.167861619819908}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{2.4282736788361143`, 4.995377320680823}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{4.877709446556457, 5.004782052467483}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{3.804695367059905, 4.088027022706366}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{3.6372294791027056`, 3.8628387553475876`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{2.1120542989361537`, 3.200197370934204}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{2.6787337408786467`, 4.610527114215144}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{0., 4.894811557719826}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{4.41607482432744, 2.4377956207079468`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{10.085537858992861`, 5.249865202093719}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{2.281287623053251, 5.751675427213807}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{1.5384410783287925`, 4.879529013368259}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{2.743838258419153, 5.074426778203351}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{2.039278321217106, 5.789048632866907}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{0.4962440330550244, 5.068880614311691}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{0.17437355246276898`, 4.447079951495151}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{0.3168697264412428, 5.272692806575076}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{0.5539066683289464, 5.451146927868813}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{0.3137072303821187, 5.5135764983717745`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{8.721037633902846, 2.703717180582623}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{10.434902012592751`, 4.352452194674365}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{9.595136424237126, 2.592685729009853}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{9.826566566901942, 5.181709607701013}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{2.4379924949044307`, 3.744932453759212}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{9.34155192367803, 6.115411820299575}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{9.604496246588106, 6.033301416642756}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{9.771113298991319, 5.616336027299082}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{10.017477026068809`, 5.694469766543946}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{9.553049352617645, 5.464565559731114}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{9.503707114764692, 5.801558886310524}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{8.818970793589758, 5.699242592111316}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{9.369572125104554, 2.4926346339054337`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{9.946906081356197, 4.093031936732346}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{10.191516637079712`, 3.7128384264946366`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{9.926685950955653, 2.9361559465366014`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{9.633948161236907, 3.038509158159913}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{9.136646419100499, 2.4854163844611676`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{8.921755752908085, 2.5723617912568604`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{9.679883045500173, 3.2843382150167026`}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{9.18583715450476, 2.802650390571836}]}, {
                  RGBColor[0, 0, 0.7], 
                  PointBox[{9.48068839667715, 2.8615315587525063`}]}}}, 
               ContentSelectable -> True], 
              Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJw9lXk01Qkfxq99v+5+3Yi7qZcSZa2M36MsJU2SFmsiKoZGC1FjuXllK4lQ
qSbUlGSk5ZJM1pRlMpYUIxWu0GQpZCmv95z3vN9zvuf5+/s8z/l8eT4Hnf2k
SSRSzML+VynVS47aSpgoXtQdKL2IB2lLPcLgLhM6g26FOde10elkGHr7FQNi
TmCe/BgXtFXyYXnDLBx+xEmLeMuFM8O8ZkSPCUpxrUbRZw44qpbGYblMaD5z
OeDQz4HkvMfVoj4urCX+LrQGKnz7bEW99VwEnaHZpjtTcOKQ+RThzsV8avmz
y4YMtDnbFdzR5UOB8CjebM9A1ozhSt9LfOxP/Vdy+SAF8nHNniM6PHQWzeqP
+1JxPzTGI43NQ7tZbHjPBwo6y8jabr1aWDNxQ/9UFBVfp1e2VvVwsSek62Tm
CipYPpvEnXM8KNFFtTmKqgh1Na3fk8uDdodp1tFyGjS0m7nTm3TQ+UaUnVio
DpH6jacuBlyUrH1RY12tDIuusoOpv+tg9uQTHqtUFd8KaamzYi7CBmTsa+VV
MJZSrp/0kIJo17Jx0+BmwkanmOwXQwE3LSuuZeMn4s/ZU4OBraqooNuGm4pb
iNE4svjFEAWk/438pqRwRYoQo8ol0frGNCw2bk0p7JFBjV7GhrVeLPgRaWkn
6FJwYNVG+h6iI7pLc8JP+IrwiAyTeB9SAX+CtfE8d5JIfipbtdhQHV+/eNp4
O/YSCqPDWWmDqrBYv3pNwSMevM6NbeR0s9GTf/DckwIBete1rta7wYaFtHN2
nvJXomJnKaPuHRV8+9dnVqvMEUaPOOH/aDNQlVCyLuvOPHG91v7jN38KKBnW
ot7TPcTZ9sF/l8wpQYPz91478mfir180HXUn2cifML/ve2aSMDgZtf4wSwNf
ZA63G3vOEBLecmn9OTZKNphZDcWRkD2WMaVJpuHS4OnLedPKGOhsMImLoOIt
TScpajUJm8Uf1bpyqHAqzfAsLRkn7OrefPphlgbK632mIykTRF9qzSpSNwtT
mgY3XHdLYbGVKNAsjwqb/MCkW8ZjRE3DvuOvtFlYfuHOAVmrUaL4ZqBJIpeN
aJkxL7f9hYT9SNfLgEQaihxH/A2HyCC1sMfqek8T9ee3DwzxhbDiV873DzNx
qNtE7Jc5T5CK8hgJESrQWjfdH3CIj5y6u5GHG1mgJWY2CtuFyF6U4PHJjwL6
Vk5mzg4hBiU/x74lUVFm8v2j3BUhDnM+NR13ocHcQZnyVoqJxtFstSM5TBwI
5jrt7KIj/vk9ZuRjFjq28RXS8xlYnuR6wL2eDgQ31lya6SBE3Xcj7/9FQ/2k
rlvcjzRMBh7fGpc1Q5SMzEWqBVOxLHDQaImjFIzPBiiZBNHQW/9hV3i+FJ4y
pu9qeX8nDK95BH/RYcHiQmbQjj9pOPH9vXqcNQcRat9T1sdME555DGLpbRVU
CCWPpX4SE1d32Sf+08RAapMVx3UtHxCf6z+qpAGzhHsGS3yoyM6Iv96vo4ju
4coLqSNknFUyEzV4txK7qBbHHOg0YPyPbP5oI6F4c2Bfhc0coeWZSA7NVwK3
pFLT6V0TcUz8jiNXQ4eIvr3S7q0AWUlTxTSvhRwiIpUHvAaJMaWdFyQrVRCf
u3G7iDpMVNkxnJkvFFBhxmV37Gklbl3Sao2yU0MN63XtMoNxYv/je9X2rgog
WVfXumzuJ6omn3+581IRRQMhCW/Uu4lfA2QoBcNkNIYoM0Y+jxJbtpjHNbgr
gR6WQmkrZ4A7OR3cxdeCvvnADNeLiTUf4K5+jQ1redfW8HQWon6/mrv8pSYs
3ZeOuzQyIadrcbB7pRa8WiYGOtIESLQSDVX/JoeCU55bR28LMcyR9fQQqENy
7rXukKUmZlXTDsTfpCKHOfDNekKAIOW17XU7lVD8gF+xKEgGO2WtVtrM0nHD
/936p6KFPrRoZvTLMvBYW6Ij+zMZlyoiKwVuFCTvktSocNRw+uRuKY0BMh4e
CSg90U9C+Tp7htRFJTTqXPmiEiyHLdF0uRUhtP9zxnyCd3xj+oLf9xpj1fOp
2Lsi8dvFaBkE99peaVgmRPrF7lt/zzNgYFNYSoc0NnnImoil2GB99N175PJX
QtZ4DLmxdFD2qoTv+SyHya0J8WaODLSfVlwa4kRCYdhez7mlbOCy8fbQqh7C
0qguN95uwdeHZ7x7tj4lGsJvbXvxnAojlvJkpn0bUeB97Jklm4kPDkYRF0vf
EaXJrUenm5hozqn4pY7eRnwn+cxL1FhIzrJ+tSyEh+L3vHCza3Jo40hH3H4j
RKK2/5rB/VREn7xT8sBIgLbVUzIt5bJYcvVWmfFvAsTWuTJpjxjYQUk2lY6R
QdH8Ed2rE2oQ6Tf29RTy8UBxaeyKUA0INxvHR5sKEHn2hxoOXwPb3Ss9XiQu
5OOTU88NY8G4ofDJuKIQzWGLmYI6Flbw+zfoaQoQc26KJu5iIsWNJ+mXEmA/
y2GBYGxU3m0SOC38l0g3Wcgv8KGooPyMRTkf6VKOQUOjMui7LO5p7hNg7HtG
9frdFPg3TIeRfYQwkVHK6bunhibFR+mhnQJwr69yIX5RgO8fYZ3pNgv36Ip7
u39UxMDmmdhJWz6cfrWe472XQal9mddoBw9jP5kHrkqXhT858BrHQ4CoeePF
2+yUkT6hp7pkNx9H5JqmWgPloZ6pXa81yceAKOBmQJ88/gOeGG9w
                "]]& ], {GridLines -> Dynamic[
                Map[{{#, 
                   GrayLevel[0.7]}}& , 
                 MousePosition[{"Graphics", Graphics}, None]]], 
              Method -> {"GridLinesInFront" -> True}, ImageSize -> {440.}, 
              FrameTicks -> None, PlotRange -> All, PlotRangePadding -> 
              Scaled[0.1], AspectRatio -> Automatic, 
              ImageSize -> {{550}, {200}}}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Hide synonym network", "input" -> 
         "Synonyms:WordData__Hide synonym network"}, {}], 
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Meanings combined", "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Meanings divided", "input" -> 
           "Synonyms:WordData__Meanings divided"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Meanings combined", "input" -> 
           "Synonyms:WordData__Meanings combined"}, {}]}]}]}], 
   Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Narrower terms", "scanner" -> "Data", "id" -> 
     "Hyponym:WordData", "position" -> "100", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"induction\"][EntityProperty[\"Word\", \
\"NarrowerTermsList\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               RowBox[{
                 FormBox[
                  TagBox[
                   TagBox["\"bar mitzvah\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "bar mitzvah"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"bas mitzvah\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "bas mitzvah"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"bath mitzvah\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "bath mitzvah"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"bat mitzvah\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "bat mitzvah"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"coronation\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "coronation"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"enthronement\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "enthronement"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"enthronisation\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "enthronisation"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"enthronization\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "enthronization"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"inaugural\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "inaugural"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"inauguration\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "inauguration"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"investiture\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "investiture"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"mutual induction\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "mutual induction"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"self\[Hyphen]induction\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "self-induction"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"hypnogenesis\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "hypnogenesis"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"induction of labor\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "induction of labor"}]], Identity],
                   TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 "\"\[Ellipsis]\""}], "   ", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{" ", "\"total:\"", "17"}, "RowWithSeparator"], 
                  "\[NoBreak]", "\")\""}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Meanings combined", "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Meanings divided", "input" -> 
           "Hyponym:WordData__Meanings divided"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Meanings combined", "input" -> 
           "Hyponym:WordData__Meanings combined"}, {}]}], 
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "Hyponym:WordData__More"}, {}]}]}], 
   Typeset`pod9$$ = XMLElement[
   "pod", {"title" -> "Broader terms", "scanner" -> "Data", "id" -> 
     "Hypernym:WordData", "position" -> "900", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"induction\"][EntityProperty[\"Word\", \
\"BroaderTermsList\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               RowBox[{
                 FormBox[
                  TagBox[
                   TagBox["\"ceremonial\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "ceremonial"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"ceremonial occasion\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "ceremonial occasion"}]], 
                   Identity], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"ceremony\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "ceremony"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"observance\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "observance"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"electrical phenomenon\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "electrical phenomenon"}]], 
                   Identity], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"colligation\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "colligation"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"input\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "input"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"stimulant\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "stimulant"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"stimulation\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "stimulation"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"stimulus\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "stimulus"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"debut\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "debut"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"entry\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "entry"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"first appearance\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "first appearance"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"introduction\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "introduction"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"launching\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "launching"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 "\"\[Ellipsis]\""}], "   ", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{" ", "\"total:\"", "18"}, "RowWithSeparator"], 
                  "\[NoBreak]", "\")\""}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Meanings combined", "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Meanings divided", "input" -> 
           "Hypernym:WordData__Meanings divided"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Meanings combined", "input" -> 
           "Hypernym:WordData__Meanings combined"}, {}]}], 
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "Hypernym:WordData__More"}, {}]}]}], 
   Typeset`pod10$$ = XMLElement[
   "pod", {"title" -> "Rhymes", "scanner" -> "Data", "id" -> "Rhyme:WordData",
      "position" -> "1000", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"WordData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 RowBox[{
                   RowBox[{
                    FormBox[
                    TagBox[
                    TagBox["\"abduction\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "abduction"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"conduction\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "conduction"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"construction\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "construction"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"deconstruction\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "deconstruction"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"deduction\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "deduction"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"destruction\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "destruction"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"instruction\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "instruction"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"introduction\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "introduction"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"obstruction\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "obstruction"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"overproduction\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "overproduction"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"production\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "production"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"reconstruction\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "reconstruction"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"reduction\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "reduction"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"reintroduction\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "reintroduction"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    FormBox[
                    TagBox[
                    TagBox["\"reproduction\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "reproduction"}]], Identity], 
                    TraditionalForm], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    "\"\[Ellipsis]\""}], "   ", 
                   StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    
                    TemplateBox[{" ", "\"total:\"", "17"}, 
                    "RowWithSeparator"], "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], LinebreakAdjustments -> {1, 10, 0, 0, 100}, 
                 LineIndent -> 0]}, {
                PaneBox[
                 TagBox[
                  Cell[
                   TextData[{
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", 
                    "\"based on typical American pronunciation\"", 
                    "\[NoBreak]", "\")\""}], TraditionalForm]]], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}]], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 BaseStyle -> {LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "statelist", {
        "count" -> "4", "value" -> "Sorted alphabetically", "delimiters" -> 
         ""}, {
         XMLElement[
         "state", {
          "name" -> "Sorted alphabetically", "input" -> 
           "Rhyme:WordData__Sorted alphabetically"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Sorted by length", "input" -> 
           "Rhyme:WordData__Sorted by length"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Sorted by syllables", "input" -> 
           "Rhyme:WordData__Sorted by syllables"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Sorted by frequency", "input" -> 
           "Rhyme:WordData__Sorted by frequency"}, {}]}], 
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "Rhyme:WordData__More"}, {}]}]}], 
   Typeset`pod11$$ = XMLElement[
   "pod", {"title" -> "Lexically close words", "scanner" -> "Data", "id" -> 
     "LexicallyCloseWords:WordData", "position" -> "1100", "error" -> "false",
      "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"WordData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               RowBox[{
                 FormBox[
                  TagBox[
                   TagBox["\"conduction\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "conduction"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"inducting\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "inducting"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"inductive\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "inductive"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"infection\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "infection"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"injection\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "injection"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"injunction\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "injunction"}]], Identity], 
                  TraditionalForm]}], "   ", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{" ", "\"total:\"", "6"}, "RowWithSeparator"], 
                  "\[NoBreak]", "\")\""}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "statelist", {
        "count" -> "2", "value" -> "Up to 2-letter difference", "delimiters" -> 
         ""}, {
         XMLElement[
         "state", {
          "name" -> "Up to 2-letter difference", "input" -> 
           "LexicallyCloseWords:WordData__Up to 2-letter difference"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Up to 3-letter difference", "input" -> 
           "LexicallyCloseWords:WordData__Up to 3-letter difference"}, \
{}]}]}]}], Typeset`pod12$$ = XMLElement[
   "pod", {"title" -> "Anagrams", "scanner" -> "Data", "id" -> 
     "Anagram:WordData", "position" -> "1200", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", "\"none among common words\"", 
                 "\[NoBreak]", "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              $CellContext`TagBoxWrapper[
              "Missing" -> "WordDataNotAvailable"]], TraditionalForm], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod13$$ = XMLElement[
   "pod", {"title" -> "Phrases", "scanner" -> "Data", "id" -> 
     "Phrase:WordData", "position" -> "1300", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"WordData"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"induction\"][EntityProperty[\"Word\", \
\"Phrase\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               RowBox[{
                 FormBox[
                  TagBox[
                   TagBox["\"coefficient of mutual induction\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    WordData, "coefficient of mutual induction"}]], Identity],
                   TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"coefficient of self induction\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "coefficient of self induction"}]],
                    Identity], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"induction accelerator\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "induction accelerator"}]], 
                   Identity], TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"induction coil\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "induction coil"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"induction heating\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "induction heating"}]], Identity], 
                  TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"magnetic induction\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "magnetic induction"}]], Identity],
                   TraditionalForm], 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                 FormBox[
                  TagBox[
                   TagBox["\"neon induction lamp\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {WordData, "neon induction lamp"}]], 
                   Identity], TraditionalForm]}], "   ", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{" ", "\"total:\"", "7"}, "RowWithSeparator"], 
                  "\[NoBreak]", "\")\""}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod14$$ = XMLElement[
   "pod", {"title" -> "Translations", "scanner" -> "Data", "id" -> 
     "ManyTranslations:TranslationData", "position" -> "1400", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"CountryData"}], "\n    ", 
         XMLElement["microsource", {}, {"LanguageData"}], "\n    ", 
         XMLElement["microsource", {}, {"TranslationData"}], "\n   "}], 
       XMLElement["datasources", {}, {"\n    ", 
         XMLElement["datasource", {}, {"Ethnologue"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                StyleBox[
                 TemplateBox[{
                   FormBox[
                    TagBox[
                    TagBox["\"Spanish\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {LanguageData, "Spanish"}]], Identity], 
                    TraditionalForm], "\": \""}, "RowDefault"], 
                 GrayLevel[0.3], StripOnInput -> False], 
                StyleBox[
                 RowBox[{
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"inducci\[OAcute]n\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"Spanish", "inducci\[OAcute]n"}}]], 
                    Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"medicine - birth\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"inducci\[OAcute]n\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"Spanish", "inducci\[OAcute]n"}}]], 
                    Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"reasoning\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"inducci\[OAcute]n\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"Spanish", "inducci\[OAcute]n"}}]], 
                    Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"mathematics\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"inducci\[OAcute]n\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"Spanish", "inducci\[OAcute]n"}}]], 
                    Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"physics\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"recluta\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {"TranslationData", {"Spanish", "recluta"}}]],
                     Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"military\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"conscripci\[OAcute]n\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"Spanish", "conscripci\[OAcute]n"}}]],
                     Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"military\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"alistamiento\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"Spanish", "alistamiento"}}]], 
                    Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"military\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}], 
                 LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                 0]}, {
                StyleBox[
                 TemplateBox[{
                   FormBox[
                    TagBox[
                    TagBox["\"French\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {LanguageData, "French"}]], Identity], 
                    TraditionalForm], "\": \""}, "RowDefault"], 
                 GrayLevel[0.3], StripOnInput -> False], 
                StyleBox[
                 RowBox[{
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"induction\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"French", "induction"}}]], Identity], 
                    "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"medicine - birth\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"induction\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"French", "induction"}}]], Identity], 
                    "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"reasoning\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"induction\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"French", "induction"}}]], Identity], 
                    "\"  \"", 
                    StyleBox[
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"mathematics\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"induction\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"French", "induction"}}]], Identity], 
                    "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"physics\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"conscription\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"French", "conscription"}}]], 
                    Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"military\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"recrutement\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"French", "recrutement"}}]], 
                    Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"military\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"enr\[OHat]lement\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"French", "enr\[OHat]lement"}}]], 
                    Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"military\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"lev\[EAcute]e\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"French", "lev\[EAcute]e"}}]], 
                    Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"military\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}], 
                 LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                 0]}, {
                StyleBox[
                 TemplateBox[{
                   FormBox[
                    TagBox[
                    TagBox["\"Portuguese\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {LanguageData, "Portuguese"}]], Identity], 
                    TraditionalForm], "\": \""}, "RowDefault"], 
                 GrayLevel[0.3], StripOnInput -> False], 
                StyleBox[
                 RowBox[{
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"indu\[CCedilla]\[ATilde]o\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {
                    "Portuguese", "indu\[CCedilla]\[ATilde]o"}}]], Identity], 
                    "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"medicine - birth\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"indu\[CCedilla]\[ATilde]o\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {
                    "Portuguese", "indu\[CCedilla]\[ATilde]o"}}]], Identity], 
                    "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"reasoning\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"indu\[CCedilla]\[ATilde]o\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {
                    "Portuguese", "indu\[CCedilla]\[ATilde]o"}}]], Identity], 
                    "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"mathematics\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"indu\[CCedilla]\[ATilde]o\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {
                    "Portuguese", "indu\[CCedilla]\[ATilde]o"}}]], Identity], 
                    "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"physics\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    
                    TemplateBox[{
                    "\"alistamento compuls\[OAcute]rio\"", "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"military\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"conscri\[CCedilla]\[ATilde]o\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {
                    "Portuguese", "conscri\[CCedilla]\[ATilde]o"}}]], 
                    Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"military\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"recrutamento\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"Portuguese", "recrutamento"}}]], 
                    Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"military\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}], 
                 LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                 0]}, {
                StyleBox[
                 TemplateBox[{
                   FormBox[
                    TagBox[
                    TagBox["\"German\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {LanguageData, "German"}]], Identity], 
                    TraditionalForm], "\": \""}, "RowDefault"], 
                 GrayLevel[0.3], StripOnInput -> False], 
                StyleBox[
                 RowBox[{
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"Einleitung\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"German", "Einleitung"}}]], Identity],
                     "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"medicine - birth\"", 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"Induktion\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"German", "Induktion"}}]], Identity], 
                    "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"reasoning\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"Induktion\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"German", "Induktion"}}]], Identity], 
                    "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"mathematics\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"Induktion\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"German", "Induktion"}}]], Identity], 
                    "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"physics\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"Einberufung\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"German", "Einberufung"}}]], 
                    Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"military\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"Rekrutierung\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"German", "Rekrutierung"}}]], 
                    Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"military\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"Werbung\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {"TranslationData", {"German", "Werbung"}}]], 
                    Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"military\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"Wehrpflicht\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"German", "Wehrpflicht"}}]], 
                    Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"military\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"Aushebung\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"German", "Aushebung"}}]], Identity], 
                    "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"military\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"Einziehung\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"German", "Einziehung"}}]], Identity],
                     "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"military\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}], 
                 LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                 0]}, {
                StyleBox[
                 TemplateBox[{
                   FormBox[
                    TagBox[
                    TagBox["\"Japanese\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {LanguageData, "Japanese"}]], Identity], 
                    TraditionalForm], "\": \""}, "RowDefault"], 
                 GrayLevel[0.3], StripOnInput -> False], 
                StyleBox[
                 RowBox[{
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"\:5e30\:7d0d\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"Japanese", "\:5e30\:7d0d"}}]], 
                    Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"common noun\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"\:611f\:5fdc\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"Japanese", "\:611f\:5fdc"}}]], 
                    Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"common noun\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"\:63a8\:8ad6\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"Japanese", "\:63a8\:8ad6"}}]], 
                    Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"common noun\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"\:8a98\:5c0e\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"Japanese", "\:8a98\:5c0e"}}]], 
                    Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"common noun\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"\:8a98\:96fb\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"Japanese", "\:8a98\:96fb"}}]], 
                    Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"common noun\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"\:5e30\:7d0d\:6cd5\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"Japanese", "\:5e30\:7d0d\:6cd5"}}]], 
                    Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"common noun\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"\:624b\:89e3\:304d\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {"Japanese", "\:624b\:89e3\:304d"}}]], 
                    Identity], "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"common noun\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
                   StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                   StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox["\"\:611f\:5fdc\:4f5c\:7528\"", 
                    $CellContext`TagBoxWrapper[
                    "Entity" -> {
                    "TranslationData", {
                    "Japanese", "\:611f\:5fdc\:4f5c\:7528"}}]], Identity], 
                    "\"  \"", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"common noun\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}], 
                 LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                 0]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              FrameStyle -> GrayLevel[0.92]], "Grid"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> 
         "ManyTranslations:TranslationData__More"}, {}]}]}], Typeset`pod15$$ =
    XMLElement[
   "pod", {"title" -> "Other notable uses", "scanner" -> "Data", "id" -> 
     "Entities:WordData", "position" -> "1500", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> "Internet domains"}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"InternetData"}], "\n   ", 
         XMLElement["microsource", {}, {"WordData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               FormBox[
                TagBox[
                 TagBox["\"induction.com\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {$CellContext`InternetData, "induction.com"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"induction.org\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {$CellContext`InternetData, "induction.org"}]], 
                 Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"induction.info\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {$CellContext`InternetData, "induction.info"}]],
                  Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"induction.biz\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {$CellContext`InternetData, "induction.biz"}]], 
                 Identity], TraditionalForm]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "15"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod16$$ = XMLElement[
   "pod", {"title" -> "Crossword puzzle clues", "scanner" -> "Data", "id" -> 
     "NYTCrosswordPuzzleClues:WordData", "position" -> "1600", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"WordData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"XWordInfo"}], "\n  "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"Word\", \"induction\"][EntityProperty[\"Word\", \
\"NYTCrosswordPuzzleClues\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            FormBox[
             TagBox[
              StyleBox[
               
               RowBox[{
                "\"(\"", "\[NoBreak]", "\"none\"", "\[NoBreak]", "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              $CellContext`TagBoxWrapper["Missing" -> "None"]], 
             TraditionalForm], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod17$$ = XMLElement[
   "pod", {"title" -> "Scrabble score", "scanner" -> "Data", "id" -> 
     "ScrabbleScore:WordData", "position" -> "1700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"WordData"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               StyleBox[
                TemplateBox[{
                  StyleBox[
                   TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["12", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "12", "SRString" -> "12"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                   LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", "\"International English\"", 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               StyleBox[
                TemplateBox[{
                  StyleBox[
                   TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["12", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "12", "SRString" -> "12"]]}], 
                    Identity], #& , SyntaxForm -> Dot], "Unit", SyntaxForm -> 
                    Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                   LineIndent -> 0, ZeroWidthTimes -> False], "\"  \"", 
                  StyleBox[
                   
                   RowBox[{
                    "\"(\"", "\[NoBreak]", "\"North American English\"", 
                    "\[NoBreak]", "\")\""}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False, False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`aux10$$ = {True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "induction", "template" -> 
        "Assuming \"induction\" is a word${separator}Use as ${desc} or \
${desc} instead", "count" -> "3", "pulldown" -> "false", "default" -> 
        "{\"C\", \"induction\"} -> {\"Word\", \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "Word", "desc" -> "a word", "input" -> 
          "{\"C\", \"induction\"} -> {\"Word\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "ExamplePage", "desc" -> "a general topic", "input" -> 
          "{\"C\", \"induction\"} -> {\"ExamplePage\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "MathWorld", "desc" -> 
          " referring to a mathematical definition", "input" -> 
          "{\"C\", \"induction\"} -> {\"MathWorld\"}"}, {}]}]}], 
    XMLElement["sources", {"count" -> "18"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
AdministrativeDivisionDataSourceInformationNotes.html", "text" -> 
        "Administrative division data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
BookDataSourceInformationNotes.html", "text" -> "Book data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
BridgeDataSourceInformationNotes.html", "text" -> "Bridge data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
BuildingDataSourceInformationNotes.html", "text" -> "Building data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
CityDataSourceInformationNotes.html", "text" -> "City data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
CompanyDataSourceInformationNotes.html", "text" -> "Company data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
CountryDataSourceInformationNotes.html", "text" -> "Country data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
GivenNameDataSourceInformationNotes.html", "text" -> "Given name data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
InternetDataSourceInformationNotes.html", "text" -> "Internet data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
LakeDataSourceInformationNotes.html", "text" -> "Lake data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
LanguageDataSourceInformationNotes.html", "text" -> "Language data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
MountainDataSourceInformationNotes.html", "text" -> "Mountain data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
MovieDataSourceInformationNotes.html", "text" -> "Movie data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
OceanDataSourceInformationNotes.html", "text" -> "Ocean data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
RiverDataSourceInformationNotes.html", "text" -> "River data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
SurnameDataSourceInformationNotes.html", "text" -> "Surname data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
TranslationDataSourceInformationNotes.html", "text" -> 
        "Translation data"}, {}], 
      XMLElement[
      "source", {
       "url" -> 
        "https://www6b3.wolframalpha.com/sources/\
WordDataSourceInformationNotes.html", "text" -> "Word data"}, {}]}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "17", "datatypes" -> 
    "AdministrativeDivision,Book,Bridge,Building,City,Company,Country,\
GivenName,Internet,Lake,Language,Mountain,Movie,Ocean,River,Surname,\
Translation,Word", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
    "2.0300000000000002", "parsetiming" -> "0.07100000000000001", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP6371ddgdeg61266595h0000114285di59g759g6", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "17", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa6381ddgdeg61266595h0000546i375h1aa9263i3454770973695860617", "version" -> 
    "2.6", "inputstring" -> "induction"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2022, 10, 10, 13, 21, 56.2563339`9.5027462631654}, "Line" -> 3,
     "SessionID" -> 19494576396667832503}, Typeset`showpods$$ = {1, 2, 3, 4, 
   5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17}, Typeset`failedpods$$ = {}, 
   Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "induction"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{497., {1168.3544921875, 1173.6455078125}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{3.874411316344678*^9},
 CellID->869344860,ExpressionUUID->"de374020-2b8f-4230-8bbe-f3b9036f129b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Proof Example", "Section",
 CellChangeTimes->{{3.874411348232422*^9, 3.874411350138116*^9}},
 CellID->425100635,ExpressionUUID->"c4d73371-b12a-4210-84cb-6a4af9429812"],

Cell["How do we use this prove ", "Text",
 CellChangeTimes->{{3.8744113422209415`*^9, 3.8744113526856666`*^9}},
 CellID->254444894,ExpressionUUID->"3c5c65ba-8525-4acd-9acf-773100203db9"],

Cell["(\[ForAll] n \[Element] Integers, with n\[GreaterEqual]M)(P(n)).", \
"Text",
 CellChangeTimes->{{3.874411354385*^9, 3.8744113869551945`*^9}},
 CellID->88692720,ExpressionUUID->"53f7d88b-f50a-4843-897b-359e67916465"],

Cell["\<\
Step 1: prove P(M) is true. (Anchor, basis, bottom ladder rung)\
\>", "Text",
 CellChangeTimes->{{3.8744113896735697`*^9, 3.8744114205129733`*^9}},
 CellID->64507219,ExpressionUUID->"402777f1-1b3b-4fdb-a220-9cda7eb7469e"],

Cell["Step 2:Prove for k\[GreaterEqual]M, if P(k) is true then P(k+1) is \
true.", "Text",
 CellChangeTimes->{{3.87441140115735*^9, 3.874411449823965*^9}},
 CellID->321624115,ExpressionUUID->"4121e758-b099-4c19-9df8-67d831c6a0f3"],

Cell["Step 3: Prove23 P(n) is true for n\[GreaterEqual]M.", "Text",
 CellChangeTimes->{{3.8744114543608875`*^9, 3.874411456089693*^9}, {
  3.8744115058100843`*^9, 3.874411519997103*^9}, {3.8744115788207045`*^9, 
  3.874411580147313*^9}},
 CellID->512960162,ExpressionUUID->"75a8f0d8-76cf-46e1-9d63-ed4d5c1902e2"],

Cell["Example:", "Text",
 CellChangeTimes->{{3.874411521941506*^9, 3.874411523191677*^9}},
 CellID->379211034,ExpressionUUID->"3addac6c-b634-4c02-ab35-de12fb3831e9"],

Cell[TextData[{
 "Proposition: For all n\[Element]\[DoubleStruckCapitalN], with n\
\[GreaterEqual]2, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["3", "1"], ">", 
    RowBox[{"1", "+", 
     SuperscriptBox["2", "n"]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f7018064-d55a-4a61-bb99-3cf4679b03dc"]
}], "Text",
 CellChangeTimes->{{3.8744115251006546`*^9, 3.874411566197687*^9}},
 CellID->185993044,ExpressionUUID->"c8cb3aee-ac53-4b95-8f35-d8e5b605575b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindInstance", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["3", "n"], ">", 
    RowBox[{"1", "+", 
     SuperscriptBox["2", "n"]}]}], ",", 
   RowBox[{"{", "n", "}"}], ",", "Integers"}], "]"}]], "Input",
 CellChangeTimes->{{3.8744115680411*^9, 3.8744115873854046`*^9}, {
  3.8744117444265275`*^9, 3.8744117674019456`*^9}, {3.8744118252417974`*^9, 
  3.8744118282049685`*^9}, {3.87441188989878*^9, 3.8744118916723537`*^9}},
 CellLabel->"In[8]:=",
 CellID->36068717,ExpressionUUID->"a9dce4c0-0b03-4418-862e-8f49f3bc4921"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"n", "\[Rule]", "198"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.874411758888953*^9, 3.8744117678593225`*^9}, {
   3.874411817158406*^9, 3.874411829095157*^9}, 3.874411892150237*^9},
 CellLabel->"Out[8]=",
 CellID->590652195,ExpressionUUID->"c0fa04a2-1ee5-40de-9a54-c40ffc42c15b"]
}, Open  ]],

Cell["Proof by induction:", "Text",
 CellChangeTimes->{{3.874411589443798*^9, 3.874411603896397*^9}},
 CellID->41997672,ExpressionUUID->"219d3472-791c-4fb0-9066-d0790acc7acb"],

Cell[TextData[{
 "Proposition: For All n \[Element] N, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["3", "n"], ">", 
    RowBox[{"1", "+", 
     SuperscriptBox["2", "n"]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "02ab666c-c5e7-4b4b-8c11-cd6547f4d241"],
 ":P(n)."
}], "Text",
 CellChangeTimes->{{3.8744116064775443`*^9, 3.87441170687331*^9}, 
   3.8744117549342546`*^9},
 CellID->7049359,ExpressionUUID->"83d113b0-2db9-47b9-ae4e-e671bd362707"],

Cell["From our above notation M=2.", "Text",
 CellChangeTimes->{{3.874411696682237*^9, 3.8744117115791492`*^9}},
 CellID->646920125,ExpressionUUID->"c4590fef-22d3-4df3-86f7-951af2703755"],

Cell["First verify that P(n) holds for n=2.", "Text",
 CellChangeTimes->{{3.8744116000111856`*^9, 3.87441160075105*^9}, {
  3.874411718871318*^9, 3.8744117359794483`*^9}},
 CellID->378066162,ExpressionUUID->"58abbdd7-27fb-4936-928a-503044f9d0f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"And", "[", 
   RowBox[{
    RowBox[{"Or", "[", 
     RowBox[{"p", ",", "q"}], "]"}], ",", "r"}], "]"}], "//", 
  "BooleanConvert"}]], "Input",
 CellChangeTimes->{{3.8744119160628805`*^9, 3.8744119307659883`*^9}},
 CellLabel->"In[9]:=",
 CellID->96340892,ExpressionUUID->"a4340373-f0a5-4dfc-ad45-a0d6b99ae7ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"p", "&&", "r"}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{"q", "&&", "r"}], ")"}]}]], "Output",
 CellChangeTimes->{3.874411931001475*^9},
 CellLabel->"Out[9]=",
 CellID->272849548,ExpressionUUID->"f90e69a9-e923-4f5f-b1a1-c3dce088ac40"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Or", "[", 
   RowBox[{
    RowBox[{"And", "[", 
     RowBox[{"p", ",", "q"}], "]"}], ",", "r"}], "]"}], "//", 
  "BooleanConvert"}]], "Input",
 CellChangeTimes->{{3.8744119160628805`*^9, 3.8744119412074413`*^9}},
 CellLabel->"In[10]:=",
 CellID->451210339,ExpressionUUID->"e2444a32-a5ed-417d-8ab0-11088bbbf671"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"p", "&&", "q"}], ")"}], "||", "r"}]], "Output",
 CellChangeTimes->{3.874411941695389*^9},
 CellLabel->"Out[10]=",
 CellID->198680619,ExpressionUUID->"635baf49-37b1-4316-9317-138a99812824"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SameQ", "[", 
  RowBox[{
   RowBox[{"p", "\[Or]", 
    RowBox[{"q", "\[And]", "r"}]}], ",", 
   RowBox[{
    RowBox[{"p", "\[And]", "q"}], "\[Or]", "r"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8744119537331767`*^9, 3.874411973614042*^9}},
 CellLabel->"In[11]:=",
 CellID->106504204,ExpressionUUID->"7191f895-4552-4881-aef0-c7f7a9fe5aeb"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.874411974036129*^9},
 CellLabel->"Out[11]=",
 CellID->348915208,ExpressionUUID->"45c0357c-e026-4e33-97cc-449545c4aa20"]
}, Open  ]],

Cell[TextData[{
 "For the LHS we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["3", "2"], "=", "9"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3bf48abb-3ab3-4a7d-b8d0-72dc99428d0c"]
}], "Text",
 CellChangeTimes->{{3.874411986246826*^9, 3.8744119977597814`*^9}},
 CellID->299066301,ExpressionUUID->"7fd48ba1-6683-46ea-bf2d-ea6f3909f23c"],

Cell[TextData[{
 "For the RHS we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["2", "2"], "+", "1"}], "=", "5"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a53206da-94f2-40a2-ad07-0259b1e799ad"]
}], "Text",
 CellChangeTimes->{{3.8744120026898746`*^9, 3.8744120113478637`*^9}},
 CellID->229470244,ExpressionUUID->"bbe86399-dff6-4bd4-8c26-27b7b7b9bdec"],

Cell["Since 9>5, P(2) is true.", "Text",
 CellChangeTimes->{{3.8744120123032227`*^9, 3.874412019961934*^9}},
 CellID->779400449,ExpressionUUID->"d0079f6f-9dea-4d1b-b973-a58c1ec59891"],

Cell["Let P(k) be true for k\[GreaterEqual]2.", "Text",
 CellChangeTimes->{{3.874412053564669*^9, 3.8744120915771494`*^9}},
 CellID->205102427,ExpressionUUID->"1dfb7e8f-c38e-425e-a0b3-26d8c07f0797"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["3", "k"], ">", 
   RowBox[{
    SuperscriptBox["2", "k"], "+", "1"}]}], TraditionalForm]],
 FormatType->
  TraditionalForm,ExpressionUUID->"21569935-4592-4528-bbdb-76d968f4431a"]], \
"Text",
 CellChangeTimes->{{3.8744120924937916`*^9, 3.874412098603746*^9}},
 CellID->10909907,ExpressionUUID->"31f5b40b-245f-4007-84d4-47b38443bbc1"],

Cell[TextData[{
 "We want to show that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["3", 
     RowBox[{"k", "+", "1"}]], ">", 
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"k", "+", "1"}]], "+", "1"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ca6e48e3-113a-42ec-8959-4ea938e06d9d"],
 " is true. This will show that P(k+1) is true."
}], "Text",
 CellChangeTimes->{{3.874412100932829*^9, 3.8744121362249203`*^9}},
 CellID->390360469,ExpressionUUID->"3fb407ed-8d87-4856-9f3e-fbf81469891e"],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  SuperscriptBox["3", 
   RowBox[{"k", "+", "1"}]], 
  SuperscriptBox["3", "k"]]], "Input",
 CellChangeTimes->{{3.87441214430497*^9, 3.874412169742566*^9}},
 CellLabel->"In[12]:=",
 CellID->340525169,ExpressionUUID->"a95f4661-ea6a-4adb-8c78-7a33517f3b1f"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.8744121702725105`*^9},
 CellLabel->"Out[12]=",
 CellID->265308064,ExpressionUUID->"219fd236-f3a2-4e34-8777-fb49e9f74aa1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{"k", "+", "1"}]], "+", "1"}], 
  RowBox[{
   SuperscriptBox["2", "k"], "+", "1"}]]], "Input",
 CellChangeTimes->{{3.87441214430497*^9, 3.8744121822112646`*^9}},
 CellLabel->"In[13]:=",
 CellID->191590863,ExpressionUUID->"903ad14f-c1d4-4a4c-9c38-d3230a0e42e5"],

Cell[BoxData[
 FractionBox[
  RowBox[{"1", "+", 
   SuperscriptBox["2", 
    RowBox[{"1", "+", "k"}]]}], 
  RowBox[{"1", "+", 
   SuperscriptBox["2", "k"]}]]], "Output",
 CellChangeTimes->{3.874412182548361*^9},
 CellLabel->"Out[13]=",
 CellID->33122668,ExpressionUUID->"a3c1c79e-c3df-4192-bd19-4aaace35efe8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  FractionBox[
   RowBox[{"1", "+", 
    SuperscriptBox["2", 
     RowBox[{"1", "+", "k"}]]}], 
   RowBox[{"1", "+", 
    SuperscriptBox["2", "k"]}]], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[14]:=",
 CellID->117827102,ExpressionUUID->"91b0caf6-97cb-4365-86aa-74fe42070214"],

Cell[BoxData[
 RowBox[{"2", "-", 
  FractionBox["1", 
   RowBox[{"1", "+", 
    SuperscriptBox["2", "k"]}]]}]], "Output",
 CellChangeTimes->{3.8744121857610874`*^9},
 CellLabel->"Out[14]=",
 CellID->32054058,ExpressionUUID->"7b18ec02-00f7-4e80-b6b9-e5990539366b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"2", "-", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["2", "k"]}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "20"}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[15]:=",
 CellID->50818109,ExpressionUUID->"47bb002a-9ca1-43e4-b960-4df87bb7f641"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], 
     TagBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
        LineBox[{{{1., 1.6666666666666667`}, {1., 1.8529526204750741`}}, {{2.,
          1.8}, {2., 1.8529526204750741`}}},
         VertexColors->None]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.011000000000000001`], AbsoluteThickness[1.6], Opacity[0.2], 
        LineBox[CompressedData["
1:eJxdzz9KBDEUx/HfmMYuQSwsLFREZFmWXdfCyvmdwSMIW3uFAa29gtWArTeY
owx4gSlTjHk+dPfBS/4UXz6BJJfPL0+7AOBE99F+/49jvn8/6CrtoT/7j/6r
/9l3YvwbYu39lG/xMY+vYu39jGke4jyItfdz5lC6dhRr7xdMU9Qp1t6v2AlK
yGLt/ZpzHASzWHu/IZrcooi191smSISItfcFm1FCZ76ofEm9G4P5svKVvr/F
aL6qfM1Jr5/M15VvWCQgm28qvyPQ6BPE2vuW0BPFfFv5PZGg3xfrg/8CQHC4
Mg==
         "],
         VertexColors->None]}},
      Annotation[#, "Charting`Private`Tag$42968#1"]& ]}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], {}, 
      PointBox[CompressedData["
1:eJw9zTFuAjEQBdC/2YbOLigoKAhCUYQQIoQiVfzPwBEipc4VVoKag8Al9gBw
B0u5wJZWZNnMhh1/e2S9kWb8/PWz/34CMJbq30c6dzn3+XNDg7drnzh4xNPv
h9w02NL8Jw8e82g+gz+oJ7SxNbFVTxnq1DivntF2Ro56ziYj1UG9YDRtRlS/
EFVwSOpXWmSDrF6y8rluileUWbTFa9nv4Is37GS8K35jyjVC8ZZAJSvU74R0
UvGOsJDvs7sDW/ZhUg==
       "]], {}},
     Annotation[#, "Charting`Private`Tag$42968#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1, 1.8529526204750741`},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{1, 20}, {1.8529526204750741`, 1.999999046326593}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8744121965480022`*^9},
 CellLabel->"Out[15]=",
 CellID->136442414,ExpressionUUID->"f4f2e9e3-58c0-40ae-b7e9-9989e9d4d8f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PowerExpand", "[", 
  RowBox[{
   SuperscriptBox["3", 
    RowBox[{"k", "+", "1"}]], ">", 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"k", "+", "1"}]], "+", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8744122265552406`*^9, 3.874412235222001*^9}},
 CellLabel->"In[16]:=",
 CellID->72892788,ExpressionUUID->"de4d1ddd-dbd4-43ea-a947-efb051a60c7a"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["3", 
   RowBox[{"1", "+", "k"}]], ">", 
  RowBox[{"1", "+", 
   SuperscriptBox["2", 
    RowBox[{"1", "+", "k"}]]}]}]], "Output",
 CellChangeTimes->{3.8744122355072002`*^9},
 CellLabel->"Out[16]=",
 CellID->78850932,ExpressionUUID->"9ea45a7c-ae39-41aa-8636-b792327c3a6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"3", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["3", "k"], ">", 
      RowBox[{
       SuperscriptBox["2", "k"], "+", "1"}]}], ")"}]}], ")"}], "//", 
  "ExpandAll"}]], "Input",
 CellChangeTimes->{{3.874412283801082*^9, 3.8744123450846777`*^9}},
 CellLabel->"In[19]:=",
 CellID->43850206,ExpressionUUID->"82942e6e-55a0-4a10-bcc3-546cff9ede48"],

Cell[BoxData[
 RowBox[{"3", " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["3", "k"], ">", 
    RowBox[{"1", "+", 
     SuperscriptBox["2", "k"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.874412316786281*^9, 3.874412345338273*^9}},
 CellLabel->"Out[19]=",
 CellID->140632974,ExpressionUUID->"4524a2c8-6f0a-4df7-be41-70948d3ade34"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MultiplySides", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["3", "k"], ">", 
    RowBox[{
     SuperscriptBox["2", "k"], "+", "1"}]}], ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8744123549368763`*^9, 3.874412366753113*^9}},
 CellLabel->"In[20]:=",
 CellID->439843047,ExpressionUUID->"2dbde346-7ad1-493b-addb-72d816ed2de8"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["3", 
   RowBox[{"1", "+", "k"}]], ">", 
  RowBox[{"3", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["2", "k"]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.8744123670515223`*^9},
 CellLabel->"Out[20]=",
 CellID->58811808,ExpressionUUID->"dc1a3b50-c3a4-46e5-a39e-07738cb27502"]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["3", 
    RowBox[{"k", "+", "1"}]], ">", 
   RowBox[{
    RowBox[{"3", "*", 
     SuperscriptBox["2", "k"]}], "+", "3"}]}], TraditionalForm]],
 FormatType->
  TraditionalForm,ExpressionUUID->"a33eba71-eef6-49e2-88f7-84387027a36e"]], \
"Text",
 CellChangeTimes->{{3.874412393293562*^9, 3.8744124011592894`*^9}},
 CellID->9670579,ExpressionUUID->"b899a7e2-4cac-42da-97c0-d479f1838c65"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["3", 
    RowBox[{"k", "+", "1"}]], ">", 
   RowBox[{
    RowBox[{"3", "*", 
     SuperscriptBox["2", "k"]}], "+", "3"}], ">", 
   RowBox[{
    RowBox[{"2", "*", 
     SuperscriptBox["2", "k"]}], "+", "1"}]}], TraditionalForm]],
 FormatType->
  TraditionalForm,ExpressionUUID->"90e8bf94-e4b6-4ab5-a2f1-208a8789118f"]], \
"Text",
 CellChangeTimes->{{3.874412503952359*^9, 3.874412525188962*^9}},
 CellID->3702400,ExpressionUUID->"85d8ebd9-4aca-409a-8184-f0c0e626264d"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["3", 
    RowBox[{"k", "+", "1"}]], ">", 
   RowBox[{
    RowBox[{"3", "*", 
     SuperscriptBox["2", "k"]}], "+", "3"}], ">", 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"k", "+", "1"}]], "+", "1"}]}], TraditionalForm]],
 FormatType->
  TraditionalForm,ExpressionUUID->"66746361-73f9-442e-b6c8-348dc1c2d809"]], \
"Text",
 CellChangeTimes->{{3.874412503952359*^9, 3.874412544615058*^9}},
 CellID->11478502,ExpressionUUID->"f51f251b-b5d3-4634-b144-7640eb519b6b"],

Cell["Therefore P(k+1) follows from P(k). true", "Text",
 CellChangeTimes->{{3.8744126281001935`*^9, 3.8744126389624805`*^9}},
 CellID->4914579,ExpressionUUID->"0e4f91b7-ee70-4794-aeb1-b551e0059cfa"],

Cell[TextData[{
 "Hence the PMI, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["3", "n"], ">", 
    RowBox[{
     SuperscriptBox["2", "n"], "+", "1"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1df95270-ef5e-41c3-b09b-9cdf1869463c"],
 " for n\[GreaterEqual]2 ."
}], "Text",
 CellChangeTimes->{{3.8744126455063944`*^9, 3.8744126813908978`*^9}},
 CellID->816443656,ExpressionUUID->"d940bc7d-9de6-42ea-9f42-a60ac0363727"],

Cell[CellGroupData[{

Cell["prove by pmi 3^(k)>2^(k)+1 for k>=2 and k integer", "WolframAlphaLong",
 CellChangeTimes->{{3.874412447398271*^9, 3.874412497243683*^9}, {
  3.8744125592742643`*^9, 3.8744126168691683`*^9}, {3.874412694058749*^9, 
  3.874412706434301*^9}},
 CellLabel->"In[28]:=",
 CellID->263589602,ExpressionUUID->"fb5d4640-4c74-4b9f-8a57-3d0ebce45681"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "prove by pmi 3^(k)>2^(k)+1 for k>=2 and k integer", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Simplification", 
     "id" -> "Input", "position" -> "100", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                PaneBox[
                 StyleBox[
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    "\"prove\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    TagBox[
                    RowBox[{
                    SuperscriptBox["3", "k"], ">", 
                    RowBox[{
                    SuperscriptBox["2", "k"], "+", "1"}]}], HoldForm]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                   $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                  LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                 BaselinePosition -> Center], 
                PaneBox[
                 StyleBox[
                  TagBox[
                   GridBox[{{
                    StyleBox["\"method\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], "\"mathematical induction\""}, {
                    StyleBox["\"assuming\"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    TemplateBox[{
                    StyleBox["\" and \"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                    RowBox[{"k", "\[GreaterEqual]", "2"}], 
                    RowBox[{"k", "\[Element]", 
                    TemplateBox[{}, "Integers"]}]}, "RowWithSeparator"]}}, 
                    GridBoxBackground -> {
                    "Columns" -> {None, None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 
                    Automatic], 
                   $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                  LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                 BaselinePosition -> Center]}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              ColumnsEqual -> False, RowsEqual -> False, 
              GridBoxSpacings -> {"Columns" -> {{
                   AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
              AllowScriptLevelChange -> False], 
             $CellContext`TagBoxWrapper["Separator" -> " | "]], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "2"}, {
       XMLElement["info", {"text" -> "Z is the set of integers"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Integers.html", 
           "text" -> "Documentation", "title" -> "Documentation"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/Z.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}], 
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> 
           "http://mathworld.wolfram.com/PrincipleofMathematicalInduction.\
html", "text" -> "Principle of mathematical induction"}, {}]}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Simplification", "id" -> 
     "Result", "position" -> "200", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             
             RowBox[{"\"(\"", "\[NoBreak]", 
               "\"unable to prove with induction\"", "\[NoBreak]", "\")\""}], {
              GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
              LineIndent -> 0}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Validity", "scanner" -> "Simplification", "id" -> 
     "Validity", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              TagBox[
               RowBox[{
                 SuperscriptBox["3", "k"], ">", 
                 RowBox[{
                   SuperscriptBox["2", "k"], "+", "1"}]}], HoldForm], 
              StyleBox["\" for \"", {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], 
              TemplateBox[{
                StyleBox["\" or \"", {
                  GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}], 
                TemplateBox[{
                  StyleBox["\" and \"", {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 
                  RowBox[{"k", "\[GreaterEqual]", "2"}], 
                  RowBox[{"k", "\[Element]", 
                    TemplateBox[{}, "Integers"]}]}, "RowWithSeparator"]}, 
               "RowWithSeparator"]}, "RowDefault"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Plot", "scanner" -> "Simplification", "id" -> "Plot", 
     "position" -> "400", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "ListLogPlot[{{{0, 1}, {1, 3}, {2, 9}, {3, 27}, {4, 81}, {5, 243}}, \
{{0, 2}, {1, 3}, {2, 5}, {3, 9}, {4, 17}, {5, 33}}}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{{}, 
                GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQjR18sOdmXlv1avJHe6iAA4TP6ADhcjhMaGHecT+W
C8oXgMoLQvkiDmedIySf/hB1gJn43vLXPye9Z/a4zDfuffvd8cBPe5j5qPYJ
OFTV/zqYvYoNbv7FHVe/3PjBDTd/W8kPwYdNt/fDzEflMzig8jnQ+AJofBE0
Pu3NH6rhDwAPeqO6
                 "], {{{}, {}, {}, {}, {}, {
                    Directive[
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    Opacity[0.3]], 
                    LineBox[{19, 1}], 
                    LineBox[{20, 2}], 
                    LineBox[{21, 3}], 
                    LineBox[{22, 4}], 
                    LineBox[{23, 5}], 
                    LineBox[{24, 6}]}, {}, {
                    Directive[
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    Opacity[0.3]], 
                    LineBox[{13, 7}], 
                    LineBox[{14, 8}], 
                    LineBox[{15, 9}], 
                    LineBox[{16, 10}], 
                    LineBox[{17, 11}], 
                    LineBox[{18, 12}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]], 
                    PointBox[{25, 26, 27, 28, 29, 30}]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    AbsoluteThickness[1]], 
                    PointBox[{31, 32, 33, 34, 35, 36}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    AbsoluteThickness[1]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    AbsoluteThickness[1]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    AbsoluteThickness[1]]}, {}, {}, {}}}], {{}, {}}}, {
               GridLines -> Dynamic[
                  Map[{{#, 
                    GrayLevel[0.7]}}& , 
                   MousePosition[{"Graphics", Graphics}, None]]], 
                DisplayFunction -> Identity, GridLines -> {None, None}, 
                DisplayFunction -> Identity, DisplayFunction -> Identity, 
                DisplayFunction -> Identity, DisplayFunction -> Identity, 
                AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
                Axes -> {True, True}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, -0.4298632312291589}, AxesStyle -> Directive[
                  AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
                DisplayFunction :> Identity, 
                Frame -> {{False, False}, {False, False}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  AbsoluteThickness[0.2]], FrameTicks -> {{{{0., 
                    FormBox["1", TraditionalForm], {0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
                    FormBox["5", TraditionalForm], {0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {2.302585092994046, 
                    FormBox["10", TraditionalForm], {0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {3.912023005428146, 
                    FormBox["50", TraditionalForm], {0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {4.605170185988092, 
                    FormBox["100", TraditionalForm], {0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {0.6931471805599453, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.791759469228055, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.995732273553991, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.0943445622221, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.248495242049359, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.382026634673881, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.499809670330265, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {5.298317366548036, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {5.703782474656201, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {5.991464547107982, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {6.214608098422191, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {6.396929655216146, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {6.551080335043404, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {6.684611727667927, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {6.802394763324311, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {6.907755278982137, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {7.003065458786462, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {7.090076835776092, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {7.170119543449628, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {7.24422751560335, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {7.313220387090301, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {7.3777589082278725`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}}, {{0., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.302585092994046, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.912023005428146, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.605170185988092, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {0.6931471805599453, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.791759469228055, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.995732273553991, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.0943445622221, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.248495242049359, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.382026634673881, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.499809670330265, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {5.298317366548036, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {5.703782474656201, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {5.991464547107982, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {6.214608098422191, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {6.396929655216146, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {6.551080335043404, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {6.684611727667927, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {6.802394763324311, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {6.907755278982137, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {7.003065458786462, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {7.090076835776092, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {7.170119543449628, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {7.24422751560335, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {7.313220387090301, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {7.3777589082278725`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}}}, {Automatic, Automatic}}, 
                FrameTicksStyle -> 
                Directive[FontFamily -> "Times", FontSize -> 10], 
                GridLines -> {None, None}, GridLinesStyle -> Automatic, 
                ImageSize -> 330., 
                LabelStyle -> {FontSize -> 10, FontFamily -> "Roboto"}, 
                Method -> {
                 "OptimizePlotMarkers" -> True, 
                  "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, 
                PlotRange -> {{0, 5.}, {-0.4298632312291589, 
                  5.493061443340548}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.02], 
                   Scaled[0.02]}, {
                   Scaled[0.02], 
                   Scaled[0.05]}}, Prolog -> {
                  Opacity[0], 
                  TagBox[
                   RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
                Ticks -> {Automatic, {{0., 
                    FormBox["1", TraditionalForm], {0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
                    FormBox["5", TraditionalForm], {0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {2.302585092994046, 
                    FormBox["10", TraditionalForm], {0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {3.912023005428146, 
                    FormBox["50", TraditionalForm], {0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {4.605170185988092, 
                    FormBox["100", TraditionalForm], {0.01, 0.}, {
                    AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {0.6931471805599453, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.791759469228055, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.995732273553991, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.0943445622221, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.248495242049359, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.382026634673881, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.499809670330265, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {5.298317366548036, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {5.703782474656201, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {5.991464547107982, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {6.214608098422191, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {6.396929655216146, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {6.551080335043404, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {6.684611727667927, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {6.802394763324311, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {6.907755278982137, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {7.003065458786462, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {7.090076835776092, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {7.170119543449628, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {7.24422751560335, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {7.313220387090301, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {7.3777589082278725`, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}}}, TicksStyle -> 
                Directive[FontFamily -> "Times", FontSize -> 10]}], 
              TagBox[
               GridBox[{{
                  GraphicsBox[{
                    RGBColor[0.24720000000000014`, 0.24, 0.6], {
                    AbsoluteThickness[2], 
                    LineBox[{{0, 0}, {1, 0}}]}}, ImageSize -> NCache[
                    Rational[143, 10], 14.3], 
                   BaselinePosition -> (Center -> Center)], 
                  StyleBox[
                   TagBox[
                    SuperscriptBox["3", "k"], HoldForm], {
                   FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                  GraphicsBox[{
                    RGBColor[0.6, 0.24, 0.4428931686004542], {
                    AbsoluteThickness[2], 
                    LineBox[{{0, 0}, {1, 0}}]}}, ImageSize -> NCache[
                    Rational[143, 10], 14.3], 
                   BaselinePosition -> (Center -> Center)], 
                  StyleBox[
                   TagBox[
                    RowBox[{
                    SuperscriptBox["2", "k"], "+", "1"}], HoldForm], {
                   FontFamily -> "Roboto", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.3}}, "Rows" -> {{0.3}}}],
                "Grid"]}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"], 
                  
                  ItemBox[#2, Alignment -> {Inherited, Bottom}, 
                   DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Roboto", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", 
                  RowBox[{"{", #2, "}"}], ",", 
                  TemplateBox[{
                    GridBox[{{
                    StyleBox[
                    "Right", FontFamily -> "Roboto", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Bottom", FontFamily -> "Roboto", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center]}, "Matrix", 
                   DisplayFunction -> (
                    RowBox[{"(", "\[NoBreak]", #, "\[NoBreak]", ")"}]& ), 
                   InterpretationFunction -> (#& )]}], "]"}]& )], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "4", "datatypes" -> "", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "1.468", "parsetiming" -> "0.811", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSP10031ddgdg26f3ch9aic00000h85421i2f78c91d", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "17", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa10041ddgdg26f3ch9aic00005g75285f73866fc13454770973695860617", "version" -> 
    "2.6", "inputstring" -> 
    "prove by pmi 3^(k)>2^(k)+1 for k>=2 and k integer"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2022, 10, 10, 13, 45, 8.5506142`8.684572279037514}, "Line" -> 
    28, "SessionID" -> 19494576396667832503}, Typeset`showpods$$ = {1, 2, 3, 
   4}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = 
   False, Typeset`newq$$ = 
   "prove by pmi 3^(k)>2^(k)+1 for k>=2 and k integer"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{498., {256.3544921875, 261.6455078125}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}],
        Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{3.8744127085706444`*^9},
 CellID->39789554,ExpressionUUID->"08a08fb3-2053-4feb-bf34-f42952ab0b26"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   SubscriptBox["\[ForAll]", 
    RowBox[{"k", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Element]", 
        TemplateBox[{},
         "Integers"]}], ",", 
       RowBox[{"k", ">=", "2"}]}], "}"}]}]], 
   RowBox[{
    SuperscriptBox["3", "k"], ">=", 
    RowBox[{
     SuperscriptBox["2", "k"], "+", "1"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.874412716791591*^9, 3.874412785185005*^9}},
 CellLabel->"In[32]:=",
 CellID->712993642,ExpressionUUID->"d92a4569-8111-4368-b957-950c3f7bcefb"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.874412743473639*^9, 3.8744127855082455`*^9}},
 CellLabel->"Out[32]=",
 CellID->131124658,ExpressionUUID->"4d4c2229-e15a-4263-bb19-bab4c50356ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   SubscriptBox["\[ForAll]", 
    RowBox[{"k", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "\[Element]", 
        TemplateBox[{},
         "Integers"]}], ",", 
       RowBox[{"k", ">=", "2"}]}], "}"}]}]], 
   RowBox[{
    SuperscriptBox["3", "k"], ">", 
    RowBox[{
     SuperscriptBox["2", "k"], "+", "1"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.874412716791591*^9, 3.8744128039235992`*^9}},
 CellLabel->"In[34]:=",
 CellID->701784750,ExpressionUUID->"807b9df5-672c-462f-8731-e5c9e3e6360c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.874412796661542*^9, 3.8744128043473806`*^9}},
 CellLabel->"Out[34]=",
 CellID->22367681,ExpressionUUID->"1729c077-1eac-46e0-8a7f-f56d38c8241a"]
}, Open  ]],

Cell["\[ForAll] n \[Element] \[DoubleStruckCapitalN], n is a prime number or \
n is a composite #.", "Text",
 CellChangeTimes->{{3.8744128239876976`*^9, 3.8744128511475916`*^9}},
 CellID->17587572,ExpressionUUID->"cd74bef1-6e6f-4cf4-a7ca-d88d235fc71a"],

Cell["n is either prime or the product of primes.", "Text",
 CellChangeTimes->{{3.8744128759987593`*^9, 3.874412896876635*^9}},
 CellID->12385706,ExpressionUUID->"9825d916-aaaf-4ca7-9b4a-09dd3bad9ac6"],

Cell["\<\
With our previous proposition, we used the truth of P(k) to show that P(k+1) \
is also true. That is P(k+1) follows from P(k).\
\>", "Text",
 CellChangeTimes->{{3.874412969480738*^9, 3.874412997841117*^9}},
 CellID->54939517,ExpressionUUID->"4475550f-883c-4687-89d5-6936aafddc00"],

Cell["Let k=13.", "Text",
 CellChangeTimes->{{3.874412999332835*^9, 3.8744130012852335`*^9}},
 CellID->148124795,ExpressionUUID->"6056801e-847a-4667-911d-9acbb16f3acf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrimeQ", "[", "13", "]"}]], "Input",
 CellChangeTimes->{{3.874413003882985*^9, 3.874413005372178*^9}},
 CellLabel->"In[35]:=",
 CellID->670978736,ExpressionUUID->"4c9663a3-7d05-4bb9-baba-ef5fcdc65a05"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8744130056706495`*^9},
 CellLabel->"Out[35]=",
 CellID->127935199,ExpressionUUID->"87aecf7d-0234-42bd-98b6-eba0abcb825a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MangoldtLambda", "[", "13", "]"}]], "Input",
 CellChangeTimes->{{3.8744130088759155`*^9, 3.8744130107264585`*^9}},
 CellLabel->"In[36]:=",
 CellID->291243491,ExpressionUUID->"1bc13141-dd72-4c13-a2c9-e4ec4792a4af"],

Cell[BoxData[
 RowBox[{"Log", "[", "13", "]"}]], "Output",
 CellChangeTimes->{3.874413011041793*^9},
 CellLabel->"Out[36]=",
 CellID->24321667,ExpressionUUID->"60d466c9-ac8a-4921-88d4-5d61ab941df7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"MangoldtLambda", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8744130142777004`*^9, 3.8744130314861035`*^9}},
 CellLabel->"In[38]:=",
 CellID->817970426,ExpressionUUID->"ef2ed195-5eea-475d-a726-679b24293a07"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667], 
     AbsoluteThickness[1.6], 
     TagBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.004766666666666667], AbsoluteThickness[1.6], Opacity[0.2], 
        LineBox[{{{1., 0.}, {1., 0}}, {{6., 0.}, {6., 0}}, {{10., 0.}, {
           10., 0}}, {{12., 0.}, {12., 0}}, {{14., 0.}, {14., 0}}, {{15., 
           0.}, {15., 0}}, {{18., 0.}, {18., 0}}, {{20., 0.}, {20., 0}}, {{
           21., 0.}, {21., 0}}, {{22., 0.}, {22., 0}}, {{24., 0.}, {
           24., 0}}, {{26., 0.}, {26., 0}}, {{28., 0.}, {28., 0}}, {{30., 
           0.}, {30., 0}}, {{33., 0.}, {33., 0}}, {{34., 0.}, {34., 0}}, {{
           35., 0.}, {35., 0}}, {{36., 0.}, {36., 0}}, {{38., 0.}, {
           38., 0}}, {{39., 0.}, {39., 0}}, {{40., 0.}, {40., 0}}, {{42., 
           0.}, {42., 0}}, {{44., 0.}, {44., 0}}, {{45., 0.}, {45., 0}}, {{
           46., 0.}, {46., 0}}, {{48., 0.}, {48., 0}}, {{50., 0.}, {
           50., 0}}, {{51., 0.}, {51., 0}}, {{52., 0.}, {52., 0}}, {{54., 
           0.}, {54., 0}}, {{55., 0.}, {55., 0}}, {{56., 0.}, {56., 0}}, {{
           57., 0.}, {57., 0}}, {{58., 0.}, {58., 0}}, {{60., 0.}, {
           60., 0}}, {{62., 0.}, {62., 0}}, {{63., 0.}, {63., 0}}, {{65., 
           0.}, {65., 0}}, {{66., 0.}, {66., 0}}, {{68., 0.}, {68., 0}}, {{
           69., 0.}, {69., 0}}, {{70., 0.}, {70., 0}}, {{72., 0.}, {
           72., 0}}, {{74., 0.}, {74., 0}}, {{75., 0.}, {75., 0}}, {{76., 
           0.}, {76., 0}}, {{77., 0.}, {77., 0}}, {{78., 0.}, {78., 0}}, {{
           80., 0.}, {80., 0}}, {{82., 0.}, {82., 0}}, {{84., 0.}, {
           84., 0}}, {{85., 0.}, {85., 0}}, {{86., 0.}, {86., 0}}, {{87., 
           0.}, {87., 0}}, {{88., 0.}, {88., 0}}, {{90., 0.}, {90., 0}}, {{
           91., 0.}, {91., 0}}, {{92., 0.}, {92., 0}}, {{93., 0.}, {
           93., 0}}, {{94., 0.}, {94., 0}}, {{95., 0.}, {95., 0}}, {{96., 
           0.}, {96., 0}}, {{98., 0.}, {98., 0}}, {{99., 0.}, {99., 0}}, {{
           100., 0.}, {100., 0}}},
         VertexColors->None]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.004766666666666667], AbsoluteThickness[1.6], Opacity[0.2], 
        LineBox[{{{2., 0.6931471805599453}, {2., 0}}, {{3., 
           1.0986122886681098`}, {3., 0}}, {{4., 0.6931471805599453}, {
           4., 0}}, {{5., 1.6094379124341003`}, {5., 0}}, {{7., 
           1.9459101490553132`}, {7., 0}}, {{8., 0.6931471805599453}, {
           8., 0}}, {{9., 1.0986122886681098`}, {9., 0}}, {{11., 
           2.3978952727983707`}, {11., 0}}, {{13., 2.5649493574615367`}, {
           13., 0}}, {{16., 0.6931471805599453}, {16., 0}}, {{17., 
           2.833213344056216}, {17., 0}}, {{19., 2.9444389791664403`}, {
           19., 0}}, {{23., 3.1354942159291497`}, {23., 0}}, {{25., 
           1.6094379124341003`}, {25., 0}}, {{27., 1.0986122886681098`}, {
           27., 0}}, {{29., 3.367295829986474}, {29., 0}}, {{31., 
           3.4339872044851463`}, {31., 0}}, {{32., 0.6931471805599453}, {
           32., 0}}, {{37., 3.6109179126442243`}, {37., 0}}, {{41., 
           3.713572066704308}, {41., 0}}, {{43., 3.7612001156935624`}, {
           43., 0}}, {{47., 3.8501476017100584`}, {47., 0}}, {{49., 
           1.9459101490553132`}, {49., 0}}, {{53., 3.970291913552122}, {
           53., 0}}, {{59., 4.07753744390572}, {59., 0}}, {{61., 
           4.110873864173311}, {61., 0}}, {{64., 0.6931471805599453}, {
           64., 0}}, {{67., 4.204692619390966}, {67., 0}}, {{71., 
           4.2626798770413155`}, {71., 0}}, {{73., 4.290459441148391}, {
           73., 0}}, {{79., 4.3694478524670215`}, {79., 0}}, {{81., 
           1.0986122886681098`}, {81., 0}}, {{83., 4.418840607796598}, {
           83., 0}}, {{89., 4.48863636973214}, {89., 0}}, {{97., 
           4.574710978503383}, {97., 0}}},
         VertexColors->None]}},
      Annotation[#, "Charting`Private`Tag$68790#1"]& ]}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667],
       AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxdk91LFFEYhw+5mKWWK2YRQbVIrGlruuVXlq+bm6uu6+66qQndSAtBUVQ3
tRBOQVCRUnTXn1BmhFRXwUQXEmHgTf+AHxf2NYJUGtkHvRPMMzAMz+85v3M4
Z2Z2D59PZ9cZY079uf8+/11Oq/Fe8qVpdS0SWtC8QArzHucW7y8pl8CXSXj0
07c2e0V5m3in2yEDQ3UTFwO/1O9CP4D5K9DfI/GGkRezoTzNg/B7JXWntsp3
w6d5NXwIvB/r10puZPXVmYf5Oq4O48NSPenLrx9br/kB+IPgenCDOJMzP69u
2aB5I3wTzq8Z/hDOpwX+sOxcm37b6GzU/Ah8qwxV3Yu9u1youXj3bwnGt3nZ
ApsIfEReTjV/Ds4WaX4UHmza4dslMT4WzT4r1jwKHxX/x7Jyp3yT5sfgwaYD
vkOeO3drtk+7/Rh8DN9nJzzYdMF3yaOWwOng682ad8ODTRwebHrge+RK5dRK
trdE8wR8QorPln64ecH1vfBgk/S+f0liPNhOyj5/cOnBjDt/yusFbIHtlLx5
X7H8o8iveRr9tCzUBMLnKtVb8DbY9KEPtsB2n1x6+uRWMueun0E/4/2/LHg7
I9fnhkfnxt3+cfTBFtgGm370++Xr7YmtJ5fd/cPbYDOAPtgC22AziP6gfO+e
L7gWL9X14W2wOfGffwMknsza
       "]], {}},
     Annotation[#, "Charting`Private`Tag$68790#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1, 0},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{1, 100}, {0, 4.574710978503383}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.874413025289473*^9, 3.8744130317614822`*^9}},
 CellLabel->"Out[38]=",
 CellID->49351638,ExpressionUUID->"9fd23365-4e60-452f-a21b-455f68c2793a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"MoebiusMu", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8744130142777004`*^9, 3.874413043784316*^9}},
 CellLabel->"In[39]:=",
 CellID->12818174,ExpressionUUID->"47bc287a-5957-41fd-966c-2c82e3e48c25"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667], 
     AbsoluteThickness[1.6], 
     TagBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.004766666666666667], AbsoluteThickness[1.6], Opacity[0.2], 
        LineBox[{{{2., -1.}, {2., 0}}, {{3., -1.}, {3., 0}}, {{4., 0.}, {
           4., 0}}, {{5., -1.}, {5., 0}}, {{7., -1.}, {7., 0}}, {{8., 0.}, {
           8., 0}}, {{9., 0.}, {9., 0}}, {{11., -1.}, {11., 0}}, {{12., 0.}, {
           12., 0}}, {{13., -1.}, {13., 0}}, {{16., 0.}, {16., 0}}, {{
           17., -1.}, {17., 0}}, {{18., 0.}, {18., 0}}, {{19., -1.}, {
           19., 0}}, {{20., 0.}, {20., 0}}, {{23., -1.}, {23., 0}}, {{24., 
           0.}, {24., 0}}, {{25., 0.}, {25., 0}}, {{27., 0.}, {27., 0}}, {{
           28., 0.}, {28., 0}}, {{29., -1.}, {29., 0}}, {{30., -1.}, {
           30., 0}}, {{31., -1.}, {31., 0}}, {{32., 0.}, {32., 0}}, {{36., 
           0.}, {36., 0}}, {{37., -1.}, {37., 0}}, {{40., 0.}, {40., 0}}, {{
           41., -1.}, {41., 0}}, {{42., -1.}, {42., 0}}, {{43., -1.}, {
           43., 0}}, {{44., 0.}, {44., 0}}, {{45., 0.}, {45., 0}}, {{
           47., -1.}, {47., 0}}, {{48., 0.}, {48., 0}}, {{49., 0.}, {
           49., 0}}, {{50., 0.}, {50., 0}}, {{52., 0.}, {52., 0}}, {{
           53., -1.}, {53., 0}}, {{54., 0.}, {54., 0}}, {{56., 0.}, {
           56., 0}}, {{59., -1.}, {59., 0}}, {{60., 0.}, {60., 0}}, {{
           61., -1.}, {61., 0}}, {{63., 0.}, {63., 0}}, {{64., 0.}, {
           64., 0}}, {{66., -1.}, {66., 0}}, {{67., -1.}, {67., 0}}, {{68., 
           0.}, {68., 0}}, {{70., -1.}, {70., 0}}, {{71., -1.}, {71., 0}}, {{
           72., 0.}, {72., 0}}, {{73., -1.}, {73., 0}}, {{75., 0.}, {
           75., 0}}, {{76., 0.}, {76., 0}}, {{78., -1.}, {78., 0}}, {{
           79., -1.}, {79., 0}}, {{80., 0.}, {80., 0}}, {{81., 0.}, {
           81., 0}}, {{83., -1.}, {83., 0}}, {{84., 0.}, {84., 0}}, {{88., 
           0.}, {88., 0}}, {{89., -1.}, {89., 0}}, {{90., 0.}, {90., 0}}, {{
           92., 0.}, {92., 0}}, {{96., 0.}, {96., 0}}, {{97., -1.}, {
           97., 0}}, {{98., 0.}, {98., 0}}, {{99., 0.}, {99., 0}}, {{100., 
           0.}, {100., 0}}},
         VertexColors->None]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.004766666666666667], AbsoluteThickness[1.6], Opacity[0.2], 
        LineBox[{{{1., 1.}, {1., 0}}, {{6., 1.}, {6., 0}}, {{10., 1.}, {
           10., 0}}, {{14., 1.}, {14., 0}}, {{15., 1.}, {15., 0}}, {{21., 
           1.}, {21., 0}}, {{22., 1.}, {22., 0}}, {{26., 1.}, {26., 0}}, {{
           33., 1.}, {33., 0}}, {{34., 1.}, {34., 0}}, {{35., 1.}, {
           35., 0}}, {{38., 1.}, {38., 0}}, {{39., 1.}, {39., 0}}, {{46., 
           1.}, {46., 0}}, {{51., 1.}, {51., 0}}, {{55., 1.}, {55., 0}}, {{
           57., 1.}, {57., 0}}, {{58., 1.}, {58., 0}}, {{62., 1.}, {
           62., 0}}, {{65., 1.}, {65., 0}}, {{69., 1.}, {69., 0}}, {{74., 
           1.}, {74., 0}}, {{77., 1.}, {77., 0}}, {{82., 1.}, {82., 0}}, {{
           85., 1.}, {85., 0}}, {{86., 1.}, {86., 0}}, {{87., 1.}, {
           87., 0}}, {{91., 1.}, {91., 0}}, {{93., 1.}, {93., 0}}, {{94., 
           1.}, {94., 0}}, {{95., 1.}, {95., 0}}},
         VertexColors->None]}},
      Annotation[#, "Charting`Private`Tag$69263#1"]& ]}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667],
       AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxdj81OAkEQBjuePHrw4MEDGmKMMQZB8V8WVH4UQVYRvRo9+wrzZswj+Qhq
dr5JujYhm0p1dS9bH9/l14qZff79/t/V89PxbysSL6v3KnitMPesw2+I075N
+Br6bXAd/Q76Xczvwe+jPwA30B+ib8K34I/gj7G/DT5Bf4r+DHyO/gL+EnyF
/dfgDrjwfRDrXtdzAFsPvVj7b9CD7Ra9WP2d5wC2PnqwDXA/c+qH6ME2ghfr
++/hxdr/AC9WP4Yfwz/i+zOn/RP0E/gp+qmftyfPhVjzmat9EWwz9GL1Mz8f
wVaiL70Pmat9EfP2jF6s+5nTfbC9oAcHse5nTv0c/dzPB3AE2yt6sf4/fMw+
9Qv0C+8DOILtDb1Y9+Ej2N4z/wLq2aLd
       "]], {}},
     Annotation[#, "Charting`Private`Tag$69263#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1, 0},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{1, 100}, {-1., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8744130440671835`*^9},
 CellLabel->"Out[39]=",
 CellID->68584873,ExpressionUUID->"6c45e35f-29ae-4206-95cf-4bffdb9a091a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"PrimeOmega", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8744130142777004`*^9, 3.874413043784316*^9}, {
  3.8744130880446444`*^9, 3.874413090709543*^9}, {3.874413121944118*^9, 
  3.874413124548767*^9}, {3.8744135994377112`*^9, 3.874413601770356*^9}},
 CellLabel->"In[41]:=",
 CellID->169271410,ExpressionUUID->"ccc3d943-d0cb-4089-bab3-281a8e384b85"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667], 
     AbsoluteThickness[1.6], 
     TagBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.004766666666666667], AbsoluteThickness[1.6], Opacity[0.2], 
        LineBox[{{{1., 0.}, {1., 0}}},
         VertexColors->None]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.004766666666666667], AbsoluteThickness[1.6], Opacity[0.2], 
        LineBox[{{{2., 1.}, {2., 0}}, {{3., 1.}, {3., 0}}, {{4., 2.}, {
           4., 0}}, {{5., 1.}, {5., 0}}, {{6., 2.}, {6., 0}}, {{7., 1.}, {
           7., 0}}, {{8., 3.}, {8., 0}}, {{9., 2.}, {9., 0}}, {{10., 2.}, {
           10., 0}}, {{11., 1.}, {11., 0}}, {{12., 3.}, {12., 0}}, {{13., 
           1.}, {13., 0}}, {{14., 2.}, {14., 0}}, {{15., 2.}, {15., 0}}, {{
           16., 4.}, {16., 0}}, {{17., 1.}, {17., 0}}, {{18., 3.}, {
           18., 0}}, {{19., 1.}, {19., 0}}, {{20., 3.}, {20., 0}}, {{21., 
           2.}, {21., 0}}, {{22., 2.}, {22., 0}}, {{23., 1.}, {23., 0}}, {{
           24., 4.}, {24., 0}}, {{25., 2.}, {25., 0}}, {{26., 2.}, {
           26., 0}}, {{27., 3.}, {27., 0}}, {{28., 3.}, {28., 0}}, {{29., 
           1.}, {29., 0}}, {{30., 3.}, {30., 0}}, {{31., 1.}, {31., 0}}, {{
           32., 5.}, {32., 0}}, {{33., 2.}, {33., 0}}, {{34., 2.}, {
           34., 0}}, {{35., 2.}, {35., 0}}, {{36., 4.}, {36., 0}}, {{37., 
           1.}, {37., 0}}, {{38., 2.}, {38., 0}}, {{39., 2.}, {39., 0}}, {{
           40., 4.}, {40., 0}}, {{41., 1.}, {41., 0}}, {{42., 3.}, {
           42., 0}}, {{43., 1.}, {43., 0}}, {{44., 3.}, {44., 0}}, {{45., 
           3.}, {45., 0}}, {{46., 2.}, {46., 0}}, {{47., 1.}, {47., 0}}, {{
           48., 5.}, {48., 0}}, {{49., 2.}, {49., 0}}, {{50., 3.}, {
           50., 0}}, {{51., 2.}, {51., 0}}, {{52., 3.}, {52., 0}}, {{53., 
           1.}, {53., 0}}, {{54., 4.}, {54., 0}}, {{55., 2.}, {55., 0}}, {{
           56., 4.}, {56., 0}}, {{57., 2.}, {57., 0}}, {{58., 2.}, {
           58., 0}}, {{59., 1.}, {59., 0}}, {{60., 4.}, {60., 0}}, {{61., 
           1.}, {61., 0}}, {{62., 2.}, {62., 0}}, {{63., 3.}, {63., 0}}, {{
           64., 6.}, {64., 0}}, {{65., 2.}, {65., 0}}, {{66., 3.}, {
           66., 0}}, {{67., 1.}, {67., 0}}, {{68., 3.}, {68., 0}}, {{69., 
           2.}, {69., 0}}, {{70., 3.}, {70., 0}}, {{71., 1.}, {71., 0}}, {{
           72., 5.}, {72., 0}}, {{73., 1.}, {73., 0}}, {{74., 2.}, {
           74., 0}}, {{75., 3.}, {75., 0}}, {{76., 3.}, {76., 0}}, {{77., 
           2.}, {77., 0}}, {{78., 3.}, {78., 0}}, {{79., 1.}, {79., 0}}, {{
           80., 5.}, {80., 0}}, {{81., 4.}, {81., 0}}, {{82., 2.}, {
           82., 0}}, {{83., 1.}, {83., 0}}, {{84., 4.}, {84., 0}}, {{85., 
           2.}, {85., 0}}, {{86., 2.}, {86., 0}}, {{87., 2.}, {87., 0}}, {{
           88., 4.}, {88., 0}}, {{89., 1.}, {89., 0}}, {{90., 4.}, {
           90., 0}}, {{91., 2.}, {91., 0}}, {{92., 3.}, {92., 0}}, {{93., 
           2.}, {93., 0}}, {{94., 2.}, {94., 0}}, {{95., 2.}, {95., 0}}, {{
           96., 6.}, {96., 0}}, {{97., 1.}, {97., 0}}, {{98., 3.}, {
           98., 0}}, {{99., 3.}, {99., 0}}, {{100., 4.}, {100., 0}}},
         VertexColors->None]}},
      Annotation[#, "Charting`Private`Tag$71697#1"]& ]}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667],
       AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxdk8suREEURStGhgYGBgaIiIiI95suj6ab1lq39pgKY79Qn3Y/yScgaknO
ukmnsu46+5yquun5t8/hx0RK6f3n97v+PV+tFJ8c30+Kp3Ksm5afkZ+Vn8ux
74LqF8VLyi8rvyK/qvyaeD3Hc2wov6n+W/Lb8jvqvyveU35f8w9Ufyg+0rxj
8Yn6n8q35HPl+t0KzLyzyEWczuP+C0z/C+XF6VJ5mHw77r+05a/kxela82Hy
ncqcvxPrU1f9u/I38jD9bytzPph8T74nf6f9w/TvK9+Xv1ce5n4Gda3/0zxQ
/SDWNzD9H6LPMHn5BiY/rFzvPw+jL3Dt18Dsf6T5o1hf5BuY+Y+aD3OfMPNh
8uNYn8exvogbcXpSHub88g1M/rmunP85+iJuxOmlrnx/mPkw9ydOr//7+wbq
NH2x
       "]], {}},
     Annotation[#, "Charting`Private`Tag$71697#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1, 0},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{1, 100}, {0, 6.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.874413091126128*^9, 3.874413602082958*^9},
 CellLabel->"Out[41]=",
 CellID->222096917,ExpressionUUID->"c73c7fd7-f966-4439-816c-73f8b2544283"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"PrimeNu", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8744130142777004`*^9, 3.874413043784316*^9}, {
  3.8744130880446444`*^9, 3.874413090709543*^9}, {3.874413121944118*^9, 
  3.874413124548767*^9}, {3.8744135994377112`*^9, 3.8744136104299936`*^9}},
 CellLabel->"In[42]:=",
 CellID->55427159,ExpressionUUID->"736f62fd-8ec5-44e2-8db9-97d663a589e8"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667], 
     AbsoluteThickness[1.6], 
     TagBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.004766666666666667], AbsoluteThickness[1.6], Opacity[0.2], 
        LineBox[{{{1., 0.}, {1., 0}}},
         VertexColors->None]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.004766666666666667], AbsoluteThickness[1.6], Opacity[0.2], 
        LineBox[{{{2., 1.}, {2., 0}}, {{3., 1.}, {3., 0}}, {{4., 1.}, {
           4., 0}}, {{5., 1.}, {5., 0}}, {{6., 2.}, {6., 0}}, {{7., 1.}, {
           7., 0}}, {{8., 1.}, {8., 0}}, {{9., 1.}, {9., 0}}, {{10., 2.}, {
           10., 0}}, {{11., 1.}, {11., 0}}, {{12., 2.}, {12., 0}}, {{13., 
           1.}, {13., 0}}, {{14., 2.}, {14., 0}}, {{15., 2.}, {15., 0}}, {{
           16., 1.}, {16., 0}}, {{17., 1.}, {17., 0}}, {{18., 2.}, {
           18., 0}}, {{19., 1.}, {19., 0}}, {{20., 2.}, {20., 0}}, {{21., 
           2.}, {21., 0}}, {{22., 2.}, {22., 0}}, {{23., 1.}, {23., 0}}, {{
           24., 2.}, {24., 0}}, {{25., 1.}, {25., 0}}, {{26., 2.}, {
           26., 0}}, {{27., 1.}, {27., 0}}, {{28., 2.}, {28., 0}}, {{29., 
           1.}, {29., 0}}, {{30., 3.}, {30., 0}}, {{31., 1.}, {31., 0}}, {{
           32., 1.}, {32., 0}}, {{33., 2.}, {33., 0}}, {{34., 2.}, {
           34., 0}}, {{35., 2.}, {35., 0}}, {{36., 2.}, {36., 0}}, {{37., 
           1.}, {37., 0}}, {{38., 2.}, {38., 0}}, {{39., 2.}, {39., 0}}, {{
           40., 2.}, {40., 0}}, {{41., 1.}, {41., 0}}, {{42., 3.}, {
           42., 0}}, {{43., 1.}, {43., 0}}, {{44., 2.}, {44., 0}}, {{45., 
           2.}, {45., 0}}, {{46., 2.}, {46., 0}}, {{47., 1.}, {47., 0}}, {{
           48., 2.}, {48., 0}}, {{49., 1.}, {49., 0}}, {{50., 2.}, {
           50., 0}}, {{51., 2.}, {51., 0}}, {{52., 2.}, {52., 0}}, {{53., 
           1.}, {53., 0}}, {{54., 2.}, {54., 0}}, {{55., 2.}, {55., 0}}, {{
           56., 2.}, {56., 0}}, {{57., 2.}, {57., 0}}, {{58., 2.}, {
           58., 0}}, {{59., 1.}, {59., 0}}, {{60., 3.}, {60., 0}}, {{61., 
           1.}, {61., 0}}, {{62., 2.}, {62., 0}}, {{63., 2.}, {63., 0}}, {{
           64., 1.}, {64., 0}}, {{65., 2.}, {65., 0}}, {{66., 3.}, {
           66., 0}}, {{67., 1.}, {67., 0}}, {{68., 2.}, {68., 0}}, {{69., 
           2.}, {69., 0}}, {{70., 3.}, {70., 0}}, {{71., 1.}, {71., 0}}, {{
           72., 2.}, {72., 0}}, {{73., 1.}, {73., 0}}, {{74., 2.}, {
           74., 0}}, {{75., 2.}, {75., 0}}, {{76., 2.}, {76., 0}}, {{77., 
           2.}, {77., 0}}, {{78., 3.}, {78., 0}}, {{79., 1.}, {79., 0}}, {{
           80., 2.}, {80., 0}}, {{81., 1.}, {81., 0}}, {{82., 2.}, {
           82., 0}}, {{83., 1.}, {83., 0}}, {{84., 3.}, {84., 0}}, {{85., 
           2.}, {85., 0}}, {{86., 2.}, {86., 0}}, {{87., 2.}, {87., 0}}, {{
           88., 2.}, {88., 0}}, {{89., 1.}, {89., 0}}, {{90., 3.}, {
           90., 0}}, {{91., 2.}, {91., 0}}, {{92., 2.}, {92., 0}}, {{93., 
           2.}, {93., 0}}, {{94., 2.}, {94., 0}}, {{95., 2.}, {95., 0}}, {{
           96., 2.}, {96., 0}}, {{97., 1.}, {97., 0}}, {{98., 2.}, {
           98., 0}}, {{99., 2.}, {99., 0}}, {{100., 2.}, {100., 0}}},
         VertexColors->None]}},
      Annotation[#, "Charting`Private`Tag$72171#1"]& ]}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667],
       AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxd0csug1EUhuEvRoYGBgYGiIiIiPOZbodSp6pf6zAVxm5hXdq+JJeA+D/J
eps0zdN3rb3/tLNvn83HmKT3n/fv59/rq6P8Kvn7cXgCnoSnSj5nGn0GnoPn
sb+Avoi+hL6MvgKvYn4NXsf8Bvom+ha8De9gfxd9D30f/QD9EP0I/bi1/7cO
eskO2+edZAesU3Tb55+hwzpHt73fzc8fXfQL7MO6RLe930PvoV+hw7pGt71/
gw7rFh3WHbrt8/ut/fv00e+xD2uQ58sA83Z7fsW8HvJ8gcP2vu39BvtN7oFe
YT1iHw7b99u+f4j9Ye6BXtE1yueXUZ4PuMJ6wv2277f9/JjXM/bhgCusF+zb
vh+9wnr99zeTVoVX
       "]], {}},
     Annotation[#, "Charting`Private`Tag$72171#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1, 0},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{1, 100}, {0, 3.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8744136107739*^9},
 CellLabel->"Out[42]=",
 CellID->414186869,ExpressionUUID->"33fb6a38-eaa7-41e3-85de-65f5d5ef32e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"PrimePi", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8744130142777004`*^9, 3.874413043784316*^9}, {
  3.8744130880446444`*^9, 3.874413090709543*^9}, {3.874413121944118*^9, 
  3.874413124548767*^9}, {3.8744135994377112`*^9, 3.8744136152285805`*^9}},
 CellLabel->"In[43]:=",
 CellID->314003380,ExpressionUUID->"e7cd9956-5b7b-48e1-8d20-b18c2358ea9a"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667], 
     AbsoluteThickness[1.6], 
     TagBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.004766666666666667], AbsoluteThickness[1.6], Opacity[0.2], 
        LineBox[{{{1., 0.}, {1., 0}}},
         VertexColors->None]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.004766666666666667], AbsoluteThickness[1.6], Opacity[0.2], 
        LineBox[{{{2., 1.}, {2., 0}}, {{3., 2.}, {3., 0}}, {{4., 2.}, {
           4., 0}}, {{5., 3.}, {5., 0}}, {{6., 3.}, {6., 0}}, {{7., 4.}, {
           7., 0}}, {{8., 4.}, {8., 0}}, {{9., 4.}, {9., 0}}, {{10., 4.}, {
           10., 0}}, {{11., 5.}, {11., 0}}, {{12., 5.}, {12., 0}}, {{13., 
           6.}, {13., 0}}, {{14., 6.}, {14., 0}}, {{15., 6.}, {15., 0}}, {{
           16., 6.}, {16., 0}}, {{17., 7.}, {17., 0}}, {{18., 7.}, {
           18., 0}}, {{19., 8.}, {19., 0}}, {{20., 8.}, {20., 0}}, {{21., 
           8.}, {21., 0}}, {{22., 8.}, {22., 0}}, {{23., 9.}, {23., 0}}, {{
           24., 9.}, {24., 0}}, {{25., 9.}, {25., 0}}, {{26., 9.}, {
           26., 0}}, {{27., 9.}, {27., 0}}, {{28., 9.}, {28., 0}}, {{29., 
           10.}, {29., 0}}, {{30., 10.}, {30., 0}}, {{31., 11.}, {31., 0}}, {{
           32., 11.}, {32., 0}}, {{33., 11.}, {33., 0}}, {{34., 11.}, {
           34., 0}}, {{35., 11.}, {35., 0}}, {{36., 11.}, {36., 0}}, {{37., 
           12.}, {37., 0}}, {{38., 12.}, {38., 0}}, {{39., 12.}, {39., 0}}, {{
           40., 12.}, {40., 0}}, {{41., 13.}, {41., 0}}, {{42., 13.}, {
           42., 0}}, {{43., 14.}, {43., 0}}, {{44., 14.}, {44., 0}}, {{45., 
           14.}, {45., 0}}, {{46., 14.}, {46., 0}}, {{47., 15.}, {47., 0}}, {{
           48., 15.}, {48., 0}}, {{49., 15.}, {49., 0}}, {{50., 15.}, {
           50., 0}}, {{51., 15.}, {51., 0}}, {{52., 15.}, {52., 0}}, {{53., 
           16.}, {53., 0}}, {{54., 16.}, {54., 0}}, {{55., 16.}, {55., 0}}, {{
           56., 16.}, {56., 0}}, {{57., 16.}, {57., 0}}, {{58., 16.}, {
           58., 0}}, {{59., 17.}, {59., 0}}, {{60., 17.}, {60., 0}}, {{61., 
           18.}, {61., 0}}, {{62., 18.}, {62., 0}}, {{63., 18.}, {63., 0}}, {{
           64., 18.}, {64., 0}}, {{65., 18.}, {65., 0}}, {{66., 18.}, {
           66., 0}}, {{67., 19.}, {67., 0}}, {{68., 19.}, {68., 0}}, {{69., 
           19.}, {69., 0}}, {{70., 19.}, {70., 0}}, {{71., 20.}, {71., 0}}, {{
           72., 20.}, {72., 0}}, {{73., 21.}, {73., 0}}, {{74., 21.}, {
           74., 0}}, {{75., 21.}, {75., 0}}, {{76., 21.}, {76., 0}}, {{77., 
           21.}, {77., 0}}, {{78., 21.}, {78., 0}}, {{79., 22.}, {79., 0}}, {{
           80., 22.}, {80., 0}}, {{81., 22.}, {81., 0}}, {{82., 22.}, {
           82., 0}}, {{83., 23.}, {83., 0}}, {{84., 23.}, {84., 0}}, {{85., 
           23.}, {85., 0}}, {{86., 23.}, {86., 0}}, {{87., 23.}, {87., 0}}, {{
           88., 23.}, {88., 0}}, {{89., 24.}, {89., 0}}, {{90., 24.}, {
           90., 0}}, {{91., 24.}, {91., 0}}, {{92., 24.}, {92., 0}}, {{93., 
           24.}, {93., 0}}, {{94., 24.}, {94., 0}}, {{95., 24.}, {95., 0}}, {{
           96., 24.}, {96., 0}}, {{97., 25.}, {97., 0}}, {{98., 25.}, {
           98., 0}}, {{99., 25.}, {99., 0}}, {{100., 25.}, {100., 0}}},
         VertexColors->None]}},
      Annotation[#, "Charting`Private`Tag$72645#1"]& ]}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667],
       AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxd1ElKhDEQhuHClUsXvXDhQptGREScZ+1ynqd23oquvUIdrY7UR1Axn1Bv
4Kd4Un9ISFKZev8afI6Y2cfP9xv/2rBvtXntH/XaPwZ3vP43Dk9g3CTchXvw
NOaZgWcx7xw8Dy/Ai1jnEryMda/Aq/AavN5it8UNeBPegrfhHXi3Re3bHtxv
Ufvo1QHbPvKwHSAv61wOqwO2I+RlneNxdcg615PqgO0UeVn34Kw6YDtHHrYL
5GXdq8vqgO0KediukZd1T2+qQ9a9va0O2O6qHQ44ZdXBfbXDAaesuhlUu9zq
KOCE7aHa4YBTVl0+VjsccMqq46dqhwNO2J4xXm7vQsAJ20u1wwEnbK8YL7d3
KOCE7e3f3/+DdX8=
       "]], {}},
     Annotation[#, "Charting`Private`Tag$72645#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1, 0},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{1, 100}, {0, 25.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.874413615575815*^9},
 CellLabel->"Out[43]=",
 CellID->141478762,ExpressionUUID->"37019675-b253-441e-b578-eb106905b741"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"LiouvilleLambda", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8744130142777004`*^9, 3.874413043784316*^9}, {
  3.8744130880446444`*^9, 3.874413090709543*^9}, {3.874413121944118*^9, 
  3.874413124548767*^9}, {3.8744135994377112`*^9, 3.8744136152285805`*^9}, {
  3.8744136742085905`*^9, 3.8744136803896427`*^9}},
 CellLabel->"In[45]:=",
 CellID->79653431,ExpressionUUID->"e694f9ab-e1e9-4561-9b05-1be607b2d4ab"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667], 
     AbsoluteThickness[1.6], 
     TagBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.004766666666666667], AbsoluteThickness[1.6], Opacity[0.2], 
        LineBox[{{{2., -1.}, {2., 0}}, {{3., -1.}, {3., 0}}, {{5., -1.}, {
           5., 0}}, {{7., -1.}, {7., 0}}, {{8., -1.}, {8., 0}}, {{11., -1.}, {
           11., 0}}, {{12., -1.}, {12., 0}}, {{13., -1.}, {13., 0}}, {{
           17., -1.}, {17., 0}}, {{18., -1.}, {18., 0}}, {{19., -1.}, {
           19., 0}}, {{20., -1.}, {20., 0}}, {{23., -1.}, {23., 0}}, {{
           27., -1.}, {27., 0}}, {{28., -1.}, {28., 0}}, {{29., -1.}, {
           29., 0}}, {{30., -1.}, {30., 0}}, {{31., -1.}, {31., 0}}, {{
           32., -1.}, {32., 0}}, {{37., -1.}, {37., 0}}, {{41., -1.}, {
           41., 0}}, {{42., -1.}, {42., 0}}, {{43., -1.}, {43., 0}}, {{
           44., -1.}, {44., 0}}, {{45., -1.}, {45., 0}}, {{47., -1.}, {
           47., 0}}, {{48., -1.}, {48., 0}}, {{50., -1.}, {50., 0}}, {{
           52., -1.}, {52., 0}}, {{53., -1.}, {53., 0}}, {{59., -1.}, {
           59., 0}}, {{61., -1.}, {61., 0}}, {{63., -1.}, {63., 0}}, {{
           66., -1.}, {66., 0}}, {{67., -1.}, {67., 0}}, {{68., -1.}, {
           68., 0}}, {{70., -1.}, {70., 0}}, {{71., -1.}, {71., 0}}, {{
           72., -1.}, {72., 0}}, {{73., -1.}, {73., 0}}, {{75., -1.}, {
           75., 0}}, {{76., -1.}, {76., 0}}, {{78., -1.}, {78., 0}}, {{
           79., -1.}, {79., 0}}, {{80., -1.}, {80., 0}}, {{83., -1.}, {
           83., 0}}, {{89., -1.}, {89., 0}}, {{92., -1.}, {92., 0}}, {{
           97., -1.}, {97., 0}}, {{98., -1.}, {98., 0}}, {{99., -1.}, {
           99., 0}}},
         VertexColors->None]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.004766666666666667], AbsoluteThickness[1.6], Opacity[0.2], 
        LineBox[{{{1., 1.}, {1., 0}}, {{4., 1.}, {4., 0}}, {{6., 1.}, {
           6., 0}}, {{9., 1.}, {9., 0}}, {{10., 1.}, {10., 0}}, {{14., 1.}, {
           14., 0}}, {{15., 1.}, {15., 0}}, {{16., 1.}, {16., 0}}, {{21., 
           1.}, {21., 0}}, {{22., 1.}, {22., 0}}, {{24., 1.}, {24., 0}}, {{
           25., 1.}, {25., 0}}, {{26., 1.}, {26., 0}}, {{33., 1.}, {
           33., 0}}, {{34., 1.}, {34., 0}}, {{35., 1.}, {35., 0}}, {{36., 
           1.}, {36., 0}}, {{38., 1.}, {38., 0}}, {{39., 1.}, {39., 0}}, {{
           40., 1.}, {40., 0}}, {{46., 1.}, {46., 0}}, {{49., 1.}, {
           49., 0}}, {{51., 1.}, {51., 0}}, {{54., 1.}, {54., 0}}, {{55., 
           1.}, {55., 0}}, {{56., 1.}, {56., 0}}, {{57., 1.}, {57., 0}}, {{
           58., 1.}, {58., 0}}, {{60., 1.}, {60., 0}}, {{62., 1.}, {
           62., 0}}, {{64., 1.}, {64., 0}}, {{65., 1.}, {65., 0}}, {{69., 
           1.}, {69., 0}}, {{74., 1.}, {74., 0}}, {{77., 1.}, {77., 0}}, {{
           81., 1.}, {81., 0}}, {{82., 1.}, {82., 0}}, {{84., 1.}, {
           84., 0}}, {{85., 1.}, {85., 0}}, {{86., 1.}, {86., 0}}, {{87., 
           1.}, {87., 0}}, {{88., 1.}, {88., 0}}, {{90., 1.}, {90., 0}}, {{
           91., 1.}, {91., 0}}, {{93., 1.}, {93., 0}}, {{94., 1.}, {
           94., 0}}, {{95., 1.}, {95., 0}}, {{96., 1.}, {96., 0}}, {{100., 
           1.}, {100., 0}}},
         VertexColors->None]}},
      Annotation[#, "Charting`Private`Tag$77204#1"]& ]}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667],
       AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxdz8tKA0EQRuEfVy5duHDhQkVERMT7XdNek3hJYqJGt6JrX6HfLPVIPoLK
FAV1AmH4OFXdM4sf38OvKUmff///Z/P7aeWninvSPKfhmZLnZ9Hn0OfRF+Al
zC/DK5hfhdfgdexvwJvwFva34R14F97DefvwAeYP0Y/gY/gE+6fwGXwOt+CS
XcN+30V2hXWJHvbzr9BhXaOHff8G7wfrFh1WG+e30TvY7+R5ddG76HfosO5x
P6wHdFiP6GE/v4feQ++j99EHuRe4DvK8wXrKLmHfRzdYQ+zDNdycZ+gaYX+U
5yu6wXrGftj3YcO8XnIvcIUN1iv2w/796AZrjPcf515hg/WG+8N+P2yw3mP/
F8M824Y=
       "]], {}},
     Annotation[#, "Charting`Private`Tag$77204#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1, 0},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{1, 100}, {-1., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8744136806532774`*^9},
 CellLabel->"Out[45]=",
 CellID->197022446,ExpressionUUID->"356449b3-4759-4577-af62-362b41380293"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"EulerPhi", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8744130142777004`*^9, 3.874413043784316*^9}, {
  3.8744130880446444`*^9, 3.874413090709543*^9}, {3.874413121944118*^9, 
  3.874413124548767*^9}, {3.8744135994377112`*^9, 3.8744136152285805`*^9}, {
  3.8744136742085905`*^9, 3.8744136854124002`*^9}},
 CellLabel->"In[46]:=",
 CellID->165362270,ExpressionUUID->"a5f0687a-fa9b-4b54-8a90-8ddd89a3dd97"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667], 
     AbsoluteThickness[1.6], 
     TagBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.004766666666666667], AbsoluteThickness[1.6], Opacity[0.2], 
        LineBox[{},
         VertexColors->None]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.004766666666666667], AbsoluteThickness[1.6], Opacity[0.2], 
        LineBox[{{{1., 1.}, {1., 0}}, {{2., 1.}, {2., 0}}, {{3., 2.}, {
           3., 0}}, {{4., 2.}, {4., 0}}, {{5., 4.}, {5., 0}}, {{6., 2.}, {
           6., 0}}, {{7., 6.}, {7., 0}}, {{8., 4.}, {8., 0}}, {{9., 6.}, {
           9., 0}}, {{10., 4.}, {10., 0}}, {{11., 10.}, {11., 0}}, {{12., 
           4.}, {12., 0}}, {{13., 12.}, {13., 0}}, {{14., 6.}, {14., 0}}, {{
           15., 8.}, {15., 0}}, {{16., 8.}, {16., 0}}, {{17., 16.}, {
           17., 0}}, {{18., 6.}, {18., 0}}, {{19., 18.}, {19., 0}}, {{20., 
           8.}, {20., 0}}, {{21., 12.}, {21., 0}}, {{22., 10.}, {22., 0}}, {{
           23., 22.}, {23., 0}}, {{24., 8.}, {24., 0}}, {{25., 20.}, {
           25., 0}}, {{26., 12.}, {26., 0}}, {{27., 18.}, {27., 0}}, {{28., 
           12.}, {28., 0}}, {{29., 28.}, {29., 0}}, {{30., 8.}, {30., 0}}, {{
           31., 30.}, {31., 0}}, {{32., 16.}, {32., 0}}, {{33., 20.}, {
           33., 0}}, {{34., 16.}, {34., 0}}, {{35., 24.}, {35., 0}}, {{36., 
           12.}, {36., 0}}, {{37., 36.}, {37., 0}}, {{38., 18.}, {38., 0}}, {{
           39., 24.}, {39., 0}}, {{40., 16.}, {40., 0}}, {{41., 40.}, {
           41., 0}}, {{42., 12.}, {42., 0}}, {{43., 42.}, {43., 0}}, {{44., 
           20.}, {44., 0}}, {{45., 24.}, {45., 0}}, {{46., 22.}, {46., 0}}, {{
           47., 46.}, {47., 0}}, {{48., 16.}, {48., 0}}, {{49., 42.}, {
           49., 0}}, {{50., 20.}, {50., 0}}, {{51., 32.}, {51., 0}}, {{52., 
           24.}, {52., 0}}, {{53., 52.}, {53., 0}}, {{54., 18.}, {54., 0}}, {{
           55., 40.}, {55., 0}}, {{56., 24.}, {56., 0}}, {{57., 36.}, {
           57., 0}}, {{58., 28.}, {58., 0}}, {{59., 58.}, {59., 0}}, {{60., 
           16.}, {60., 0}}, {{61., 60.}, {61., 0}}, {{62., 30.}, {62., 0}}, {{
           63., 36.}, {63., 0}}, {{64., 32.}, {64., 0}}, {{65., 48.}, {
           65., 0}}, {{66., 20.}, {66., 0}}, {{67., 66.}, {67., 0}}, {{68., 
           32.}, {68., 0}}, {{69., 44.}, {69., 0}}, {{70., 24.}, {70., 0}}, {{
           71., 70.}, {71., 0}}, {{72., 24.}, {72., 0}}, {{73., 72.}, {
           73., 0}}, {{74., 36.}, {74., 0}}, {{75., 40.}, {75., 0}}, {{76., 
           36.}, {76., 0}}, {{77., 60.}, {77., 0}}, {{78., 24.}, {78., 0}}, {{
           79., 78.}, {79., 0}}, {{80., 32.}, {80., 0}}, {{81., 54.}, {
           81., 0}}, {{82., 40.}, {82., 0}}, {{83., 82.}, {83., 0}}, {{84., 
           24.}, {84., 0}}, {{85., 64.}, {85., 0}}, {{86., 42.}, {86., 0}}, {{
           87., 56.}, {87., 0}}, {{88., 40.}, {88., 0}}, {{89., 88.}, {
           89., 0}}, {{90., 24.}, {90., 0}}, {{91., 72.}, {91., 0}}, {{92., 
           44.}, {92., 0}}, {{93., 60.}, {93., 0}}, {{94., 46.}, {94., 0}}, {{
           95., 72.}, {95., 0}}, {{96., 32.}, {96., 0}}, {{97., 96.}, {
           97., 0}}, {{98., 42.}, {98., 0}}, {{99., 60.}, {99., 0}}, {{100., 
           40.}, {100., 0}}},
         VertexColors->None]}},
      Annotation[#, "Charting`Private`Tag$77678#1"]& ]}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667],
       AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxdkssuQ2EUhU+MDA0MDAwQERER9zv9VauUVm+KqTD2CvvRziN5BMRakv01
Odn51u6+/8tvn6OPmaqq3n++X/v3+2pkW5XMsyXrc+B56AvwL0Jfwv9X4F+F
fw36Ovwb0DeRbwt1t8E70HcRvwd9H/EHqH+Ifo+gHyP+BHlPke8M9c/hv4B+
ifwN6EVW84bZ9a/gN7vvZq4fTejXud8wO76F/C3obeRvQ7/J/YbZ+Tuy2nd0
oN+ivtn575Df7D11c73oQr+X9fxmz/eAeHNTtiere0YPeh/996E/yureYXb+
QZ6nmLWHMGv+egB9iHiz7hBmzVcPoY+yv4yyHmb1W5u9v3H2F7PmD7Prj6FP
0L9Zdwqz6tUT6E/o3+w9mfWearPvPM35yzTrYXb/Zu/hWVb7LmbPb9Z7r82O
f5H1/C9ZD7P7N/t9vf73/w39+322
       "]], {}},
     Annotation[#, "Charting`Private`Tag$77678#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1, 0},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{1, 100}, {0, 96.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.874413685707494*^9},
 CellLabel->"Out[46]=",
 CellID->105064475,ExpressionUUID->"a453146d-5893-47b4-8b4b-fcd410dc308e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"CarmichaelLambda", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8744130142777004`*^9, 3.874413043784316*^9}, {
  3.8744130880446444`*^9, 3.874413090709543*^9}, {3.874413121944118*^9, 
  3.874413124548767*^9}, {3.8744135994377112`*^9, 3.8744136152285805`*^9}, {
  3.8744136742085905`*^9, 3.87441370385538*^9}},
 CellLabel->"In[47]:=",
 CellID->130621690,ExpressionUUID->"5f9fa0ad-ea3a-4e9d-9c1e-e8fe00a66ec7"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667], 
     AbsoluteThickness[1.6], 
     TagBox[{
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.004766666666666667], AbsoluteThickness[1.6], Opacity[0.2], 
        LineBox[{},
         VertexColors->None]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.004766666666666667], AbsoluteThickness[1.6], Opacity[0.2], 
        LineBox[{{{1., 1.}, {1., 0}}, {{2., 1.}, {2., 0}}, {{3., 2.}, {
           3., 0}}, {{4., 2.}, {4., 0}}, {{5., 4.}, {5., 0}}, {{6., 2.}, {
           6., 0}}, {{7., 6.}, {7., 0}}, {{8., 2.}, {8., 0}}, {{9., 6.}, {
           9., 0}}, {{10., 4.}, {10., 0}}, {{11., 10.}, {11., 0}}, {{12., 
           2.}, {12., 0}}, {{13., 12.}, {13., 0}}, {{14., 6.}, {14., 0}}, {{
           15., 4.}, {15., 0}}, {{16., 4.}, {16., 0}}, {{17., 16.}, {
           17., 0}}, {{18., 6.}, {18., 0}}, {{19., 18.}, {19., 0}}, {{20., 
           4.}, {20., 0}}, {{21., 6.}, {21., 0}}, {{22., 10.}, {22., 0}}, {{
           23., 22.}, {23., 0}}, {{24., 2.}, {24., 0}}, {{25., 20.}, {
           25., 0}}, {{26., 12.}, {26., 0}}, {{27., 18.}, {27., 0}}, {{28., 
           6.}, {28., 0}}, {{29., 28.}, {29., 0}}, {{30., 4.}, {30., 0}}, {{
           31., 30.}, {31., 0}}, {{32., 8.}, {32., 0}}, {{33., 10.}, {
           33., 0}}, {{34., 16.}, {34., 0}}, {{35., 12.}, {35., 0}}, {{36., 
           6.}, {36., 0}}, {{37., 36.}, {37., 0}}, {{38., 18.}, {38., 0}}, {{
           39., 12.}, {39., 0}}, {{40., 4.}, {40., 0}}, {{41., 40.}, {
           41., 0}}, {{42., 6.}, {42., 0}}, {{43., 42.}, {43., 0}}, {{44., 
           10.}, {44., 0}}, {{45., 12.}, {45., 0}}, {{46., 22.}, {46., 0}}, {{
           47., 46.}, {47., 0}}, {{48., 4.}, {48., 0}}, {{49., 42.}, {
           49., 0}}, {{50., 20.}, {50., 0}}, {{51., 16.}, {51., 0}}, {{52., 
           12.}, {52., 0}}, {{53., 52.}, {53., 0}}, {{54., 18.}, {54., 0}}, {{
           55., 20.}, {55., 0}}, {{56., 6.}, {56., 0}}, {{57., 18.}, {
           57., 0}}, {{58., 28.}, {58., 0}}, {{59., 58.}, {59., 0}}, {{60., 
           4.}, {60., 0}}, {{61., 60.}, {61., 0}}, {{62., 30.}, {62., 0}}, {{
           63., 6.}, {63., 0}}, {{64., 16.}, {64., 0}}, {{65., 12.}, {
           65., 0}}, {{66., 10.}, {66., 0}}, {{67., 66.}, {67., 0}}, {{68., 
           16.}, {68., 0}}, {{69., 22.}, {69., 0}}, {{70., 12.}, {70., 0}}, {{
           71., 70.}, {71., 0}}, {{72., 6.}, {72., 0}}, {{73., 72.}, {
           73., 0}}, {{74., 36.}, {74., 0}}, {{75., 20.}, {75., 0}}, {{76., 
           18.}, {76., 0}}, {{77., 30.}, {77., 0}}, {{78., 12.}, {78., 0}}, {{
           79., 78.}, {79., 0}}, {{80., 4.}, {80., 0}}, {{81., 54.}, {
           81., 0}}, {{82., 40.}, {82., 0}}, {{83., 82.}, {83., 0}}, {{84., 
           6.}, {84., 0}}, {{85., 16.}, {85., 0}}, {{86., 42.}, {86., 0}}, {{
           87., 28.}, {87., 0}}, {{88., 10.}, {88., 0}}, {{89., 88.}, {
           89., 0}}, {{90., 12.}, {90., 0}}, {{91., 12.}, {91., 0}}, {{92., 
           22.}, {92., 0}}, {{93., 30.}, {93., 0}}, {{94., 46.}, {94., 0}}, {{
           95., 36.}, {95., 0}}, {{96., 8.}, {96., 0}}, {{97., 96.}, {
           97., 0}}, {{98., 42.}, {98., 0}}, {{99., 30.}, {99., 0}}, {{100., 
           20.}, {100., 0}}},
         VertexColors->None]}},
      Annotation[#, "Charting`Private`Tag$80380#1"]& ]}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667],
       AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxdlDlOQ0EQREdEhAQEBASAEEIIIRazLx4+NgZjG28YkyKIuUIf7R+JIwCi
XjBlySq9+p6e6p75Xn//Gn8upJQ+fr9/+v/5bpaacsmLufSXjJfNX7Hnq+av
2fMNe75p9bbM37b1O+bvWr09q7dvfGD+oa0/Mr9h64/t9yeW99T8M8t/bnUv
pPRzaftf2X7X5t9Yvqb5WapzCJi8t1LNI2DyVOX+UZl/V+YNmPWtMl+0zG9b
/bb592XegKnfkWre0TH/wfaHqf8o1XkEzP3olvtF1/wnKf3DnG9PSn+98vep
L9V5Rt/8geUfmP8s1XkHzH0Zlv1kmH5gzbcemj+y9TDzhlWvHpk/LvPkcekH
XGk9zPwmUs0rw/QLs//E/KlU88uwzilg3cd6av6L5Yd5X2Ddpxrm/ZxJNd88
K/2AyW+cXqWad4bpH9Z9r+FKOpfq/c/z0g+Y/DD/H2/SRv4B5l15kg==
       "]], {}},
     Annotation[#, "Charting`Private`Tag$80380#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1, 0},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{1, 100}, {0, 96.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8744137041471057`*^9},
 CellLabel->"Out[47]=",
 CellID->136296211,ExpressionUUID->"85c0a6e6-912c-4ec4-9b77-85e17c25d295"]
}, Open  ]],

Cell["Let k=13.", "Text",
 CellChangeTimes->{{3.874413053574014*^9, 3.874413055778886*^9}},
 CellID->387562797,ExpressionUUID->"13230542-ffa8-4245-9882-2aeed907eea4"],

Cell["\<\
P(k)=P(13) is true since 13 is prime. We need to show that P(k+1) \
\>", "Text",
 CellChangeTimes->{{3.874413058220045*^9, 3.8744130810388455`*^9}},
 CellID->735992558,ExpressionUUID->"479eaf32-76d8-4601-bae4-ba588b06f749"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<Prime*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8744136200324163`*^9, 3.874413625437647*^9}},
 CellLabel->"In[44]:=",
 CellID->36138,ExpressionUUID->"6fab4968-d2e5-4b12-b14f-28d9bb701463"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Prime\"\>", ",", "\<\"PrimeNu\"\>", ",", "\<\"PrimeOmega\"\>", 
   ",", "\<\"PrimePi\"\>", ",", "\<\"PrimePowerQ\"\>", ",", "\<\"PrimeQ\"\>", 
   ",", "\<\"Primes\"\>", ",", "\<\"PrimeZetaP\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.874413625760821*^9},
 CellLabel->"Out[44]=",
 CellID->10831694,ExpressionUUID->"36fa3732-bef6-42eb-a4ed-4e7a9869070b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fibonnaci", "Section",
 CellChangeTimes->{{3.8746698980019035`*^9, 3.8746698994451303`*^9}},
 CellID->116984980,ExpressionUUID->"64022d50-f0cb-467f-99d9-06515c17d0bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Fibonacci"}]], "Input",
 CellChangeTimes->{{3.874669901083512*^9, 3.8746699024246073`*^9}},
 CellLabel->"In[7]:=",
 CellID->183599965,ExpressionUUID->"f559eb9c-4284-4a20-b00a-67a98f444fe0"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Fibonacci",
              ButtonNote->"paclet:ref/Fibonacci"],
             "\"paclet:ref/Fibonacci\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Fibonacci\\\", \\\"[\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the Fibonacci number \
\\!\\(\\*SubscriptBox[\\\"F\\\", \\\"n\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Fibonacci\\\", \\\"[\\\", RowBox[{StyleBox[\\\"n\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
gives the Fibonacci polynomial \\!\\(\\*RowBox[{SubscriptBox[\\\"F\\\", \\\"n\
\\\"], \\\"(\\\", \\\"x\\\", \\\")\\\"}]\\). \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Fibonacci", 
                    "paclet:ref/Fibonacci", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Fibonacci.\
html"], None}, "http://reference.wolfram.com/language/ref/Fibonacci.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    "Listable", ",", "NumericFunction", ",", "Protected", ",",
                     "ReadProtected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Fibonacci\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Fibonacci",
              ButtonNote->"paclet:ref/Fibonacci"],
             "\"paclet:ref/Fibonacci\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Fibonacci\\\", \\\"[\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the Fibonacci number \
\\!\\(\\*SubscriptBox[\\\"F\\\", \\\"n\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Fibonacci\\\", \\\"[\\\", RowBox[{StyleBox[\\\"n\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"x\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
gives the Fibonacci polynomial \\!\\(\\*RowBox[{SubscriptBox[\\\"F\\\", \\\"n\
\\\"], \\\"(\\\", \\\"x\\\", \\\")\\\"}]\\). \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Fibonacci\", \"[\", StyleBox[\"n\", \"TI\"], \"]\"}]\) \
gives the Fibonacci number \!\(\*SubscriptBox[\"F\", \"n\"]\). \n\
\!\(\*RowBox[{\"Fibonacci\", \"[\", RowBox[{StyleBox[\"n\", \"TI\"], \",\", \
StyleBox[\"x\", \"TI\"]}], \"]\"}]\) gives the Fibonacci polynomial \
\!\(\*RowBox[{SubscriptBox[\"F\", \"n\"], \"(\", \"x\", \")\"}]\). ", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/Fibonacci", "Web" -> 
      "http://reference.wolfram.com/language/ref/Fibonacci.html"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {Listable, NumericFunction, Protected, ReadProtected}, 
    "FullName" -> "System`Fibonacci"|>, False]]], "Output",
 CellChangeTimes->{3.8746699027478733`*^9},
 CellLabel->"Out[7]=",
 CellID->131860268,ExpressionUUID->"b1301bac-8f71-4880-a920-e86ae3ab5c9e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Asymptotic", "[", 
  RowBox[{
   RowBox[{"Fibonacci", "[", "n", "]"}], ",", 
   RowBox[{"n", "->", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.874669921353911*^9, 3.8746699303622904`*^9}},
 CellLabel->"In[8]:=",
 CellID->349234795,ExpressionUUID->"1af07af9-34df-452d-baae-a86bc478ad78"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SqrtBox["5"]}], ")"}]}], ")"}], "n"], 
  SqrtBox["5"]]], "Output",
 CellChangeTimes->{3.874669931580826*^9},
 CellLabel->"Out[8]=",
 CellID->73383408,ExpressionUUID->"03c8dc30-d0e0-40f2-b595-f965221a05fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Asymptotic", "[", 
   RowBox[{
    RowBox[{"Fibonacci", "[", "n", "]"}], ",", 
    RowBox[{"n", "->", "\[Infinity]"}], ",", 
    RowBox[{"SeriesTermGoal", "->", "19"}]}], "]"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.874669921353911*^9, 3.8746699474530773`*^9}},
 CellLabel->"In[10]:=",
 CellID->820835885,ExpressionUUID->"7b5d0210-c083-4cbb-a182-fdf7c27216ac"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"n", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"log", "(", 
         RowBox[{"1", "+", 
          SqrtBox["5"]}], ")"}], "-", 
        RowBox[{"log", "(", "2", ")"}]}], ")"}]}]], 
    SqrtBox["5"]], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"n", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"log", "(", "2", ")"}]}], "+", 
         RowBox[{"log", "(", "4", ")"}], "-", 
         RowBox[{"log", "(", 
          RowBox[{"1", "+", 
           SqrtBox["5"]}], ")"}]}], ")"}]}]], " ", 
     RowBox[{"cos", "(", 
      RowBox[{"\[Pi]", " ", "n"}], ")"}]}], 
    SqrtBox["5"]]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.8746699476990566`*^9},
 CellLabel->"Out[10]//TraditionalForm=",
 CellID->396942064,ExpressionUUID->"5b14606c-10f1-48a1-a539-b44c53f87113"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Fibonacci", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[13]:=",
 CellID->23894860,ExpressionUUID->"0574d984-663f-4aa8-8342-50c71af8324e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "2", ",", "3", ",", "5", ",", "8", ",", "13", ",", "21",
    ",", "34", ",", "55", ",", "89", ",", "144", ",", "233", ",", "377", ",", 
   "610", ",", "987", ",", "1597", ",", "2584", ",", "4181", ",", "6765"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8746699738386135`*^9},
 CellLabel->"Out[13]=",
 CellID->29405763,ExpressionUUID->"4233268c-7f27-4d14-b8e1-070e7fa0b05a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Fibonacci", "[", 
    RowBox[{
     RowBox[{"1", "/", "2"}], ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[14]:=",
 CellID->101194223,ExpressionUUID->"ac611a9f-35c3-46ff-b3fc-bcd51dcfc4f6"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt2Hk0VP//B/CxZsueraxTZAvZCvWayFKhSUKIsvRBkSgU2igt2mxly74T
RfbMtWeJMMg+d4hQGmNC1u/9nfP7657HOe97z/u838/X63XOlXW5ZuXOjMPh
djLhcP/3DJ2xoG9v4xF1MZaW9rcpMB0s8ndkA4805P3TxKWmgCX/xErFPzyy
p6Tb5lBOCsgc9t28toRHcD2VSMmnFGh4GsVBmcYjA7pcFg29KcBxYFAK+Yqt
3/eksYw9FWJuXDx1LxGPfNThtPU0TIUCJv9MnC4eiSycP3ywLhXY3E0Pil+Q
Q7wVxvrtKGkg9L35avprWURA8VNJ1M4MsGpMcFVsl0GolZxhzecyIfjPkauv
JqWRUUVeh8ypLKgMTPAqPi2FUPqGgrcjcsAy6pzMVvwe5C4jrdviWR6YJn+2
NPslgWRa3GSUdBVAduutAX8HceTIzi/sO/Teg1N4zK7uXFFEallFdSW1BO5c
ZHnPLSSCXBMScyabfAScqjTJ6KEwcud13cW9imUQInLM6eEdYcRVsnVuU6MM
VrZdNlsChRFpZChlTK8MFnqz9U96CSOMh7/Sis3LYCToQCXxtDCS6ziQ/c63
DMqbjny4IC6M5NjY9hRVlYG3o2NGYJEQsi+YQq8mfoLhZ/ERBf2CCGoViv6L
Loe+ZpnCi92CSLMs2jOUXA6d2znfdrUJIi1ElhdITjnU+ZeL36sVROQmOB6k
15RDukNfgXWGIIKL0WCvmiwHL+Wd3zZ9BZHYQxGb2toVsN5+T4zII4hM0GnM
yWMVsIfLI49hKIAUWe+ZTTOuAqe6zkg5AwFEp8aB6z+rKkjz0/AlagsgYaJE
XR3nKpAfWdMpVBBApIZVx+hBVaBW+LzJlUcAISro3pourAJDy9KJ3n5+5Pu8
qhQiUg2eUVu7PnjwI8IsyZxP6NVwRVuJbWQPHxKzf9Bwo7MW/NiqcgL4+JCd
TWqhZ0dr4Xa/6UlBZj7Ec7fz0Yr5Wnh60/3liRle5Gvjn8eZXJ8h/1OqeOUH
XuSgYm+B6InPMKsteiDWhBdJ1bWpv/LlM/ynw2p72ncn4j/gL6TcUweuuuO5
jY3cSKk/707JCAQu5+ramFRwI1q/k3/9fomAl/hrlrZ8bkS3uHek+S0CvutG
Tl2vuZGi2W7WZ/kIhJDyhIacuZFJbrHjV7oQiDG9eWdhnQvR163JfiJaDy22
PNbiWlzItbtZ077F9aAUpLftk8mBrGe6X3670gDImKXSZBwHsqkRkGPF0gg2
Rq7nbJ9wIOUn9R+I8jXCA97IAvDhQCr3hGrUyzfCUOaYLf8hDuSVhN2HWJtG
eNxzr+RDxw6EmMCmYlHZCNNKrZcYdHaEvhXUaxreBGljZ5tuHWNDnoRe8JU4
1gIHpw6ukbXYEOG5pNNjli3QNCegrr6fDflwhCxR6NgC0yvdidO8bMgOt/VU
76AWUBI09z87yoo87uBMvV/SAh9NjsupBrIiNa0vxFbkWqGpWOsepZAFcZWR
tLks8AVm7u8yMBVjRiSD3uf2irQDV2jxn2guZqRexv2SrWI7HAg6kUHZYEKQ
cnnv3/rtEOATynUbZUL6HZUrLC61A7vDj++F+UxIpM35LEphO+zV+nRT8AgT
wuG6l+ho2gEu09bFY5dwCPvuhK/cTzuhOna/8U+bTVJm7IVO8RPdwOEw48pk
sEkyETu6uuDcDTYy2Q8kZDdJkUx1nYMB3UDPxyPm8xukBL+nL6cyu0ERkdL/
cHeDlD8ulvcX9w3ezglr3M5dJ9186EQbcv4GN4FJkmftHwmXeCpceV8PqM8O
MdSSl0nkZ4JHZbp64Xj1COemDY0UmL+q/8p8AHzzilcFhCZJQvkr0hq3h0Gd
1yfMkEIlTdgJ87M+HYZFPxVe/yIqad2Npbg/fhj8DPLwZFMqyXrpgeeNqmG4
2Z1uGReCktRi4Hvi6jAszSmf0O6cILXFt5zyCxgB9rDVVBO/IVJEyc9azWuj
YHMZn9Yb0kaKUWcSumU+Dk+v+z+O+vSFdDtWsfCB/Th8Dmm8ZrXQSnIQra69
7zEOe6Ndj/Y6t5B2rWWWO4ePA52UMdJj2Eh61GV26E3NOEhpmqmkC1STvBvi
7QYUJoD2Nt5tMd6PlP7vyPr75Qm4tH9U1dV/vibNJT51a3sCDiS4tgrr3IVT
QQ4drTsocFbze+2jYzHQUbJRJyFMgeuXr8w2xWRDr+Uw5bIKBXC4T9uudRXQ
dT0sOdKBAq2dQ081z34BA+MR35pSCngEDbc6KLcBzVTF/b8qCnDsHWENZ2mH
8bbD4pwkCpwMHr1DLu2Av9L2cartFOhUnPC7KdwNKVrFnf8msPeN/IpG5nrB
rfbEmTecKByKp3f8semDc0dfoAm8KHD88ZtjaeyDH1JdudFCKOQl+CuoJJLB
62xbo5skCnOLN9JCTg3AZCjuVbg6CldTA2MlC4egVsomstwaBYPllVINsWGg
PZc6xn0eBR7zoF7j8GH47MU5b30BhaKVID4fxxFgKT0r2uqOwoLl7Sd1PGOw
sTZdLB+AQuWdurpiHQoUzacU9sagkJq39bXqKgWeSdh7B7xF4TH56FhjOgWa
bbz28SWhYKdEWh/E9t0dRw6XzkDhXz/pEG4GhYzKLcvaEhT0VOs/Et9Mwtnr
tw1n21DQJg/E1bVNgoKmbE9BJwrqwb9uq2xMQpIKZc2tGwX5NlEjjktTMBMQ
e7CGjIKQu08fSekH+Ch/Ja2Mo8DLE16heuEHHNHnLb2GosBVGp+Y+PIHyHBI
XRmfRAHH1OwayPgBdfoGx1J/ovAraTfjQN00XKhhOli+iMKMkcb3JNo0mEqf
WplaQoE6Z1LLhZ8Bth9rpVzLKAwd8gufjpiBy4PH1fTXUGghfxF+d+YnnH6r
vqzOTIUUngDtnT9m4X37I88AfioklD4TDxadg/PcBrJiglSIs0/b/HliDgaC
5Mw/CFEhMrezuen9HPAlbUi2i1Ah6DjeJiRoHi793pMbt4cK/vOH9Oby58E1
fX6BIUkFnyhLKbuxeSjKEqadlKaCO+XWtKbhLzjB+cJkXJYKViHfAua5f4PF
7NdTGfJUsMBP258/+huerkRfRRSoYNa+frTV9zfIHy2L7t9PhaNiCjsy+n9D
ldGRPT+VqHCYZDDPz7EAV3Eer38oU0HrslX3Hb0FUGTx1RpRoYJyWegb+5QF
sGbTVik+QAV5h+jgLz0LMC0iG/tcjQpyzHnOOqx/4HuBqbWbOhXEiGQFQc8/
INKgsLWmQQWhlVnue4l/wH7dZ7P6IBV4323/+f31D7ibcYf4a1KBOWDXqJs4
DaqCv8l0aVHB/mJ+b6UWDfb3H0sJ1abCx5PQxkOkgZ5vxt29OlTg0iaTLl6h
QZGEQ3cDZhdpz/KyRzRQfDmUaKdLhWrOrUKOdBq0D8XTf2AWZERlOH6mwcU6
GdTrEBUavtS+YmXQgN+7ocbhMBUkSs9E2PEtghG7YGMrZr/k6dBCpUV4WPLq
rbIeFdojgm/gTBahh2n+RARmOT/+K9aXFiGnt29qGPNtx6xLuSGL0FXCEiiv
T4VeEz27jTeLgLM+xOuFWUmj25JYuggXhbUqszCH7XYzzuxaBLLL5wdDmEfZ
/umvzi7CYaN3wWwG2PnTnh80Z6ND8JeMEkXMkcNyiqkydHgclaxmgnmqqUKa
oU+HfZYX2B0wGxSbi5jZ0qFQp9zQA3NMPMqT5EeHzPgQujfmX2EBLLTndDjl
+BB/FfNxH+41ozw60B9kTbpgTrJLpb1pogOx+gPBCjPDUHtmfoIOBdRQMz3M
5qrtY7BOh79Joxy7MWeKOpOjRZagYujdSwa2/w0mRvuMxhKsekbPtWC2/vW4
Xt9iCRivHylEYS4ckKx86bEEn5OPWdtgZq3/+H4ybAlqA5/eEcLsWGCapZuy
BDuP4cvasPMsix1NfFa9BMh8G/MtzDz3rkdN9C/B/IBukCxmNy/2J5qLS5B7
VVauEbuvWuvEuxE8DOit1+Z1wiwM6gEjCgwo05U6Scfuu1nI3jXMiQHXnOkz
7JilthbOD95igKKEgHsElo+An2FE5VgG2Nt6ejBhlv9cdKSvgwEPlkZ1qVj+
Hl1mEsMf/guxHvl+dlhex4lxvIHWf2FyKzUhG8uzjr4yW8e1v+DKjC9bwPI+
zXeO7pf9F7z7G2hXsXowqcrtbBBaBoSwhcOrUuFdxpFGEbVlSNeSkTfE6mv5
eW+V18llCGzOz3LA6i/bZSNb8P4ySDW8mglVpMIOHuJ9l4VlWCDxj93bRwU7
BXtEh3MFsgJr1W7tpUK+ods2194V+GYl6X8VTwXLW0GhpedXgJNxat0I6w9x
06m3WJtXQG5f0flKrL/I1y9ez05chWziFXcE609Bo+slt8tXQf+Qvqa3AJb3
FTaaZc8qGGXN5u7C+pnPAQmfFfZ/YHeyoeL8TiqUJxp6mfn9g1ZTi+jiHVQw
Doh2mTNbg2cyEq8S11GIe52cVue6BrVT5ugOrF/+LMyhRN1Zg35UJMx3FYXI
yRon/bI14B2MoOj8RYFMnLKPlF4H4VIxsfgFFNyUtc8eWF4HHoVAWg0FhTDK
gJFfxiYcylmur2lAYbzqlHdQ7SZwtbk6TCPYPIlG4u70b8Ld6rxaXhIKNOP8
2ac7tuApcZVmV4OCU0Hoy4wrW2Azk97fV4qtD9g7QtbchuXRbAHPTGw+sR2u
2u2CI/R+KRDXD0ehJPER8Q6diZBL9LfNBRSupbvxT9mwEfYcvP3CPZUCTl4J
khH3OQgnHpdpyXBS4MmZgMOaSdyEHNOby4r0cWAVjp2+u8ZLcO+vz5TCSmew
4yEtnE+AcJ+9gHXHl1E4F+yik9AoSHB9pIvebBqBq9zzcl32woRaBc4kx6lh
kC5oiWOf20V4onzteTY2t4Mrjc7yJYoSjhrcGJMyHwLf7KvlOmrihI85Fy8a
J34HHmZdlwM/JAhU6rbP9dlBMPa2jlWK3kP4FJ0VedN0EMSqJK8Z75Ui5MsV
Gt6rHoAov8ev1QelCXNJFs+zlAfA6tFp1eRyGYLbGZkHze/7Qckh/FxmqCxh
l96bC9H6/TAwzZkefU6OsF84So/RTIYulx/HBKXxBI8j39/edSIDypqzGiuH
Jzx2cUqrcyQDI9ujWFweTxjo8hXbsieD+Pz8HllVPCHq8Mszd2zJ4OZPX1HT
xxPMNDjmw4hkWAvbLrKwxROEXSZiMwzJIJ8lLvHkJZ7ANCCao6lAhsOmI994
ovGE6ZF6tXv7yGA+mxTxKg5PUMK3yH7Fk+G6qszfN8l4QkOMwTEPGTLUfpL/
ll2AJyTr3/XMECeDVYvmo6ZWPOGF5wsDVR4yuHv8NTDrwL5/QtnsHhcZgrgq
ljq68IT/JnKq+zjIkGypd6mvH0+4q5/ZF8xGhp8DBAPqJJ7gr+HV822rD9aC
mJfcZ/AEg/omPoXNPti5uylvdg5PqONvKw1d74ODzqaii4t4gruTtorKah8Y
M3F23fiLJxQ1EnHhy31gl9EevrqKJ4yXhxweZfSBl3GkfsgGnkCSiB7UWuqD
//9/QZia8h5+vtgH/wOgIVnD
       "]]},
     Annotation[#, "Charting`Private`Tag$44686#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {0., 0.5698766456669557}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.874670029803116*^9},
 CellLabel->"Out[14]=",
 CellID->247516843,ExpressionUUID->"63da104d-06a2-4b7d-8d58-e7bb0dbd033b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexPlot3D", "[", 
  RowBox[{
   RowBox[{"Fibonacci", "[", 
    RowBox[{
     RowBox[{"5", "/", "3"}], ",", "z"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "-", 
      RowBox[{"2", "I"}]}], ",", 
     RowBox[{"2", "+", 
      RowBox[{"2", "I"}]}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellLabel->"In[12]:=",
 CellID->23431321,ExpressionUUID->"a6a9fad0-7dfc-44b4-941d-1621b8bc21d1"],

Cell[BoxData[
 TemplateBox[{
   Graphics3DBox[{
     GraphicsComplex3DBox[CompressedData["
1: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
3ntd7VOXD3V5+39973X5Wdd7/C+tUYIy
      "], {{{
         EdgeForm[], 
         Texture[
          GraphicsBox[
           TagBox[
            RasterBox[CompressedData["
1:eJy9nXeQVVUWr6feqxoxg84Yb6MYMCGxoRuQIBkRyUGCAkqSKFGCIqISFQUE
ARUTICoICIIgOUOH2wkVFBBEBEO32fnvrb3W3vusHc65p5mpV7VnynEUrf78
/da39jn3WqHPsPb9/s8//vGPkWXgv9r3HnvviBG9x3UoC/+j09CRA/sP7fto
y6Gj+vbvOyKzz/+F3/mS/I/47SqHxlY+NKZy1ujKWaPuzhpZWZwRVbIer5o1
vFrW8OpZw2pkDU3PGlIza0itrMG1sgZlZD2Wmf1Y7eyBdbIH1MnuXze73z3Z
fetlPwqnfvYjDbL7NMzu3TC7173ZDzfKfqhRds/G2T2aiNO9aXa3ptkPNsvu
2jy7S/Oczi1yOrXI6dhSnA735bS/L6ddq5y2eNrcn/MAntatc+5XpxU74vfA
/wt/DPzB8CfCrwC/Gvzi8JeDvw34u61xcPLBoguyiy5IFv2zoOifhYUXFBWU
OZx30RfJi7/MveRIzqVHsy/7Kuvyrw+VPXag7PH95U7su+LE3iu/2XPlyd3/
OrXrX9/u/PfpHf8+vf2q77ZddWbr1We2XP39lmvOfnbN2c3Xntt07Q+fXvvD
xut+3HDdT5/Auf7n9df/vO764o8TxWsTJXDWpP2yOu2Xj9J+hbOq/G8rxfn9
w/K/f3DDH+/jWXHDn+/BufGv5XiW3fj3UjgV/n63wn/gvFPhP2/f9J+34Nz8
nzdv/nvJLX+/ccvfr98qzmsV/15cEXgJZFkC2d0SGfF6nPEiZMRrEPGqbfDq
G8mrexMJC3nlSF4OrDYKlibV6oGc+/C09B3xfxFBzQ4O/Han3NpT8y9bVXjR
1qIy+xBcHlI7nH/h50BNIzt0+dcHAVk5QvbN3itP7vnXKYHs3wIZ8Np+1Zlt
VwOyuLzWJH5BXghL8fqQ8QJYnNcyxSuARbwYrDcI1q0AC3k94UQMeI0gXmbE
gNdgwUtEjPPqF8arseKlw9XMCFeHlgyWGatWGlObnBZtcprjadZWnqbmkb+n
XU7j9rkNOufW7JG8bnL+5UsKLllTeNGWojJ7isocwqyJoHFkWQEy4qUihrx2
pOR1/U/rBa/idQngVUK8VmteRrgCXmHheoeFS8Bi4XpNhuvvRbcRrxgRk5WY
IStR8+p/j6rEOLzCwnW/4CVj9YCCRaQUjibtxGncLqdRu9xG7XPvxdMQAHXI
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
/wOAPJqr
             "], {{0, 144.}, {144., 0}}, {0, 255}, ColorFunction -> RGBColor], 
            BoxForm`ImageTag[
            "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
            False], DefaultBaseStyle -> "ImageGraphics", 
           ImageSizeRaw -> {144., 144.}, 
           PlotRange -> {{0, 144.}, {0, 144.}}]], 
         GraphicsGroup3DBox[
          TagBox[{
            Polygon3DBox[CompressedData["
1:eJxNnHncVtMWx5/nOY8hc64kLioyU2jQpDQJpaRUlDSIMkSGEKVkSCWEKGSe
IkIoInOIrqGbeZ6na54y3PW1v/vz+mO9++x5rd9ae+/znPN7T4Mho3odWymV
Sk3WLJWKSC+LP+TrhzQKWT1kjZCtQqohq4VsbUrdx9H+vJAN47pFNLg+rs8N
aR35f4dsHtKglMZk/G0cL6Yr9Y32u4XMjoqG1jNHv/jTLOTqKNjWtrVCtjNd
K6RVyGbOsU20vS3a3hqyR+TrhWwaMiSkY0inkGYhG4fUDRkW0jmkC/aGjAk5
JeTmkPNCJoc0t+0mIU1D6tj/lphjo0h3C9kzZEuxaumc6NTCfujxSbS/KeRf
cb17KfVlrA+j7PKQdeN6h5C1Q9YJ2V77yLdz7Abquq0Y7G1K27uKpEvPkKHa
im29nK+p+W3s31H/NbJtI+u+iHGmhDSJ6y8jvTNkV/oHtjuHXBn5rSLdMcr2
Cenq/Oh+oPOA8YUhx4eMDhkoRtgxKKR9yF74vZT8BGb9TPFnh1KKs61ti90N
7dPQuoPEl/69nRNf9TGl7jD7MN5gU+weENJWnQ4upRhtE9Lf+ckfqr7MPy9s
Pj+kcVxfpE0nhMwIOTHkpJDDA5NhIb1Djgw5IuTgamrXW71OUu++9utjfkIp
xSh+mxvz7BvpkSFHiO8+znmgYw3X99QdE7J/SA/KY77ukR4VcnQpXVN3pvYz
x0TnIfbH6Q9w2r0cMRlSJ2SsGOG3ZpHfOKRuyPchr4SsCNknFvIOITuGnG5b
MDst5BD7j9Gv4HqWcx4eMt450ekM+6HHyWJDn1Psh3+Io17af1zIAeZHlVK8
kz9WDMhf6ljMP0UswOnykFPV8QrTserURUyn2pbxzv8HlkcFtmeFjIjrS/Ql
c0xXJ3S8QJ3IT3MM8uwjIx3rOrGYFHKxcUQsXG/Z2SE3hpwTcq5CLDDvVfps
vPVHWDdJG4bbf7h1V9sW/18p1vSfpd347eiwaVI1zXOt8YF+15RSXJKf4xjk
Z9uPsW5wPnTZN8Z4NGL34ZA6cX1HpLcXyTfsS+xB88SLveFOU9bTQnVi7GdD
5obcHvKgemP3Q6bYdIdYT7fdNPMP6NdZjjHVurtLaa3it7ucE+znm1L3ZMhN
pbT3P2V6S8jTpreGLBEjfPioKX77KuSFkOUh/wv5T8iLIV9bRv4RMaX/Yu0A
14dNqVvqPLeFPGOKHccEnmdXU1w8Lu5cP+b85O8vpfjG/vtCZpq/t5TWA+fb
PWJA/k31eFhd77b+bXXF1ndMsXWZuOPDl2x7r7bNt/8L+hWM39BnzPFf9cM/
K9SP/CshC8wvtx9jfar9xELD2GuKkGrIZ5Y9F/KFOj2vzHPuD0Ke0J+0u129
F5VSfBFPTd3n2Nc+tC0+PzYwPqeaMH5Xu8H4S+fAvk/0E/p9XErxQf4jxyD/
nv0Y53P1QNdaMfbnsSYmh/w75v4jyv4MOS7Kzwv5K65/ClkZ8mrID+IFfj+a
UjeK9VpN8/ylrlyXY8z3xeC7kJfF+GfHe62U5nxb335v/Qr1eMexfrHt6yG/
muLPdcop1onrtcsJF/LrllMZsb96OWGED9copxS/EcvsxaxJ1hN7IvvrrabU
rVZOmNK/0Dfgiu8/Eu9a5YQp/l+vnOb8JmStcipDpzWNFdpVygkPxvo95C3t
X1VKa4D8b9pHfoNo/634ceb9IgablFNK2wblNC46MjfrhzWxlXG6mrH1s1hy
rv6ob4m7n/TJlmWclvxW35RxNysnXfHVpuWkK/l65TQ/+a2dB7w3Lyf/EQu7
xPX65WRHk5DaIRuGbFdO2IHT9qb48F/lFGfoR9vvjAv6fG8MbltOmNK/kXPi
221MqdvVeRhvN1Ps3qmc4gNf7VhOMUR+B+cn31h9mZ9YY99n73gk1sl/iK2Q
MRHv00NejOvW5bR+sLtlOWEEZq1MqeusfujeSb3Jd7EMPFqUk1/B9fgYe3I1
jdmhnHwJxntYzxwdLWOstiFblJMP9zTFh73K6V6KPeYAsSB/oGXcT3UL2bmc
fNXdFAxOiPmnhPSP68UhV4fMCTkt5JCQASH7iiO4dtWXYLmPKXU99D0+6e2c
zUN6WoZO+zsn7fYWD8baq5z2XOxvX06xTr6d9pHv43gt1KmtGAw0pe1wx0XH
U0MO1oYj1XVf823s31//4dvRgcH51XQ9TF/it8NNGfcwdcVXg9SV/KHOT35k
yH7ifUfIBSHTwVlcsOOkkINC+oYcK3bgNMoUH/YrpzhrZVvs3sM+e1h3jJjS
/yjnxLdHm1J3sn0Yb4wpdo8up/hAp+PLKYbIH+f85E9UX+YfWk4xDS43h5wX
Mjnk1pDzQ6aEnBkyOGRIyDgxArPxpoNtd7S6n6/e5KdaBh6n61dwneB4Q51z
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
F9cPRloNeYhvo0T+j5BzisThgV8Et2pTx2S/HhLt+sgrAm/SnUqJS4cO8MTW
ifoXjIkmjkM9cXmxmO9STbFJGc8tfyjS86tnihSn6LyTcduXfDX9ry/PHnkG
+WOR/re0XVzvGfIf2zMv6+2XIq1B1t261sNRbKMOrRV0aCVetAe/tasJO8bp
GNeva8sBxin8xBHVxLkCp8bVZA9+nFUkXhzfmtu9mnxJvjA+waq516z/jcQd
/uL+1cQZwu+7xnXDauISflCk8nXsCxeAOK96TTwwFrzH9Zx3tnPxzb9ZljfS
78y1lvGDDfD7bi7Sd/Pg/MH9g4u3pm12KaV2N+hH+IrwG+tH2jnadAp5q0j6
vl+kOmLh+hyTxlpt4/Z6x+GZM2sMPiG8O65Za8QMOqHLzeq3ofF1o9cbqSc6
99QnmStKmrmipEdr57x/xPU8dfja+OOZ+cbG110+4+O5H+9uwOoOcRga14dU
E8duqOXw7mjHs0DebR0W5XuHfCOOd2kLawm+Yg9xvtP18W2R5uLZIvrMVwd0
4lk/z/m/L9KzXc7Ln4r0v808b77U55LoS9wuM5b3iutXi7RH/2LKedS6muaj
f/1qshk9G0Radl197nNknhm2FJMXfL7N+wn+N/+7Il3f7TU63KOe6Pz3e4gi
cT2xF1yw6yLH/EHcsYVn6ct9Psk1z03Za7h32UQ9eMbNs27KnnSdkucZOP1a
+66A57SD43ofbaHucdvyG4Rrfv/R71HrabtEG5lnie2nOlc9bcCPPd1jOaeb
mz4ntuwX7BvsXROr6b6KfbesbtgI/wf+JdwfMHhIrKbZF98x71NeT/OaPfgC
52rhNb5mf2O/ZN9kH1vqdUvTpZb3Vlf0ZD32d01ytnDGwAVlb4c/Cne0bTXd
N7Bvrmfazzha4TjEGGc/5z489/8W6V6BPXW583ZwT2YP39N7kn62pc8Jpiu8
5p6B+wvuPdinuafJ+zTXnBerinR+n6oer2jfIZYfrLxte8401it7Jvv46+qM
3XO1/RV1Zxw4SfBQ4Jv0qqb9nXN6Xc/5vuLwqjpzP/teke7jfnNe7i02cF88
uUhn4kr91dFxTirSPRH9DlcXdOKsB4OXxYF6xucekT0QTnbeI7ne0L3kC8uJ
wxeci5hlDebvi3IecS5wJsHhXtdryjl3wOlzsZrimOxbXXwvwJ7NvgtH/F/q
8Injs755J8Le9at+5N6PvYY95273D/YL9gr2SN6vzHev5Zp99HJ129FzhjOF
n6CUf6DOfPPja+e623nzHkN53jvZj5a5n3H9vHN967x13f/m+07nG8e8Xz3R
mf0e3jLrgvXKumWvAKtDLOds5Lw8V/y4HwVDznfKOTveMXaJDc7gNWzfrZpi
iN9GnCd1bE+/jTyv67lXLzCe63gGoS/l6Lwg0g2i333eU2zkOPAH/9Cndbym
vJP3sWPUhz7nGL9//mPt/GX7hdVUv8j7jtW1kT2V90nsmexLnDesy8csZ9/l
nvk359qvmn5LECP8v8gvxip7P+cB5wzvfrlmz2TvxE/zPaPr/eM+sJ6YcH5t
4vVKxz1IXbhmvbKftXMv476d9cw9IfcwG3j/xjdn+N4O7wT5Hhrfn+EdL9/h
4RtKvDOE5893HnhPxXcz+GYa7/34phbfN4PLQ7zwPVO47nxzjG9tHex+wn7a
T2xXF9O8z6JPW3Vjn+Hs2NTzg7a1bV/1Gj9kLIhJzvS64vBv7WL/4Wzh/oAz
ZZnX08WKvWmGe8Y64kY8r2X8zDGeJxuflHM/xR7Gbx/2Mf6PmP8f51nm1tWk
H/eltb1GZ/7PiPtk4moX91VwOMjyftrbQP2Zj2cC7FebWM6ZDhbEx98cyCLd
T2A7nAHuA+4zjlpVa/ae1sYPewN7B/ce/J5o6XX3arp/5dU099xcs/dwT87/
jcDd57fITuLG2m3keuP8pY4z90DX8iTx3Ek/8n8TjMNZc4t+vtr1x9oYY4zj
v7ym64vDb7ZhXeJP/PqG2G8u/szfxrmIpT3Fc7nX6EhMta3W1LeznHE2Uyfu
zbk/4F6dM4EzIz+baaov6hqT6Dbb+JpVTb85CtvM8fpsx+S+n72OfmX73mA5
9+E/6nt8Skw3M36uE2twvspyxkS33Z1rXfUnHrmvaeFcD+pr9sY22g4+7cQK
29GT31TsY/h8V2MAW/jtxO8mvp3OXJyTsyy/wj2yifGMP4jnS43tJl7zffXm
6sz3YfjGDu/G+SYb3yGEC8Y3Q/i/Id5b8n9wHV2P2NNBnV/wmnKw2seY59zr
qo3EHfHHvQL/i8f9Gfse9zsdjRPOWM5dzkzuX2jDvdA3lrNGsKuT+r/lNfHJ
+c99ANyAJerAfTTPGnnmyPNkviPBNzR4T8X99b76FGxZY5zl7I38LxDnJjp3
c71wr8o43DdyD7+v47NuWIfcD3BuwGfi3uhy1ydrk72zl+sCPeEx3KZPerkW
WDvs9dmmztrI77WuYoJv++rf3b2ebRyxX7BXcO/O/0Sxt7PHsO/c5x7D9WJj
gH0t3wsfpA58t5x7Bn4z8j3zPuJAjPc3bonxfsZMc69ZE9xXcI/Ovki/IfZl
T+a36O36eZBrAX8epl25D/eW4EoM4RfKelvewb7EGGfmocbPXl5zVqD7UPXv
rR9HOObgak1sDtZ3XdWB+KLt4ercx2vGwKfcE8BP4/k27zx418F3s/keOP/T
xFlK3PB/Tnyrme9p//1/T9X0LIb/MePbwnzD+YlSylPO733+B22kbYixicYq
6RVeX19N++Ct1fS/1fxfP+84+M4D38fgHRf/7883H3gHwvk3QhxGOD7XI52b
/+UCqyPV+wivu6nzEV7zXWK+M8ymwzeH+Tby+6WaPozHd1P5djEcbb5Rw/eF
eN/+fwIe6ec=
             "]], 
            Polygon3DBox[CompressedData["
1:eJwtkstSE1EQhs9MzhZ0b0KVVbjSB7AKXiAs3ZklGxQkUUQM4hXIBAElMRJJ
UaVloaJuY2FAN15eQLcsUF9AX0Dg+6t78c38M92nu093nx6tXCinIYTzEKHD
Yx5O5UL4j+Ej+gy85LvH+yncgRq2MVhDV+FvEsIP2EA/iHb2AB6jb0azdaGG
LsM3cr2Gh+gpGMJWgAxdgd/BfN6hTygv+d/yXoArUMd2GbbReZjBvsn7GdyP
lvsLrKCnVQOxL8Iy+no0rZzr6LuwldqdNvz8L/Shn5d/Cd8qLHr+JXK/CVbP
BIwH+7eEvqpG4jvg952M5vsddtAng/VUvc28H7L9gbrfX1ox6h7vKFhPmuhb
cJba+qCBno2mNYNVv69qbcMj9I1o+kNi/b4WrbbhxOYzE832M7F5al7S/7xf
mo98Sx5P/prlemL9vgdfU+tZw/dBZ/v5foKeg2JqNXd8P9TbfM76r33K+H4F
XXTBZ74V7T6qX7k0Q+3fbbiU2pm2z09nVUPL7drNoudXv86hR1Kbn+ah3dMO
9Xy3M9iNNj/1R7uonrf9ftol7cgL9H7Odk671/L7KbZq+oyOMAjvYS9abP37
BM99lxVDsZo+P/VKNR4DoPZ5SA==
             "]]}, Annotation[#, "Charting`Private`Tag$38655#1"]& ]]}, {}, {
         EdgeForm[], 
         GrayLevel[0.82], 
         GraphicsGroup3DBox[{
           
           Polygon3DBox[{{1201, 1054, 1202}, {1195, 1029, 1185}, {1198, 1026, 
            1199}, {1026, 1065, 988}, {1199, 1026, 1200}, {1213, 928, 1184}, {
            1042, 1029, 928}, {1029, 1043, 928}, {1204, 988, 1181}, {1054, 
            1026, 988}, {1180, 1029, 1186}, {1190, 1043, 1189}, {1186, 1029, 
            1195}, {1197, 1026, 1198}}], 
           
           Polygon3DBox[{{1202, 1054, 988, 1204}, {1189, 1043, 1029, 1180}, {
            1185, 1029, 1042, 1188}, {1200, 1026, 1054, 1201}, {1184, 928, 
            1043, 1190}, {1196, 1065, 1026, 1197}}]}]}, {}, {}}, {{
         GrayLevel[0], 
         Line3DBox[CompressedData["
1:eJwl0tsv13EYB/APPyRCFFJotq6UC7elWxO1lm463HXhlEMop07C+Afit7G0
FVMuUzq50j8QNmtttujGVYdLtHh95+K193PxfD7PPs/3W3KrrbY1IYQwzaWk
EKK6XMZjIZxUn+cmvcR5xwp/ydJcRg2NjDDNF9bZpSgxhHNcp5tR5ljiNxnm
nOYCK1wxu17WyC3ZQCNN3KaZFlpp4w7tdLBKJ9+4y3fuUeSuOV7ymldM8pwZ
JhinS+8a3WzTww699HGfBzzkEY/p5wkDDLLOVXcNyYvyn6yjilIO8cu7v/KG
p3RxjbMU8t/efrDIFMM0UM0ZMvlj/8u8ZYweblDBrBmXzS5WV8rNaAfqQk5w
nAKOkU8euRzlCDP6c6J/QmbLF/Jw9O3dNc97PvCRT3xmgVlOkaX3mTOZclxm
yJ/R22U6aRwklQOkkIyjQVuwgrAR2/8f9wBtxE3s
          "]], 
         Line3DBox[{1042, 928, 1213, 1184, 1190, 1189, 1180, 1186, 1195, 1185,
           1188, 1042}], 
         Line3DBox[{1181, 988, 1065, 1196, 1197, 1198, 1199, 1200, 1201, 1202,
           1204, 1181}]}}}, VertexNormals -> CompressedData["
1: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
9kK0ueA6wzYyJPiERd8da0QPj8i6Xn3WDUNPzI8lHqLrnIMxhpulGYmKOCy+
D+2EO5pHl/c+o8Azx3liCa0ZxaT5cCwR2+H7sT5ZvmIKdEgknD+dTEQnZger
qtTbYL3Gl+d/5ylQdfB1V+DxFrQ9WshTvq4FWnbGjRnsoUJIHY+DQ0kLuik8
4sL1iAhtp+7d6jlFheWdHCj7WhkEj9uQx3xqgOXg6H21ahrsMqbkPWQsBetq
CmtaVR2Et/KmPMqmwQf9M223jhTDs1MaPDyiBCh0fhKwIYau57g+Q/cVBD2Z
J37yujeCmQ4n2cmbBm93PFdlupALzHUlr6vmm8C0wrksjq7bN19u/ryhkgHZ
HmJ//V8RQU35xN2zB2lQcPnH1d7OT4B8RQ3uHW+F+dUMR/OFCZjccNjhgI0R
GqawdHMIt0NRBG03KW4CPDizpv4WfEX5+c+Nzgt0gsCw9p3P0hMwFuDomPsm
H5V/yLALVO8GW8q2xWl3Kty7cMkuuaAcWVw9ofA+uhcuvC/ROO5FAf4Hzfn5
Sg0ojjOAsTuZBOtCnj4IkyaDesbYBBdXM6K53tH01h4AJqPghwfdxoBbW3Vy
6AcRaTV0PHy0YQiOnRr7/jtzBN7dNS6XGWtGb0/9VItPHgabhcIHL/WHIfDt
TMmGS40ov8VxvTHdJ2S3lR4VqxyCrIzA9oM2dcj43KGbXMMjcNl/ff7czmHg
j9Ir+uhdjTqC7rh7aY5Ap/Umj13MI2Czd/V51uVqNPP92DqdXcNg8lT/mODO
UbCv+LEjjKMWERK5X+yqGYQd3S/7BMTGQF2+2C83th7lMvWPrbcbgI3VjS9/
sIxDcdKNJL9MArK8nNX4mK8fWl5m+qvmjUN6zb2nL1maUOThtOiczD5ojdou
2HiKDJwqTt6bDjSjoykfx9wdeqBO6N2EASJD9rrX564dIKL24HsF8vTncMw2
LqHCnRTg7u/8HLahBQ2NEvZNOXWATX+yxjMbCuTAmZVr2XQdDo8/qc5vAwpf
6KbULxQQuMEm/lSnFYUL5p+LkGmFD9k1URokCvw02nQwJqsVtb3azGJbSITT
p4V0LdmoMHlK7gM/WxuyfdJ02t+pGUQnR3q+KFHhUXlm06uYCvBOzXldTakG
IYpn7defNNj5+jF/mGc5RI+cOzZvUAc9S3ede2Pp/lbNa/LEujKQa7jsFE33
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
o9+WqisSaKru8n/V1f8AF3ec1g==
       "], VertexTextureCoordinates -> CompressedData["
1:eJyN23+QVWUdx/GtUQNzHDa1H6ClgzqZlEwCOiJeLV2tTCZNZpsccy10zEwj
HbP1F4moYxRpbgyNSJPDqhnij1FWwggzEStUGAVZcVE2lWS3tNF+Oaad+3qO
fZw7xh88897n3HPPPe/z/Po+37PXqWcfP/3dbW1ty7dra3uzbGu7dGLHZace
przphM3n3tv7swb+914PDvT13l547/l7XNHTfW/hfUfe29PX+5vChxw1+EJv
++8KHzdz1JSe7tWFT10+ee6swT8WXnbhnd/q63208AOjP/PTJf1rC69Zuum3
ve2PF94w7dyhBR3rC2/528gP9nQ/WXjomhuOmLOkv/Dfx088c9bgpsIzT5++
esqcgcKzJ43/Sl/v5sJXb/+vlyesfKbw3HUPXLmk/9nCPT+fu8e4V7cUnj/j
y3f0tv+p8MIj9j167LjnCt846q8bF3Q8X/iWp5edM7rrhcKLF8/evqd7a+G7
LvrC/PaePxdeeuzuB8xZ8mLh+8Y8d/+Ih7cVXrn19s5Zg0OFV/dduO3114cb
rbxmyS/mF/OL+cX8Yn4xv5hfzC/mF/OL+cX8Yn4xv5hfzC/mF/OL+cX8Yn4x
v5hfzC/mF/OL+W3VTtNrlvxifjG/mF/ML+YX84v5xfxifjG/mF/ML+YX84v5
xfxifjG/mF/ML+YX84v5xfxifjG/rfrdbKfpNUt+Mb+YX8wv5hfzi/nF/GJ+
Mb+YX8wv5hfzi/nF/GJ+Mb+YX8wv5hfzi/nF/GJ+Mb+txtHsd7Odptcs+cX8
Yn4xv5hfzC/mF/OL+cX8Yn4xv5hfzC/mF/OL+cX8Yn4xv5hfzC/mF/OL+W01
L8pxNPvdbKfpNUt+Mb+YX8wv5hfzi/nF/GJ+Mb+YX8wv5hfzi/nF/GJ+Mb+Y
X8wv5hfzi/nF/Laa5+a8KMfR7HeznabXLPnF/GJ+Mb+YX8wv5hfzi/nF/GJ+
Mb+YX8wv5hfzi/nF/GJ+Mb+YX8wv5rfVuiXnuTkvynE0+91sp+k1S34xv5hf
zC/mF/OL+cX8Yn4xv5hfzC/mF/OL+cX8Yn4xv5hfzC/mF/Pbah2a65ac5+a8
KMfR7HeznabXLPnF/GJ+Mb+YX8wv5hfzi/nF/GJ+Mb+YX8wv5hfzi/nF/GJ+
Mb+Y31ZxhVyH5rol57k5L8pxNPvdbKfpNUt+Mb+YX8wv5hfzi/nF/GJ+Mb+Y
X8wv5hfzi/nF/GJ+Mb+YX8xvqzhRxhVyHZrrlpzn5rwox9Hsd7Odptcs+cX8
Yn4xv5hfzC/mF/OL+cX8Yn4xv5hfzC/mF/OL+cX8Yn5bxf0yTpRxhVyH5rol
57k5L8pxNPvdbKfpNUt+Mb+YX8wv5hfzi/nF/GJ+Mb+YX8wv5hfzi/nF/GJ+
Mb+t4rgZ98s4UcYVch2a65ac5+a8KMfR7HeznabXLPnF/GJ+Mb+YX8wv5hfz
i/nF/GJ+Mb+YX8wv5hfzi/ltFZfPOG7G/TJOlHGFXIfmuiXnuTkvynE0+91s
p+k1S34xv5hfzC/mF/OL+cX8Yn4xv5hfzC/mF/OL+cX8ttpnybh8xnEz7pdx
oowr5Do01y05z815UY6j2e9mO02vWfKL+cX8Yn4xv5hfzC/mF/OL+cX8Yn4x
v5hfzG+rfbPcZ8m4fMZxM+6XcaKMK+Q6NNctOc/NeVGOo9nvZjtNr1nyi/nF
/GJ+Mb+YX8wv5hfzi/nF/GJ+Mb+Y31b7oLlvlvssGZfPOG7G/TJOlHGFXIfm
uiXnuTkvynE0+91sp+k1S34xv5hfzC/mF/OL+cX8Yn4xv5hfzC/mt9W+du6D
5r5Z7rNkXD7juBn3yzhRxhVyHZrrlpzn5rwox9Hsd7Odptcs+cX8Yn4xv5hf
zC/mF/OL+cX8Yn4xv63yFHJfO/dBc98s91kyLp9x3Iz7ZZwo4wq5Ds11S85z
c16U42j2u9lO02uW/GJ+Mb+YX8wv5hfzi/nF/GJ+Mb+t8k4yTyH3tXMfNPfN
cp8l4/IZx824X8aJMq6Q69Bct+Q8N+dFOY5mv5vtNL1myS/mF/OL+cX8Yn4x
v5hfzC/mt1UeUeadZJ5C7mvnPmjum+U+S8blM46bcb+ME2VcIdehuW7JeW7O
i3IczX4322l6zZJfzC/mF/OL+cX8Yn4xv5jfVnlhmUeUeSeZp5D72rkPmvtm
uc+ScfmM42bcL+NEGVfIdWiuW3Kem/OiHEez3812ml6z5Bfzi/nF/GJ+Mb+Y
X8xvqzy/zAvLPKLMO8k8hdzXzn3Q3DfLfZaMy2ccN+N+GSfKuEKuQ3PdkvPc
nBflOJr9brbT9Jolv5hfzC/mF/OL+cX8tsrbzDy/zAvLPKLMO8k8hdzXzn3Q
3DfLfZaMy2ccN+N+GSfKuEKuQ3PdkvPcnBflOJr9brbT9Jolv5hfzC/mF/OL
+W2Vh5t5m5nnl3lhmUeUeSeZp5D72rkPmvtmuc+ScfmM42bcL+NEGVfIdWiu
W3Kem/OiHEez3812ml6z5Bfzi/nF/GJ+W+VVZx5u5m1mnl/mhWUeUeadZJ5C
7mvnPmjum+U+S8blM46bcb+ME2VcIdehuW7JeW7Oi3IczX4322l6zZJfzC/m
F/PbKk8+86ozDzfzNjPPL/PCMo8o804yTyH3tXMfNPfNcp8l4/IZx824X8aJ
Mq6Q69Bct+Q8N+dFOY5mv5vtNL1myS/mF/Pb6r2HzJPPvOrMw828zczzy7yw
zCPKvJPMU8h97dwHzX2z3GfJuHzGcTPul3GijCvkOjTXLTnPzXlRjqPZ72Y7
Ta9Z8ov5bfUeS773kHnymVedebiZt5l5fpkXlnlEmXeSeQq5r537oLlvlvss
GZfPOG7G/TJOlHGFXIfmuiXnuTkvynE0+91sp+k1S35bvZeU77Hkew+ZJ595
1ZmHm3mbmeeXeWGZR5R5J5mnkPvauQ+a+2a5z5Jx+YzjZtwv40QZV8h1aK5b
cp6b86IcR7PfzXaaXrN8uevrj494+KlG2z27Xb+s90eN/75S2DbQGLi74u3W
rP5x9+jNpX7kguv2e3XCM4V9/pGHDxrzk+5byvHY8fj5+9fd2t6zsTH5rpn/
WD1lW/k8Vn/4Zcf+oKNzqNRj13dYk32fet+Xn+84/gNjV84YLp8/qsk+X+rd
h3I/mu/hNXnTPo3LRndtKPWu922c7zNGvftR7n++7xj3t35frLr+N/6b9D/v
Q94TvvL9yKh3vuKzefzOZ51y34ypz5bjCzfrdzl0/xOGzthS6vO+lfcX4/eO
OvmlA29qv7tc/9Lm73f97ofrxb4f+3687oqbvzR23BPlPvGD1b/2+pv/ni7X
k8dnPXZclupXv7DL+HGvrnsbu8/6I/WuR73+Sb3rUe968nz5eez8vDpfsvbm
89jzmu2zHu8rf4c267F659f+nB87P/b7PEe+L8fbbP85/pb6fC6bzy12fdj1
ZX2OF+pdb44fef05nmT/s6pZz5vjeXK85x+3KrPd+d2lv8r3raN95r6y+rKP
1eK++nzmCWmfzoedD3ues71mfk+2V/W+HzuujOvN9siD82Pnw86X+Si8qC/z
o+j3HIf5y3E3n4eFkbehfsWdnxxc0DHQ2POAb3x6Xvf8xgPfe+2C0V2bC3fN
ufHznUMbynHKETt8dkRX33DjnH9ut9PDU54qx3fPmz9x5YynGysuunjb8t6Z
9eearN7xnxoz77b+tXU9Vn/eQ2sWdnRuaqz44U6rbmpfVB/fZN9/yZoP3dzb
PlR41oItU8aOGy7fh11P1vs9zo/V8+Dz9fvz1f11/by6/vL7m9d70n0blvav
XV/O6/5i9T6H9d+Oxz7Hp+/P66/f+6+uV/0xW089snNoc2HPq8/h9KhUr72V
+xV5YY73PVj/ZDx423HN73X9/q7UDvXPnpd3HXTJtwcX1ONBzh+1L749D55/
7He4rjP3P+T8qWP7G8l8l/qm7/L8No/H2d7UTxveee+uvifKfcTuw2knnf3M
2hEb38aOV/r92O/1OfWeB+z6/X7sfrt+9Vi934Pd7/TmvnqencfznsyT47Pf
yP4vn7Mcr3Kdme13cpl/VJ9zPvV+v7/nesd8FBu/XHfeb/2L353z6fp3VL52
j/mu83te9A+eD+z79Be+L+cn/o5dt78PvOer37x8cHF5nrD26PeX52PFSTve
3n9n+T3q3U9cxpc4Pu+fer9/z/K+fMX1+9UVH1zex624fn+z4vp9v4rr98Mq
rt8nqrh+/6Ti+n2Fiuv89orrfOiK6/zZiut8y4rr/LyKv1/yuSqu838qrvNF
Kq7zC5rjf9mPrrjev6y43u+q+LayP1JxHU+vuI6/Vnz448c8OWvwvsITeqeu
WNJ/f+Fjnv3uLjd0rCp88kcWnTZnye8L9/3y+f4pcx6p59+fu3iHiSsfK/yH
5jwLP9GcZ+HNZR5a8YtlnVzxK2UdXHGW25d1bcU7lnVrxaPKOrXiXa1Tmzz6
va88d8aswcIffnLFhYML6vu/981Xt3f11ff/o9+Ztqh/bX3/P3H0XpM7h+r7
f+D7X1yzdkR9vw8evPtrU8e+2DjlvCM3HnxFPR4u2m/mbdeeP9D4S/e8x07c
Otw4cfZL77tmwkDj0vVXXfTSx2Y3uh68cvdVbxn/pzXrF6wfOemLvcONa+ee
MX7LiQONSfvtsnzMLcONX+xzxMrVb87fnri189ZFMxu9zfO3jZp1+sdvmV6O
v/SOictGXXB5OX7hsdcfN/2NftD15fxo4PXFWx595KrGQyuvW7nfnfX8cNdf
H9P54CkDbxkXml6OPGvpr+a90a82j1fv9zj/bs3PO9873Z/8vvz9eX/+3+vx
fe90P/J+5vXn/U2f73Q/01/er/8AJ5kgCg==
       "]], {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, Ticks -> {Automatic, Automatic, Automatic}, FaceGrids -> None, 
     DisplayFunction -> Identity, Axes -> True, 
     AxesLabel -> {None, None, None}, 
     AxesOrigin -> {Automatic, Automatic, Automatic}, 
     BoxRatios -> {1, 1, 0.4}, DisplayFunction :> Identity, Lighting -> 
     "Neutral", Method -> {"RotationControl" -> "Globe"}, 
     PlotRange -> {{-2., 2.}, {-2., 2.}, {0., 2.809143344512448}}, 
     PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[CompressedData["
1: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

              "], {{
                Rational[-15, 2], Rational[-225, 2]/GoldenRatio}, {
                Rational[15, 2], Rational[225, 2]/GoldenRatio}}], {
             Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], Rational[-225, 2]/GoldenRatio}, {
                  Rational[-15, 2], Rational[-225, 2]/GoldenRatio}, {
                  Rational[-15, 2], Rational[225, 2]/GoldenRatio}, {
                  Rational[15, 2], Rational[225, 2]/GoldenRatio}, {
                  Rational[15, 2], Rational[-225, 2]/GoldenRatio}}, {{
                7.5, -69.52882373436316}, {-7.5, -69.52882373436316}, {-7.5, 
                69.52882373436316}, {7.5, 69.52882373436316}, {
                7.5, -69.52882373436316}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                
                LineBox[{{7.5, -69.52882373436316}, {7.5, 
                 69.52882373436316}}], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]]}, StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.5, -69.52882373436316}, 
                    Offset[{4., 0}, {7.5, -69.52882373436316}]}, {{
                    7.5, -34.76441186718158}, 
                    Offset[{4., 0}, {7.5, -34.76441186718158}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 34.76441186718159}, 
                    Offset[{4., 0}, {7.5, 34.76441186718159}]}, {{7.5, 
                    69.52882373436316}, 
                    Offset[{4., 0}, {7.5, 69.52882373436316}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                   StyleBox[
                    LineBox[{{{7.5, -62.57594136092685}, 
                    Offset[{2.5, 0.}, {7.5, -62.57594136092685}]}, {{
                    7.5, -55.62305898749053}, 
                    Offset[{2.5, 0.}, {7.5, -55.62305898749053}]}, {{
                    7.5, -48.67017661405421}, 
                    Offset[{2.5, 0.}, {7.5, -48.67017661405421}]}, {{
                    7.5, -41.717294240617896`}, 
                    Offset[{2.5, 0.}, {7.5, -41.717294240617896`}]}, {{
                    7.5, -41.717294240617896`}, 
                    Offset[{2.5, 0.}, {7.5, -41.717294240617896`}]}, {{
                    7.5, -27.811529493745265`}, 
                    Offset[{2.5, 0.}, {7.5, -27.811529493745265`}]}, {{
                    7.5, -20.858647120308948`}, 
                    Offset[{2.5, 0.}, {7.5, -20.858647120308948`}]}, {{
                    7.5, -13.905764746872633`}, 
                    Offset[{2.5, 0.}, {7.5, -13.905764746872633`}]}, {{
                    7.5, -13.905764746872633`}, 
                    Offset[{2.5, 0.}, {7.5, -13.905764746872633`}]}, {{
                    7.5, -6.952882373436316}, 
                    Offset[{2.5, 0.}, {7.5, -6.952882373436316}]}, {{7.5, 
                    6.952882373436316}, 
                    Offset[{2.5, 0.}, {7.5, 6.952882373436316}]}, {{7.5, 
                    13.905764746872633`}, 
                    Offset[{2.5, 0.}, {7.5, 13.905764746872633`}]}, {{7.5, 
                    13.905764746872633`}, 
                    Offset[{2.5, 0.}, {7.5, 13.905764746872633`}]}, {{7.5, 
                    20.858647120308948`}, 
                    Offset[{2.5, 0.}, {7.5, 20.858647120308948`}]}, {{7.5, 
                    27.811529493745265`}, 
                    Offset[{2.5, 0.}, {7.5, 27.811529493745265`}]}, {{7.5, 
                    41.717294240617896`}, 
                    Offset[{2.5, 0.}, {7.5, 41.717294240617896`}]}, {{7.5, 
                    41.717294240617896`}, 
                    Offset[{2.5, 0.}, {7.5, 41.717294240617896`}]}, {{7.5, 
                    48.67017661405421}, 
                    Offset[{2.5, 0.}, {7.5, 48.67017661405421}]}, {{7.5, 
                    55.62305898749053}, 
                    Offset[{2.5, 0.}, {7.5, 55.62305898749053}]}, {{7.5, 
                    62.57594136092685}, 
                    Offset[{2.5, 0.}, {7.5, 62.57594136092685}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"-\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -69.52882373436316}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"-\[Pi]/2\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -34.76441186718158}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"0\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Pi]/2\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 34.76441186718159}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"\[Pi]\"", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 69.52882373436316}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                   StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                 False], {{
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4], 
                   Opacity[0.3]]}}, StripOnInput -> False]}, {"GraphicsAxes"},
               StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], ImageSize -> 
            NCache[{Automatic, 225/GoldenRatio}, {
              Automatic, 139.05764746872632`}], BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{
                   InterpretationBox[
                    RowBox[{
                    TagBox["ColorDataFunction", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"MidShiftBalancedHue\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1:eJx1luk71YkbxgkpW1lqOnZKSalskdRd1pqUplCJFIWQzFDWhmgxKbtQERWZ
sjR2QkWWzuFw7Fs6lrN9z8I0aJoa5vz+gN+L+7qe637xvLrv5/NoeVw+dkFM
REREVKgLQv1vLhkcHStV/ACqx1peSgYLohaxiqa7OOARS/czAzuhHqXg6E5j
wmuquYvUwMFieHjQ757deLbUFV0sxYRafLryVhCw26zKT6ygQW7GmXXGigHn
kF522hsC0+l3JOvf9qAxcYXM0YhpOLRM3A3Zy4X4ipbiH9N7cUq8/+qJsikk
yjltnnvNxXLJvtsN5n3YmxzuZs2exJ7+BXldMx6YF6wvDVb1QWYtjTOmOoke
zmn1beU8cBNLJlJk+3H3UvPCqMMEaK4Zs+r6fATJn1l8sb8f80XKsoJoOqJu
yxvKF/DRmy0KwrEfP/1x9KGL+yd836bTTlIXoFDHhvBaGIBs4MvPW/eM47Cb
6myiigCnxW6tXwoYQn/wB0cxpY/YcYgdMr5OgIeeYZeyWoch76OhPTk5ivLV
xSMSawWQX2X5dWDZKJ7V7bLPKBxB1j3R1OWKAnhqnAljbBrDHY2jrELPYYR4
fFGeWCVAOW+u8W+zj1hy2/DnboUhNLdr89JlBNhyoiY53Wwc3irWjwR/DKDg
0JMonZUCbDKWEW3S/YQucl55Nvqx22PjkSQJAX48PcdJkaBjvnC/tER1Lyp5
f3cNiArgv9XiRlIgHa9n8kjKCj34KV382td/+Vja9/kQw2MCoYM3ZEgeNDCk
fQUv4vgY7rthHGo7iasPTwbpFXRD52G3crUiH8anMki/q02hW6sgiVfTBQu/
sJ0aj3mYKVTO/pGYQpJXVaWpBBVWwWYx03o8OGwqX6IUTyOBHaXP1OvAlzV2
9iuquQi5tuqo40UGFnroObZaZJRu1/0z3oqLa0yZpj41JkRs5rw7RtsQ6fd4
LLCbwFOnf4LWdDDhmRDvt8muBS9zGu7UuAlzdVCQ1BjMAkdTr/a9ZRMGncV/
O8/lgFt8QsR9HRv3i1YIPNUbYM98EnI1jIOImWN/0VLYqNfWraisqAd5N7n/
hzA2VrogxU6Cg8ZmFbWYi/WI5xrbqIazsM5i4V//QA40M++d4FjU4+7YNv2o
SCaC/npMH+7jYJ+Fi1fJtnrQaYa8XdEMfG8ZtVQyIlAl5XffdG898hh2x6xu
TiOzQupeajwBuusiOdW3HntfZcwlxE8hy8CEaBon0Op8RfFGWT3CmmvsZVIn
EX/8naGYPhdjyeW345QasNgZnJT/cAJ65fXhRVe5SPBP0Z5JaECxucnGvfl0
rF9tfHJVPReuZRnWUxqNEHPjkM4Jc526izxrxuNC9u1wWz7tHdz7vOdJox/h
s2Xh4BcSD84nHbxbbd4jRf3Qqh6nMWQn5Cv52PDAQEqkd2wr8pJEVBeoIyiJ
OeXxPICHpM9VC8cz2+FkPUjtsBnGgqaA2pXOAzG4VvnWPTLK3yas8q0dhKHB
nfx/6nhgf+2tM7zYASNzV49HugOQI3uK7hvnQcro/OuB7VSk79sgQkvuQ2QC
QVQt8fDrnl1nqNNdkHgidYz9uQcudrSfr2jwYaBoKXqypRuSHVdpggM0WFS7
vU/aw0fC/oDapmQatHUUI600uqCn6uyce42PEqofr+paH+KoG1NET1NRyxo4
+K2Oj9zOC6IuuoOIXnlz1v3XTpRtPrKQMc+HwOH6Zannw3ggl+p78lYHrrCT
9vjrC8De8Gfn0eVjqOt9NqJ1mYJvxn4xlzyE/abOfjM8Mo7FXlbWhBEZsm9q
cpLSBEhc2eOpaEnHOTnHhW3UdlCseUMfmgUIMNg5Juk8gZpFzyJLkzZItxFD
MrMCKLSVrvY6P4mHtt4N0a4tkA9Re2RPmkF3V3mkdcAUJEhxLzN3NONS1wOf
CMygqHajQUTwNL6ldG0hJb+FU/cWn+ZBAUixByJT1zNAznk/ZHHrDaSnlidm
+QsgGI3STaIyIOdmbCtDacC8qYINRdj7E1pE4dgVJqaNfvE/y32NNfn1g5rx
fNQs/b6xn8QCk2diY0evxeEXBVWuSnxckHQ8/qGOhVBdHfbu3GoUZ+j8Zp7F
g++Xd1mLJ9loaridka5WiWjKA4UAYa6CqWaDf8yxwT5/JjvCqgxuxX5DeWlc
RM8n1K1L4CD5WaDp+fFi+HqLhl6R4qL3adm4hw6B523H1tPq88G1lEqPCCdQ
KGr8qq6OgKJYa/PTDZmghIwczjDnQJRiZlpdKexTcGz6h8OP4ElqjAqcY6F/
6Nf160oIPDAiGzT45KJZJmBrQwETBk7jPvynBGbc476vH3iCjNx5fq8DAxHd
y7RtMwiUMipNYnzy8Ymxdj6GP4V7rKa8HXEEtsxRIisWnkNuQY/aGTmJvMf8
mLqrBNwlbLz0I15Awb9iZ+RXOn7WbKya9SBw6IcQ+4z5IpwqCUxNqxvH9tOa
KZ/sCcxLFbY0XCjF3Rrd+DiLUchJ84ZTjAn478h59I7xCj4BKjs+Ow2iVs+U
ukaZQFrNvhF/xTLsUWsas308gNicanKJDIHwFskIa+cmGNzgHv57qB+se3cZ
nkscaDe2D3Pr2/HGfAu/UKQfx4e0nXZ+Ft6tlSy61QoqpK02q7go9iH8QeKx
TQwOHrdcv+7gSgNTYvWYjmwvus7eJJkNCXn/TaLBLbYXueKpoRQ2DaoWB9gX
KRxMVBTk5MT1Q8vxDpuR0w3Sq9ylhkYOjpT74syVQRBt6h9HDlBBDup8YlIm
9Ldf3lPpMAwzrobkui4yFL4H/dCTz4F/Nkfso8ooZkoLzdwSW5HSnpiflsXB
qdS1BZNjY1AN1T8tfrsdVTkD1/W8ONB5kbV7mZBzOWcDfylbTsbcuQ9FdYbC
PQn347rL6Gh6v8ye0KQg1sjFy26JjdVBboURHRMIX1Qy30anYP++IsleChti
NcWSJpOTUM12CuYe7EBk2n7xs5lsKHFcDzDnprBYOvmp3b0DrV0m3NnzbIQ+
cpe0kWCgUJpsR9LsQIzELZ84A6Ev/7qZrsjEd81z0i9vUqAi62W7eVHICdty
/61aLBy4FhE9eYuM2rCnAQNkFkwdXmrd1Gfj//1X/wHuyNJI
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"MidShiftBalancedHue\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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
                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ThemeGradients\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    ColorDataFunction[
                    "MidShiftBalancedHue", "ThemeGradients", {0, 1}, Blend[
                    "MidShiftBalancedHue", #]& ], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], "[", "#1",
                    "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", 
             FractionBox["225", "GoldenRatio"]}], ",", 
           RowBox[{"\"ColorFunctionShading\"", "\[Rule]", "None"}], ",", 
           RowBox[{"OpacityFunction", "\[Rule]", "None"}], ",", 
           RowBox[{"\"OpacityFunctionTicks\"", "\[Rule]", "None"}], ",", 
           RowBox[{"\"OpacityFunctionSize\"", "\[Rule]", 
             RowBox[{"Scaled", "[", "0.5`", "]"}]}], ",", 
           RowBox[{"\"OpacityFunctionRange\"", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], ",", 
           RowBox[{"Charting`TickLabels", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "\"-\[Pi]\"", ",", "\"-\[Pi]/2\"", ",", "\"0\"", ",", 
                 "\"\[Pi]/2\"", ",", "\"\[Pi]\""}], "}"}]}], ",", 
           RowBox[{"Ticks", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "0.`", ",", "0.25`", ",", "0.5`", ",", "0.75`", ",", 
                    "1.`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    FractionBox["1", "20"], ",", 
                    FractionBox["1", "10"], ",", 
                    FractionBox["3", "20"], ",", 
                    FractionBox["1", "5"]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["1", "5"], ",", 
                    FractionBox["1", "4"], ",", 
                    FractionBox["3", "10"], ",", 
                    FractionBox["7", "20"], ",", 
                    FractionBox["2", "5"]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["2", "5"], ",", 
                    FractionBox["9", "20"], ",", 
                    FractionBox["1", "2"], ",", 
                    FractionBox["11", "20"], ",", 
                    FractionBox["3", "5"]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["3", "5"], ",", 
                    FractionBox["13", "20"], ",", 
                    FractionBox["7", "10"], ",", 
                    FractionBox["3", "4"], ",", 
                    FractionBox["4", "5"]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["4", "5"], ",", 
                    FractionBox["17", "20"], ",", 
                    FractionBox["9", "10"], ",", 
                    FractionBox["19", "20"], ",", "1"}], "}"}]}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.874669966466668*^9},
 CellLabel->"Out[12]=",
 CellID->49138764,ExpressionUUID->"a72ecc79-fef2-4be4-8647-4ee510e2b808"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"Fibonacci", "[", 
     RowBox[{
      RowBox[{"1", "/", "2"}], ",", "x"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.8746700350345783`*^9, 3.874670035926442*^9}},
 CellLabel->"In[15]:=",
 CellID->418644106,ExpressionUUID->"609058af-3f0d-4703-ab29-44641969f66e"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{
    FractionBox["1", "2"], "+", 
    FractionBox["x", "8"], "-", 
    FractionBox[
     RowBox[{"3", " ", 
      SuperscriptBox["x", "2"]}], "64"], "-", 
    FractionBox[
     RowBox[{"5", " ", 
      SuperscriptBox["x", "3"]}], "256"], "+", 
    FractionBox[
     RowBox[{"35", " ", 
      SuperscriptBox["x", "4"]}], "4096"], "+", 
    FractionBox[
     RowBox[{"63", " ", 
      SuperscriptBox["x", "5"]}], "16384"], "+", 
    InterpretationBox[
     RowBox[{"O", "(", 
      SuperscriptBox["x", "6"], ")"}],
     SeriesData[$CellContext`x, 0, {}, 0, 6, 1],
     Editable->False]}],
   SeriesData[$CellContext`x, 0, {
     Rational[1, 2], 
     Rational[1, 8], 
     Rational[-3, 64], 
     Rational[-5, 256], 
     Rational[35, 4096], 
     Rational[63, 16384]}, 0, 6, 1],
   Editable->False], TraditionalForm]], "Output",
 CellChangeTimes->{3.8746700362585716`*^9},
 CellLabel->"Out[15]//TraditionalForm=",
 CellID->38358058,ExpressionUUID->"d3f3f9b9-3968-47fe-9aad-2f3ccec90817"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"Fibonacci", "[", 
      RowBox[{
       RowBox[{"1", "/", "2"}], ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "\[Infinity]", ",", "5"}], "}"}]}], "]"}], "//", 
   "FullSimplify"}], "//", "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.8746700406931763`*^9, 3.8746700416242995`*^9}},
 CellLabel->"In[16]:=",
 CellID->64107013,ExpressionUUID->"1dc2b1bf-b235-4896-90fd-2be3dcf6da39"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{
    SqrtBox[
     FractionBox["1", "x"]], "-", 
    RowBox[{
     FractionBox["3", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["1", "x"], ")"}], 
      RowBox[{"5", "/", "2"}]]}], "+", 
    InterpretationBox[
     RowBox[{"O", "(", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["1", "x"], ")"}], 
       RowBox[{"9", "/", "2"}]], ")"}],
     SeriesData[$CellContext`x, 
      DirectedInfinity[1], {}, 1, 9, 2],
     Editable->False]}],
   SeriesData[$CellContext`x, 
    DirectedInfinity[1], {1, 0, 0, 0, 
     Rational[-3, 2]}, 1, 9, 2],
   Editable->False], TraditionalForm]], "Output",
 CellChangeTimes->{3.8746700419744945`*^9},
 CellLabel->"Out[16]//TraditionalForm=",
 CellID->671903771,ExpressionUUID->"fc0f3c3b-105f-400e-98e1-ed46e3b1d19c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"Fibonacci", "[", 
       RowBox[{
        RowBox[{"1", "/", "2"}], ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{
         RowBox[{"-", "2"}], "I"}], ",", "3"}], "}"}], ",", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{"x", ">", "1"}]}]}], "]"}], "//", "Normal"}], "//", 
   "FullSimplify"}], "//", "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.874670055989232*^9, 3.8746700577181735`*^9}},
 CellLabel->"In[18]:=",
 CellID->21950654,ExpressionUUID->"538f77e5-555a-4ad4-abe1-bbb5289b57b0"],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"3", "/", "4"}]], " ", "x", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "284"}], "+", 
       RowBox[{"x", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"5", " ", "x"}], "+", 
          RowBox[{"54", " ", "\[ImaginaryI]"}]}], ")"}]}]}], ")"}]}], "+", 
    FractionBox["2048", 
     SqrtBox[
      RowBox[{"x", "+", 
       RowBox[{"2", " ", "\[ImaginaryI]"}]}]]], "+", 
    RowBox[{"1416", " ", 
     RadicalBox[
      RowBox[{"-", "1"}], "4"]}]}], "4096"], TraditionalForm]], "Output",
 CellChangeTimes->{{3.8746700497979155`*^9, 3.8746700582787905`*^9}},
 CellLabel->"Out[18]//TraditionalForm=",
 CellID->497776818,ExpressionUUID->"b33aa2bb-d4ab-451a-a4d9-e206ad3aefcf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fibonacci", "[", "3.3", "]"}]], "Input",
 CellChangeTimes->{{3.8746700661360693`*^9, 3.874670067751944*^9}},
 CellLabel->"In[19]:=",
 CellID->180066450,ExpressionUUID->"e3ef35c1-947c-4b3e-970b-bd319e49014a"],

Cell[BoxData["2.242351776581698`"], "Output",
 CellChangeTimes->{3.874670068036085*^9},
 CellLabel->"Out[19]=",
 CellID->829342428,ExpressionUUID->"2bd0523c-1f2a-4b53-8cd1-98aef2ff3636"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fibonacci", "[", 
  RowBox[{"0.4", ",", 
   RowBox[{"CenteredInterval", "[", 
    RowBox[{
     RowBox[{"1", "/", "2"}], ",", 
     RowBox[{"1", "/", "200"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8746700952460356`*^9, 3.874670110503971*^9}},
 CellLabel->"In[21]:=",
 CellID->280735267,ExpressionUUID->"2c154d6c-ec69-4d88-b12f-5d88ce95dc6f"],

Cell[BoxData[
 TemplateBox[<|"Interpretation" -> InterpretationBox["interpretation", 
     CenteredInterval[{{858509941, -31, 977065260, -40}, 30}]], "Center" -> 
   "0.3997748442925512791`3.", "Radius" -> "0.0008886356772563886`3.", "Type" -> 
   "Real"|>,
  "CenteredInterval"]], "Output",
 CellChangeTimes->{3.8746701108429127`*^9},
 CellLabel->"Out[21]=",
 CellID->152134808,ExpressionUUID->"f58e41e9-9e49-44aa-87fe-954ee3e29f7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{
   RowBox[{"Fibonacci", "[", 
    RowBox[{"0.4", ",", 
     RowBox[{"CenteredInterval", "[", 
      RowBox[{
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{"1", "/", "200"}]}], "]"}]}], "]"}], ",", 
   "\"\<Properties\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8746701768518257`*^9, 3.874670199917773*^9}},
 CellLabel->"In[28]:=",
 CellID->53497224,ExpressionUUID->"2a617daa-f883-4561-a71d-d693d6f0f177"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Bounds\"\>", ",", "\<\"Center\"\>", 
   ",", "\<\"FullSpecification\"\>", ",", "\<\"Radius\"\>", 
   ",", "\<\"Summary\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.8746701783082843`*^9, 3.8746702002466564`*^9}},
 CellLabel->"Out[28]=",
 CellID->88604903,ExpressionUUID->"eb3417a5-43c6-419e-85dd-9ed0ef137d72"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Information", "[", 
     RowBox[{
      RowBox[{"Fibonacci", "[", 
       RowBox[{"0.4", ",", 
        RowBox[{"CenteredInterval", "[", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"1", "/", "200"}]}], "]"}]}], "]"}], ",", "#"}], "]"}], 
    "&"}], ",", 
   RowBox[{"Information", "[", 
    RowBox[{
     RowBox[{"Fibonacci", "[", 
      RowBox[{"0.4", ",", 
       RowBox[{"CenteredInterval", "[", 
        RowBox[{
         RowBox[{"1", "/", "2"}], ",", 
         RowBox[{"1", "/", "200"}]}], "]"}]}], "]"}], ",", 
     "\"\<Properties\>\""}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8746702070197287`*^9, 3.8746702105760956`*^9}, {
  3.874670261751052*^9, 3.874670269300474*^9}},
 CellLabel->"In[30]:=",
 CellID->48400956,ExpressionUUID->"d275a1e5-fa83-4afe-b511-0d8cc4bf29f4"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Bounds\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["109645006133", "274877906944"], ",", 
      FractionBox["110133538763", "274877906944"]}], "}"}]}], ",", 
   RowBox[{"\<\"Center\"\>", "\[Rule]", 
    FractionBox["858509941", "2147483648"]}], ",", 
   RowBox[{"\<\"FullSpecification\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"858509941", ",", 
        RowBox[{"-", "31"}], ",", "977065260", ",", 
        RowBox[{"-", "40"}]}], "}"}], ",", "30"}], "}"}]}], ",", 
   RowBox[{"\<\"Radius\"\>", "\[Rule]", 
    FractionBox["244266315", "274877906944"]}], ",", 
   RowBox[{"\<\"Summary\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.3997748442925512790679931640625`9.030899869919436", ",", 
      "0.00088863567725638858973979949951171875`9.030899869919436"}], 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8746702109189067`*^9, 3.87467026958491*^9},
 CellLabel->"Out[30]=",
 CellID->63719677,ExpressionUUID->"e599cf67-5e53-4208-b42e-77208c9a9aea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"AssociationMap", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Information", "[", 
      RowBox[{
       RowBox[{"Fibonacci", "[", 
        RowBox[{"0.4", ",", 
         RowBox[{"CenteredInterval", "[", 
          RowBox[{
           RowBox[{"1", "/", "2"}], ",", 
           RowBox[{"1", "/", "200"}]}], "]"}]}], "]"}], ",", "#"}], "]"}], 
     "&"}], ",", 
    RowBox[{"Information", "[", 
     RowBox[{
      RowBox[{"Fibonacci", "[", 
       RowBox[{"0.4", ",", 
        RowBox[{"CenteredInterval", "[", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"1", "/", "200"}]}], "]"}]}], "]"}], ",", 
      "\"\<Properties\>\""}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.874670272761014*^9, 3.874670273241295*^9}},
 CellLabel->"In[31]:=",
 CellID->260589022,ExpressionUUID->"dedf33b6-3def-47a2-8f2c-2b291b3c1c4b"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Bounds\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.3988862086152949`", ",", "0.40066347996980767`"}], "}"}]}], 
   ",", 
   RowBox[{"\<\"Center\"\>", "\[Rule]", "0.3997748442925513`"}], ",", 
   RowBox[{"\<\"FullSpecification\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"8.58509941`*^8", ",", 
        RowBox[{"-", "31.`"}], ",", "9.7706526`*^8", ",", 
        RowBox[{"-", "40.`"}]}], "}"}], ",", "30.`"}], "}"}]}], ",", 
   RowBox[{"\<\"Radius\"\>", "\[Rule]", "0.0008886356772563886`"}], ",", 
   RowBox[{"\<\"Summary\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.3997748442925513`", ",", "0.0008886356772563886`"}], 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8746702735395517`*^9},
 CellLabel->"Out[31]=",
 CellID->159587370,ExpressionUUID->"35bfe782-ebc1-41c4-a0e0-74a2af96e02b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", 
  RowBox[{"Fibonacci", "[", 
   RowBox[{"0.4", ",", 
    RowBox[{"CenteredInterval", "[", 
     RowBox[{
      RowBox[{"1", "/", "2"}], ",", 
      RowBox[{"1", "/", "200"}]}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8746701251473207`*^9, 3.874670127534572*^9}},
 CellLabel->"In[22]:=",
 CellID->33170497,ExpressionUUID->"b0d80dde-4305-4a87-b748-1011838a8b8f"],

Cell[BoxData["0.3997748442925512791`2.653091717335139"], "Output",
 CellChangeTimes->{3.8746701277702913`*^9},
 CellLabel->"Out[22]=",
 CellID->559780725,ExpressionUUID->"314212e7-e96c-4bf4-ba0b-bc028e95fc14"]
}, Open  ]],

Cell["\<\
Suppose a pair of rabbits one male and one female produces a pair of rabbits \
one male and one female each month. Suppose the babies become adults in two \
months?\
\>", "Text",
 CellChangeTimes->{{3.8746701442173195`*^9, 3.8746701612461863`*^9}, {
  3.8746702157292614`*^9, 3.8746702342048607`*^9}},
 CellID->129435059,ExpressionUUID->"92994e86-00af-497e-85fb-daca7aa08df0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"Fibonacci", "[", "n", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "100"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.874670301708794*^9, 3.874670310463764*^9}},
 CellLabel->"In[32]:=",
 CellID->151491553,ExpressionUUID->"2a393c09-535f-44d5-ab91-08bac4e416a7"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "1"},
    {"2", "1"},
    {"3", "2"},
    {"4", "3"},
    {"5", "5"},
    {"6", "8"},
    {"7", "13"},
    {"8", "21"},
    {"9", "34"},
    {"10", "55"},
    {"11", "89"},
    {"12", "144"},
    {"13", "233"},
    {"14", "377"},
    {"15", "610"},
    {"16", "987"},
    {"17", "1597"},
    {"18", "2584"},
    {"19", "4181"},
    {"20", "6765"},
    {"21", "10946"},
    {"22", "17711"},
    {"23", "28657"},
    {"24", "46368"},
    {"25", "75025"},
    {"26", "121393"},
    {"27", "196418"},
    {"28", "317811"},
    {"29", "514229"},
    {"30", "832040"},
    {"31", "1346269"},
    {"32", "2178309"},
    {"33", "3524578"},
    {"34", "5702887"},
    {"35", "9227465"},
    {"36", "14930352"},
    {"37", "24157817"},
    {"38", "39088169"},
    {"39", "63245986"},
    {"40", "102334155"},
    {"41", "165580141"},
    {"42", "267914296"},
    {"43", "433494437"},
    {"44", "701408733"},
    {"45", "1134903170"},
    {"46", "1836311903"},
    {"47", "2971215073"},
    {"48", "4807526976"},
    {"49", "7778742049"},
    {"50", "12586269025"},
    {"51", "20365011074"},
    {"52", "32951280099"},
    {"53", "53316291173"},
    {"54", "86267571272"},
    {"55", "139583862445"},
    {"56", "225851433717"},
    {"57", "365435296162"},
    {"58", "591286729879"},
    {"59", "956722026041"},
    {"60", "1548008755920"},
    {"61", "2504730781961"},
    {"62", "4052739537881"},
    {"63", "6557470319842"},
    {"64", "10610209857723"},
    {"65", "17167680177565"},
    {"66", "27777890035288"},
    {"67", "44945570212853"},
    {"68", "72723460248141"},
    {"69", "117669030460994"},
    {"70", "190392490709135"},
    {"71", "308061521170129"},
    {"72", "498454011879264"},
    {"73", "806515533049393"},
    {"74", "1304969544928657"},
    {"75", "2111485077978050"},
    {"76", "3416454622906707"},
    {"77", "5527939700884757"},
    {"78", "8944394323791464"},
    {"79", "14472334024676221"},
    {"80", "23416728348467685"},
    {"81", "37889062373143906"},
    {"82", "61305790721611591"},
    {"83", "99194853094755497"},
    {"84", "160500643816367088"},
    {"85", "259695496911122585"},
    {"86", "420196140727489673"},
    {"87", "679891637638612258"},
    {"88", "1100087778366101931"},
    {"89", "1779979416004714189"},
    {"90", "2880067194370816120"},
    {"91", "4660046610375530309"},
    {"92", "7540113804746346429"},
    {"93", "12200160415121876738"},
    {"94", "19740274219868223167"},
    {"95", "31940434634990099905"},
    {"96", "51680708854858323072"},
    {"97", "83621143489848422977"},
    {"98", "135301852344706746049"},
    {"99", "218922995834555169026"},
    {"100", "354224848179261915075"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8746703107490153`*^9},
 CellLabel->"Out[32]//TableForm=",
 CellID->387635740,ExpressionUUID->"3b156577-6fc5-4fbb-b8e2-4bd27d423ce1"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8746703307908907`*^9, 3.8746703316130886`*^9}},
 CellID->209116410,ExpressionUUID->"6fc9ac0b-29e1-43e1-be56-2e82b0606e7d"],

Cell[BoxData[GridBox[{
   {"months", "1", "2", "3", "4", "5", "6", "7", "8", "9"},
   {
    RowBox[{"adult", " ", "pairs"}], "1", "1", "2", "3", "5", "8", "13", "21",
     "34"},
   {
    RowBox[{"new", " ", "born"}], "1", "1", "2", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]"},
   {
    RowBox[{"babies", " ", "now", " ", "adults"}], "\[Placeholder]", "1", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]"},
   {"\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]"},
   {"\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", "\[Placeholder]", 
    "\[Placeholder]", "\[Placeholder]"}
  },
  GridBoxDividers->{
   "Columns" -> {False, {True}, False}, 
    "Rows" -> {False, {True}, False}}]], "Text",
 CellChangeTimes->{{3.8746704112322435`*^9, 3.8746705426275797`*^9}},
 CellID->62140769,ExpressionUUID->"f9dd4fc6-43ca-4785-90eb-aa31907a6028"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindGeneratingFunction", "[", 
    RowBox[{
     RowBox[{"LucasL", "[", 
      RowBox[{"Range", "[", "10", "]"}], "]"}], ",", "n"}], "]"}], "//", 
   "Simplify"}], "//", "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.874670636882233*^9, 3.874670660390291*^9}},
 CellLabel->"In[34]:=",
 CellID->261816993,ExpressionUUID->"a4f2596f-7084-42cd-8838-e68d154bbd45"],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{
    RowBox[{"-", 
     RowBox[{"2", " ", "n"}]}], "-", "1"}], 
   RowBox[{
    SuperscriptBox["n", "2"], "+", "n", "-", "1"}]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.874670649023308*^9, 3.874670660667139*^9}},
 CellLabel->"Out[34]//TraditionalForm=",
 CellID->393569845,ExpressionUUID->"fed9f3cf-8de1-41c4-a0ff-f0a0d07534d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindGeneratingFunction", "[", 
    RowBox[{
     RowBox[{"Fibonacci", "[", 
      RowBox[{"Range", "[", "10", "]"}], "]"}], ",", "n"}], "]"}], "//", 
   "Simplify"}], "//", "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.874670636882233*^9, 3.874670670008335*^9}},
 CellLabel->"In[35]:=",
 CellID->23771277,ExpressionUUID->"dc97cf8e-9eef-4110-a8a1-cc74e10000d1"],

Cell[BoxData[
 FormBox[
  RowBox[{"-", 
   FractionBox["1", 
    RowBox[{
     SuperscriptBox["n", "2"], "+", "n", "-", "1"}]]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.874670670404479*^9},
 CellLabel->"Out[35]//TraditionalForm=",
 CellID->91622078,ExpressionUUID->"43c35a2f-5569-4dd8-bc39-1a1954cb4f09"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"LucasSequence", "[", 
   RowBox[{
    RowBox[{"m1_", "?", "IntegerQ"}], ",", 
    RowBox[{"m2_", "?", "IntegerQ"}]}], "]"}], ":=", 
  RowBox[{"RecurrenceTable", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"a", "[", "n", "]"}], "==", 
       RowBox[{
        RowBox[{"m1", "*", 
         RowBox[{"a", "[", 
          RowBox[{"n", "-", "1"}], "]"}]}], "-", 
        RowBox[{"m2", "*", 
         RowBox[{"a", "[", 
          RowBox[{"n", "-", "2"}], "]"}]}]}]}], ",", 
      RowBox[{
       RowBox[{"a", "[", "1", "]"}], "==", "1"}], ",", 
      RowBox[{
       RowBox[{"a", "[", "2", "]"}], "==", "1"}]}], "}"}], ",", "a", ",", " ",
     "\n", "  ", 
    RowBox[{"{", 
     RowBox[{"n", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8746708878604946`*^9, 3.874670894214707*^9}, {
  3.8746709334271793`*^9, 3.874670968972188*^9}},
 CellLabel->"In[38]:=",
 CellID->16585294,ExpressionUUID->"d54d2f8c-de39-4a0a-b305-2ec69e248177"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RecurrenceTable", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "n", "]"}], "==", 
      RowBox[{
       RowBox[{"a", "[", 
        RowBox[{"n", "-", "1"}], "]"}], "+", 
       RowBox[{"a", "[", 
        RowBox[{"n", "-", "2"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"a", "[", "1", "]"}], "==", "1"}], ",", 
     RowBox[{
      RowBox[{"a", "[", "2", "]"}], "==", "1"}]}], "}"}], ",", "a", ",", " ", 
   "\n", "  ", 
   RowBox[{"{", 
    RowBox[{"n", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.87467089567795*^9, 3.8746709124458947`*^9}},
 CellLabel->"In[37]:=",
 CellID->438222600,ExpressionUUID->"cf7abd27-9d24-48ef-8c89-e8dd98f31d57"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "2", ",", "3", ",", "5", ",", "8", ",", "13", ",", "21",
    ",", "34", ",", "55"}], "}"}]], "Output",
 CellChangeTimes->{3.8746709131919785`*^9},
 CellLabel->"Out[37]=",
 CellID->252553827,ExpressionUUID->"2d92f152-fbaa-4c9a-86d7-e34deed2fe60"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LucasSequence", "[", 
  RowBox[{"1", ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8746709783149853`*^9, 3.8746709803122115`*^9}},
 CellLabel->"In[39]:=",
 CellID->77932969,ExpressionUUID->"2fab8d41-b8bb-403c-b67f-6bb2f623e164"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "2", ",", "3", ",", "5", ",", "8", ",", "13", ",", "21",
    ",", "34", ",", "55"}], "}"}]], "Output",
 CellChangeTimes->{3.8746709806444645`*^9},
 CellLabel->"Out[39]=",
 CellID->213226253,ExpressionUUID->"0145eb3d-6752-4385-8399-721d0e359d4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LucasSequence", "[", 
  RowBox[{"2", ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8746709783149853`*^9, 3.8746709895354185`*^9}},
 CellLabel->"In[40]:=",
 CellID->271611407,ExpressionUUID->"519f92b5-58dc-4d0e-a0fd-d6db4c863f33"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "3", ",", "7", ",", "17", ",", "41", ",", "99", ",", 
   "239", ",", "577", ",", "1393"}], "}"}]], "Output",
 CellChangeTimes->{3.87467099009691*^9},
 CellLabel->"Out[40]=",
 CellID->174150539,ExpressionUUID->"e135fb9c-88aa-4f60-bcab-ad67a9c482a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LucasSequence", "[", 
  RowBox[{"1", ",", 
   RowBox[{"-", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8746709783149853`*^9, 3.8746709965635786`*^9}},
 CellLabel->"In[41]:=",
 CellID->840157792,ExpressionUUID->"fe8f9788-6255-4d01-9b12-d6c63836b02e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "3", ",", "5", ",", "11", ",", "21", ",", "43", ",", 
   "85", ",", "171", ",", "341"}], "}"}]], "Output",
 CellChangeTimes->{3.8746709968875475`*^9},
 CellLabel->"Out[41]=",
 CellID->353386998,ExpressionUUID->"b47cfe95-ae56-4094-877a-ebd193195dea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LucasSequence", "[", 
  RowBox[{"3", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8746709783149853`*^9, 3.874671004755187*^9}},
 CellLabel->"In[42]:=",
 CellID->534059894,ExpressionUUID->"71113946-08e7-4382-9d54-587a56f5289f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.874671005115324*^9},
 CellLabel->"Out[42]=",
 CellID->357321230,ExpressionUUID->"2e4780e6-d900-41af-bfe0-1bfe95ad0150"]
}, Open  ]],

Cell["\<\
This sequence is recursively defined. We have to have a starting point.\
\>", "Text",
 CellChangeTimes->{{3.8746710163493056`*^9, 3.8746710359447155`*^9}},
 CellID->657109313,ExpressionUUID->"259f359a-abcc-44e6-b60f-393acc95d3f6"],

Cell[TextData[{
 "Then we need the formula to find the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", 
    RowBox[{"n", "+", "1"}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "a910d11f-b13b-4203-8e65-9e8b58028006"],
 " knowing ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "n"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2401359c-e648-4945-aadb-85b2ad54a429"],
 ". ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", 
     RowBox[{"n", "+", "1"}]], "=", 
    RowBox[{
     RowBox[{"2", 
      SubscriptBox["a", "n"]}], "-", "1"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "8c78cae4-29f6-434c-a39e-e407044ac07a"]
}], "Text",
 CellChangeTimes->{{3.874671081836939*^9, 3.8746710883231153`*^9}, {
  3.8746711560279617`*^9, 3.874671175242845*^9}},
 CellID->110577817,ExpressionUUID->"c21b47c2-d064-4364-80a9-91c4a9e35de9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LucasUSequence", "[", 
   RowBox[{
    RowBox[{"p_", "?", "IntegerQ"}], ",", 
    RowBox[{"q_", "?", "IntegerQ"}]}], "]"}], ":=", 
  RowBox[{"RecurrenceTable", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", GridBox[{
          {
           RowBox[{"u", "[", 
            RowBox[{"n", ",", "p", ",", "q"}], "]"}]},
          {
           RowBox[{"u", "[", 
            RowBox[{
             RowBox[{"n", "+", "1"}], ",", "p", ",", "q"}], "]"}]}
         }], ")"}], "==", 
       RowBox[{
        RowBox[{"(", GridBox[{
           {"0", "1"},
           {
            RowBox[{"-", "q"}], "p"}
          }], ")"}], ".", 
        RowBox[{"(", GridBox[{
           {
            RowBox[{"u", "[", 
             RowBox[{
              RowBox[{"n", "-", "1"}], ",", "p", ",", "q"}], "]"}]},
           {
            RowBox[{"u", "[", 
             RowBox[{"n", ",", "p", ",", "q"}], "]"}]}
          }], ")"}]}]}], ",", " ", 
      RowBox[{
       RowBox[{"u", "[", 
        RowBox[{"p", ",", "q"}], "]"}], "==", "0"}], ",", 
      RowBox[{
       RowBox[{"u", "[", 
        RowBox[{"1", ",", "p", ",", "q"}], "]"}], "==", "1"}]}], "}"}], ",", 
    "u", ",", "\n", "  ", 
    RowBox[{"{", 
     RowBox[{"n", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.874671105646962*^9, 3.8746711321050806`*^9}, {
  3.874671182913666*^9, 3.874671207055669*^9}, {3.8746712519731765`*^9, 
  3.8746712643793764`*^9}, {3.874671306667694*^9, 3.8746713261496696`*^9}},
 CellID->429272031,ExpressionUUID->"738415cc-82c6-4fdd-a1d5-e2539e766221"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LucasUSequence", "[", 
  RowBox[{"1", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.874671213868393*^9, 3.8746712156674576`*^9}, {
  3.8746712683732*^9, 3.8746712737350893`*^9}},
 CellLabel->"In[44]:=",
 CellID->510309632,ExpressionUUID->"3a1c5180-ec0a-40e3-8a89-73501ad7c110"],

Cell[BoxData[
 RowBox[{"RecurrenceTable", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"u", "[", 
         RowBox[{"n", ",", "1", ",", "1"}], "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", "[", 
         RowBox[{
          RowBox[{"1", "+", "n"}], ",", "1", ",", "1"}], "]"}], "}"}]}], 
      "}"}], "\[Equal]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"u", "[", 
         RowBox[{"n", ",", "1", ",", "1"}], "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"u", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "1"}], "+", "n"}], ",", "1", ",", "1"}], "]"}]}], 
         "+", 
         RowBox[{"u", "[", 
          RowBox[{"n", ",", "1", ",", "1"}], "]"}]}], "}"}]}], "}"}]}], "}"}],
    ",", "u", ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "10"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.874671274446602*^9},
 CellLabel->"Out[44]=",
 CellID->30474415,ExpressionUUID->"b1da78de-f652-40f9-9035-3b6e12ef5873"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{576., 580.8},
WindowMargins->{{Automatic, 0.6000000000001364}, {Automatic, 0}},
TaggingRules->{
 "ResourceType" -> "ComputationalEssay", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> <||>, "CreationTimestamp" -> 
  3.8572120809455172`17.338848507479508*^9, "UpdatedTimestamp" -> 
  3.8572120809455172`17.338848507479508*^9, "CompatibilityTest" -> 
  HoldComplete[
    BinaryDeserialize[
     ByteArray[{56, 67, 58, 120, 156, 133, 143, 205, 78, 131, 64, 20, 133, 
      163, 173, 110, 116, 213, 165, 79, 224, 6, 70, 11, 105, 138, 59, 197, 
      198, 184, 193, 70, 92, 184, 100, 24, 238, 164, 83, 7, 46, 153, 123, 41, 
      229, 237, 29, 140, 186, 193, 196, 245, 249, 249, 206, 209, 115, 90, 164,
       88, 183, 216, 53, 213, 230, 216, 58, 32, 50, 216, 232, 19, 58, 203, 0, 
      42, 202, 175, 95, 129, 176, 115, 10, 242, 129, 24, 234, 212, 26, 104, 
      184, 120, 4, 109, 26, 195, 222, 153, 33, 67, 137, 248, 81, 232, 83, 154,
       229, 192, 62, 25, 252, 25, 217, 58, 115, 144, 12, 133, 69, 89, 253, 24,
       222, 134, 22, 124, 238, 242, 222, 50, 184, 70, 178, 57, 0, 229, 87, 
      227, 156, 142, 229, 216, 46, 237, 134, 72, 14, 191, 133, 139, 169, 70, 
      243, 172, 179, 214, 99, 207, 159, 253, 11, 55, 14, 184, 72, 45, 118, 
      213, 75, 185, 7, 197, 249, 251, 142, 185, 165, 59, 33, 250, 190, 15, 
      123, 180, 218, 201, 90, 141, 122, 168, 176, 22, 88, 238, 133, 251, 110, 
      167, 175, 185, 98, 138, 72, 177, 97, 127, 65, 248, 215, 217, 195, 86, 
      178, 218, 133, 253, 81, 123, 208, 236, 9, 38, 188, 205, 191, 188, 106, 
      149, 68, 55, 75, 121, 27, 64, 164, 203, 32, 6, 41, 131, 36, 134, 117, 
      160, 228, 58, 74, 226, 74, 173, 202, 104, 249, 9, 89, 192, 149, 140}]]],
   "ToolsOpen" -> True, "StatusMessage" -> "", "TryRealOnly" -> False},
CreateCellID->True,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
       CellTags -> {"MainDockedCell"}, CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{39, 5}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    AutoQuoteCharacters -> {}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.458824, 0.458824, 0.458824]], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 10.}], 
              Thickness[0.04581818255511197], 
              RGBColor[
              0.6274509803921569, 0.6274509803921569, 0.6274509803921569, 
               1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDw4OydWhEHBoYJO6YlyIBoE+cbwkj8CybOHiB+
xY5p00D8BefunBUC0g8CDdhkgTQHk0A4iF8j97cYxP9w7o4kiL+kJZlBDomv
EmiwFpm/RPZvpDyQtjF1DgXxzzQnP5NHMv/cQUNNBSDNklHmBrJ/20HDeBD/
SHrZNRB/1UHDKhAf5n4Yf8rZOxqiSPyQs3d2iCLpfzNzpb4YkvktaWXLxJDs
v3DmzkMxJPfB+DD3w/gFgQZMckj6PV6fLJVFMh8WPgqzVu4C2e/SmjwDFH4J
s1ZqiSKFL2r4AwBR8n/j
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcBQ8J9fV8KBgeFBne5FTgcEn6FB15MdSAfMWXlO
AAsfpr5j9soJQkD6x5PJjVxAWsHUeQqIv8Pr13duEH3uznQQv2BDQgMvEn/H
+gQ5fiT+lq7kGAEkvkG4gZAgEj9g77QNyPw1e6YpCiPx34QavAbx3zAKTAPx
OfZMmyQCpPecu9MH4p/ZPU1SFEirmDp3g/gTdk9bAOIfOHenFcRveXdSTwxI
x2SUNYD4d9qTD4H4LGbOk0HuilD8yyKOxF/x9qQsKJw6jJ21QOoW7Jz2RxJk
PoPADBD/y5uTm0D8KWllTSD+H8W/k0WR+DD/wOWV/woj82HhAeN31OiK8yPx
VzyeXAoKzwRj5xawvPjxD6DwPjJzZacYUnygxi8A+72aOA==
                "]}]}, {
              FaceForm[
               RGBColor[
               0.6274509803921569, 0.6274509803921569, 0.6274509803921569, 
                1.]]}, StripOnInput -> False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 10.}], 
              Thickness[0.04581818255511197], 
              RGBColor[
              0.5019607843137255, 0.5019607843137255, 0.5019607843137255, 
               1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "]]}, {
              FaceForm[
               RGBColor[
               0.5019607843137255, 0.5019607843137255, 0.5019607843137255, 
                1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDw4OydWhEHBoYJO6YlyIBoE+cbwkj8CybOHiB+
xY5p00D8BefunBUC0g8CDdhkgTQHk0A4iF8j97cYxP9w7o4kiL+kJZlBDomv
EmiwFpm/RPZvpDyQtjF1DgXxzzQnP5NHMv/cQUNNBSDNklHmBrJ/20HDeBD/
SHrZNRB/1UHDKhAf5n4Yf8rZOxqiSPyQs3d2iCLpfzNzpb4YkvktaWXLxJDs
v3DmzkMxJPfB+DD3w/gFgQZMckj6PV6fLJVFMh8WPgqzVu4C2e/SmjwDFH4J
s1ZqiSKFL2r4AwBR8n/j
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcBQ8J9fV8KBgeFBne5FTgcEn6FB15MdSAfMWXlO
AAsfpr5j9soJQkD6x5PJjVxAWsHUeQqIv8Pr13duEH3uznQQv2BDQgMvEn/H
+gQ5fiT+lq7kGAEkvkG4gZAgEj9g77QNyPw1e6YpCiPx34QavAbx3zAKTAPx
OfZMmyQCpPecu9MH4p/ZPU1SFEirmDp3g/gTdk9bAOIfOHenFcRveXdSTwxI
x2SUNYD4d9qTD4H4LGbOk0HuilD8yyKOxF/x9qQsKJw6jJ21QOoW7Jz2RxJk
PoPADBD/y5uTm0D8KWllTSD+H8W/k0WR+DD/wOWV/woj82HhAeN31OiK8yPx
VzyeXAoKzwRj5xawvPjxD6DwPjJzZacYUnygxi8A+72aOA==
                "]}]}, {
              FaceForm[
               RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False]}, 
           ImageSize -> {11., 11.}, PlotRange -> {{0., 11.}, {0., 11.}}, 
           AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
           "\"Click for more information\""}, "PrettyTooltipTemplate"], 
         ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ParentCell[
              EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ParentCell[
                EvaluationCell[]], {
               TaggingRules, "AttachedMoreInfoTag"}] === #], CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ParentCell[
                 EvaluationCell[]], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
          "PrettyTooltipTemplate"], ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] === #],
             CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ReleaseHold[#3], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.75], 
                 Thickness[
                  NCache[
                   Rational[2, 45], 0.044444444444444446`]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.5], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], 
                    Graphics[{
                    RGBColor[
                    0.9882352941176471, 0.4196078431372549, 
                    0.20392156862745098`], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]], 
                    "Click to copy to the clipboard"], 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Graphics[{
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "Copied"]], UpdateInterval -> 
                    1, TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[
            0.5372549019607843, 0.5372549019607843, 0.5372549019607843], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain", 
           StripOnInput -> False], Background -> 
          RGBColor[
           0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
          FrameStyle -> 
          RGBColor[
           0.8980392156862745, 0.8980392156862745, 0.8980392156862745], 
          FrameMargins -> 8, StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[
            0.5372549019607843, 0.5372549019607843, 0.5372549019607843], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain"], 
          Background -> 
          RGBColor[
           0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
          FrameStyle -> 
          RGBColor[
           0.8980392156862745, 0.8980392156862745, 0.8980392156862745], 
          FrameMargins -> 8], "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           ButtonBox[
            StyleBox[
            "\"Insert Code Group\"", "Text", FontFamily -> "Source Sans Pro", 
             FontSize -> 11, StripOnInput -> False], ButtonFunction :> 
            With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
              Quiet[
               
               Block[{$ContextPath = RSNB`$cp$, 
                 ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                 False}, 
                Internal`WithLocalSettings[
                 ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                   True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                  Needs["ResourceSystemClient`DefinitionNotebook`"], 
                  ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  RSNB`nb$, 
                   
                   ComputationalEssayHelpers`Private`\
createComputationalParagraph[]], 
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                   False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
            BaseStyle -> Dynamic[
              FEPrivate`If[
               CurrentValue[Enabled], 
               FEPrivate`If[
                CurrentValue["MouseOver"], {
                FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                FontColor -> 
                 RGBColor[
                  0.17960779999999998`, 0.17960779999999998`, 
                   0.17960779999999998`]}], {
               FontColor -> 
                RGBColor[
                 0.5898038999999999, 0.5898038999999999, 
                  0.5898038999999999]}], Evaluator -> "System"], 
            Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
            Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
            "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
            Evaluator -> Automatic], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Insert Headings\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], 
               "\"Insert a cell of the chosen type below the current \
selection\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {DynamicBox[
               ToBoxes[
                
                Grid[{{"Section", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "4") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Section"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subsection", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "5") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subsection"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subsubsection", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "6") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subsubsection"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], Delimiter, DynamicBox[
               ToBoxes[
                
                Grid[{{"Title", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "1") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Title"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subtitle", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "2") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subtitle"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Chapter", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "3") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Chapter"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Author\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Author"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Abstract\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Abstract"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Insert Text\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], 
               "\"Insert a cell of the chosen type below the current \
selection\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {DynamicBox[
               ToBoxes[
                
                Grid[{{"Text", (((" (" <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "7") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Text"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"CodeText", ((((" (" <> "Shift+") <> 
                    If[$OperatingSystem === "MacOSX", "Cmd", "Alt"]) <> "+") <> 
                    "7") <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "CodeText"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Item\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Item"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           ActionMenuBox[
            ButtonBox[
             StyleBox[
              
              TemplateBox[{
               "\"Open/Close Groups\"", 
                "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\"\
"}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
              StripOnInput -> False], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {
            "\"Open Chapters\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Chapter", Open]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Close Chapters\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Chapter", Closed]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Open Sections\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Section", Open]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Close Sections\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Section", Closed]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.898039, 0.898039, 0.898039]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {1 -> RGBColor[0.898039, 0.898039, 0.898039]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "ColumnsIndexed" -> {1 -> 0, -1 -> 0}, "Rows" -> {{Automatic}}}, 
         FrameStyle -> GrayLevel[0.75]], "Grid"]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Thickness[0.03333333333333333], {
                   FaceForm[{
                    RGBColor[
                    0.8200000000000001, 0.8200000000000001, 
                    0.8200000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{27.,
                     1.}, {3., 1.}, {3., 29.}, {27., 29.}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                    2.}, {26., 2.}, {26., 28.}, {4., 28.}}}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.,
                     2.}, {6., 2.}, {6., 10.}, {24., 10.}}}]}, {
                   FaceForm[{
                    RGBColor[0.898, 0.898, 0.898], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{23.,
                     2.}, {7., 2.}, {7., 9.}, {23., 9.}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.,
                     2.}, {12., 2.}, {12., 8.}, {22., 8.}}}]}, {
                   FaceForm[{
                    RGBColor[0.984, 0.6859999999999999, 0.365], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{8., 7.}, {11., 7.}, {11., 8.}, {8., 8.}}, {{8., 
                    5.}, {11., 5.}, {11., 6.}, {8., 6.}}, {{8., 4.}, {11., 
                    4.}, {11., 3.}, {8., 3.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
                    0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{9.697299999999998, 24.522}, {
                    9.133299999999998, 24.645}, {8.861299999999998, 
                    24.259999999999998`}, {9.313299999999998, 24.092}}, {{
                    9.291299999999998, 23.933}, {8.9683, 
                    24.052999999999997`}, {9.2183, 23.726999999999997`}, {
                    9.587299999999999, 23.601}}, {{9.553299999999998, 
                    23.447}, {9.169299999999998, 23.578}, {8.760299999999999, 
                    23.456999999999997`}, {9.102299999999998, 
                    23.348999999999997`}}, {{9.083299999999998, 22.633}, {
                    9.025299999999998, 23.208}, {8.567299999999998, 23.354}, {
                    8.555299999999999, 22.865}}, {{8.521299999999998, 
                    23.551}, {9.039299999999999, 23.703}, {8.711299999999998, 
                    24.13}, {8.2183, 23.962999999999997`}}, {{8.4073, 
                    23.197}, {8.171299999999999, 22.851}, {8.171299999999999, 
                    22.445}, {8.398299999999999, 22.837}}, {{
                    8.091299999999999, 23.014}, {8.395299999999999, 23.458}, {
                    8.091299999999999, 23.871}, {7.786299999999999, 
                    23.458}}, {{8.010299999999999, 22.851}, {
                    7.773299999999999, 23.197}, {7.782299999999998, 22.837}, {
                    8.010299999999999, 22.445}}, {{7.964299999999999, 
                    23.962999999999997`}, {7.469299999999999, 24.13}, {
                    7.141299999999999, 23.703}, {7.659299999999998, 
                    23.551}}, {{7.626299999999999, 22.865}, {
                    7.614299999999998, 23.354}, {7.155299999999999, 23.209}, {
                    7.097299999999999, 22.633999999999997`}}, {{
                    7.078299999999999, 23.348999999999997`}, {
                    7.422299999999998, 23.456999999999997`}, {
                    7.0112999999999985`, 23.578}, {6.6282999999999985`, 
                    23.447}}, {{6.593299999999998, 23.601}, {
                    6.962299999999999, 23.726999999999997`}, {
                    7.214299999999998, 24.054}, {6.889299999999999, 
                    23.933999999999997`}}, {{6.867299999999998, 24.092}, {
                    7.319299999999998, 24.259999999999998`}, {
                    7.0482999999999985`, 24.645}, {6.484299999999998, 
                    24.522}}, {{7.113299999999999, 25.217}, {
                    7.158299999999999, 24.761}, {7.356299999999999, 
                    24.479999999999997`}, {7.344299999999999, 24.904}}, {{
                    7.5032999999999985`, 24.817999999999998`}, {
                    7.518299999999998, 24.279}, {8.010299999999999, 24.113}, {
                    8.010299999999999, 24.637999999999998`}}, {{
                    7.2452999999999985`, 25.302}, {7.4712999999999985`, 
                    24.997}, {7.8622999999999985`, 24.857}, {
                    7.656299999999998, 25.122}}, {{7.800299999999998, 
                    25.192}, {8.091299999999999, 24.82}, {8.381299999999998, 
                    25.192}, {8.091299999999999, 25.689}}, {{
                    8.171299999999999, 24.637999999999998`}, {
                    8.171299999999999, 24.113}, {8.663299999999998, 24.279}, {
                    8.677299999999999, 24.817999999999998`}}, {{
                    8.836299999999998, 24.904}, {8.8243, 
                    24.479999999999997`}, {9.022299999999998, 24.761}, {
                    9.068299999999999, 25.217}}, {{8.318299999999999, 
                    24.857}, {8.710299999999998, 24.997}, {8.935299999999998, 
                    25.302}, {8.525299999999998, 25.122}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQbb/k/j6+P8oOE9/W2JvOs3CQKL4u9OmhkgMDGFg4
wOTzhJoPnEo0d1i3Lan+ZqySw+2fdVl7TMwdPjqeT7vargSVN3MQkT351J5F
0eH64gJbru1mDk9BBugpQM0zcwicpthXulEOLl8ja5HuslIarp/ZRNDM5q80
3PwHEeLbLx6QgNuvt1udn/urFNx9MHmY+2H6VdgapzqftoCbD5G3hNuvGdN/
6KuHJZr7rODuh8nX3bStjOhQguuH+R9mPgC7F3w4
                    "]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.,
                     25.}, {24.000999999999998`, 25.}, {24.000999999999998`, 
                    26.}, {11., 26.}}}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.,
                     22.}, {11., 22.}, {11., 24.}, {24., 24.}}}]}, {
                   FaceForm[{
                    RGBColor[0.984, 0.6859999999999999, 0.365], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 20.}, {
                    24., 20.}, {24., 21.}, {19., 21.}}, {{6., 20.}, {18., 
                    20.}, {18., 21.}, {6., 21.}}, {{6., 18.}, {10., 18.}, {
                    10., 19.}, {6., 19.}}, {{11., 19.}, {17., 19.}, {17., 
                    18.}, {11., 18.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10ksKgzAYReHQdtgFZFqRIEEkPioOXUOXUOjY/c90kDvogSuEn08OaoKv
7/H53UMIz2s9rnULutL+P4txh/vyiPtvY/byWudQ52Zc0MtLnRk93aOX9byE
nub3yhG9m+xlnY/2MxsP6OUJfTZmLzd16jyicUYvd/Bs3KOXE9waZ/R8v/YT
jfkfl/0EHWIqGQ==
                    "]]}, {
                   FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YB78sqmiXoOlxjuMXF2sTisvRFf5h+n59Dj9YrF
RJDFwUzqQLQCo56D3oQFPwyfMUH4B3Ud1qs+aZ53lsHhxfb1zM959OD8lpoL
myNN9Rwq5ixS3vmH0QEo26ORC+MzOSQuvGbyfoeew7F/m6o/bWB2mLcaZKO+
g5xFuktmPqvD1mWVxzWtDBy2XwQ5iNXhjf5udf5uAwdWE0Ezm71MDs/WgSwy
cFh9/mrYG30mhw+tJ0MOrjBwiM09CjSR0QFkS/sWA7h7+koLpXkfIPgvbq75
FXPWwCHx8GXtVEkmuHoJsIXMDm0g45YYOHR8uX29sZjZgZ8b6CJ3A4fvbPEz
fETZHKqW6jjLZOs7sIO4PWwO6OEHAOM+kNE=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3XHp3gNuYX2HJyKyJ5/aSzgsZtzDKiSi65AbVrtu
2yMxB7VDbcvDuXQcOKXnxWmeFnSo+21VcI5D24HVRNDMZi+nQ+LCaybvd2g5
RDvZvbi5hs0hXSmnoipVy0HtSfO8s6uYHaIVHD8m82g5rFcFCTA4aElMvcKZ
geBv1MsDWqnlYLM3aJpiHzPUPm0HOYt0l8x8NofU708SF4ZpO1zRTpV8FMHp
EFyiMv1/gI7D9qT6m7aVghD3hug6HN+1o5etQMzh/wSgCw30HfbxzTFetEXc
4dOGgOxZ0w0cwM4XkHQ4Xe+xv3avocO0TTyFa7pFHfi5ty6rbDdyqFu3Lak+
Ushhho9oj5eXscOcRco7/7TzOSyrPK5p9cnYQazH6xWLCbuDLNhdJnD3r/kV
k3t0HoJfKM37QNfAxEEDbDCbwxI/B+HExcYOBrvVgSI8DidDDq5Ywmfs8OaA
pbLXbwEHq0lAF8kbOXzJAQa4magDSPuEAwYOINfdfiHpgB4/AHQArZ4=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvTz8lNGRjXoO67Yl1d/cK+MwK3T+6rUROg5rum9n
MLyXcujReMu7z0Db4ULa1edZq0Ucchcz7mEV0nJ4xWIiaGbD62AzG6RB08HZ
7sXNNb84HDzmNqgdctN0MNitzs+9lcXht1XBuY5LGg7rVZ80zzvL4ACxThPO
V3D8mHxmrqbDs3UgARaHAE+gAUxaDqwg4/dyOIBU5yVrOajs/NP+5TaPA5C3
mLFG22HG3cntrVEiDpNWNgV6ztVxYPsg5hFQI+UgmuX7ue+ynkNokPqCTgMZ
B3ZboANf6ztUN+v7LOOSdQC5atlMAwe+OcaLtmyXcZC1SHfJ9Dd0WA/yv620
wyJlkEVGDh4BfySKr4s7TPnGFj9jjYlDxBt9oI/4HL7cvt5YfMwU7n4w/xkm
/2PryZCDKxgdmordpnxzM3XQSZV8FCHO6QA2vtrEIXKF6VnrcwIOQdMU+0o3
Gju4/Hr7+oCliEO9x/5a2R+GDixH+w3L10o7AAMhaFqjAcT9XXIO6PEFAPga
wsg=
                    "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSt0/uq1N/QdLjHcY+Ls4nNoUDvUtjxcz8Fq0ul6
j/28DmtvxJf5x+k6bL8IUsDusJtVSMS+TcdhveqT5nlnGRycZF4/MruF4DcF
es5tWKbroAbirmJzCC5Rmf5/gp5D1XFNoJE8Dkt1nIE69B3ico/+21TN6/BA
d8KCH4UGDo8ixIFW8DnIWqS7ZPIbOrQAdZ+/yuVgszdommKfocPq81fD3uiz
OkQ52b24ucbQwd9BOPHwZWaH5HdAkROGDln5H1pPhjA5gK25bwh3Ty3IQE4j
OB9oyG7194YO7PEzfER7mBxWgcw9b+jwmsVE0MyGBWLfOkOHApBxB1nBtmir
wtzD7QAKldpaAwdGUHDJ8zughx8AsHaP1w==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQvb9W1iI9xchhwoIfhs/WcTs42b24uWaXkYNI4uHL
2qkcDlO+scXP4DF2YI+f4SPaw+JgszdomqKfscN61SfN884yOHTJJ7+LUkLw
d6vzc299ZuSQM6t8ziJlFgeQcb/mGDmogaRXsTu0nQw5uMLFyMFXtMfrFQu3
Q7EbyAZDh9yw2nXbHgk6gKzzKTVwaGI52m/4XdjB4WPymdhufQeXX29fH7AU
dugLLlGZ/l/XYc9jEdmTqUION+LL/OXEdB3W/orJPfqPx8FPTizL11jHYR/Q
mX2lrA5ty8NPGbHoOPSVFkrzPmB2MJipJTH1irbDKaAzlvgxOeyPVnD8uFgb
7n4QN9kHwc+uqFqq06wNNY/JYeetrr+p27UdykDG6bI4AGWdZV5rO/wEhp7q
E1aHRYx7WIWu6ED9y+uw4JrJe4ujug4z7k5ub70l5HBna0vNhWJ9B4ni60Kf
Dgo7GIG0HTZwOGftd3HiHRGHTxsCsmddN3TQ+TYdqEPAAT1+AE3XvCM=
                    "]}]}}}, {
                ImageSize -> {Automatic, 32}, 
                 ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                 Scaled[0.25], AspectRatio -> Automatic, 
                 ImageSize -> {30., 30.}, 
                 PlotRange -> {{0., 30.}, {0., 30.}}}], 
               StyleBox[
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"Computational Essay\"", FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold", StripOnInput -> 
                    False]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"], FontSize -> 24, FontColor -> GrayLevel[1], 
                StripOnInput -> False]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", "\"\""}, {
           ActionMenuBox[
            TemplateBox[{
              TemplateBox[{
                TemplateBox[{"\"Sample Content\"", 
                  TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                 "RowDefault"], 
                "\"Clear sample content in the current notebook, or view a \
completed sample computational essay\""}, "PrettyTooltipTemplate"], Null& , 
              "\"Clear sample content in the current notebook, or view a \
completed sample computational essay\"", True}, "OrangeButtonTemplate"], {
            "\"Insert Sample Content\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`insertSampleContent[]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Clear Sample Content\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    Module[{$CellContext`cells = Flatten[
                    Map[{NotebookFind[
                    ButtonNotebook[], #, All, CellTags, AutoScroll -> False]; 
                    SelectedCells[]}& , {
                    "ExampleTopicSentence", "TopicSentenceButton", 
                    "ExampleCodeText", "ExampleInput", "ExampleOutput", 
                    "EssayStructureExample", "CitationExample", 
                    "SectionMoreInfoYourEssayTitle", 
                    "SectionMoreInfoAuthorInfoButton", 
                    "SectionMoreInfoAbstract", 
                    "SectionMoreInfoSectionHeaderInfoButton"}]]}, 
                    NotebookDelete[$CellContext`cells]]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Open Sample Essay\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    SystemOpen["https://wolfr.am/SampleEssay"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           
           TemplateBox[{
            "\"Open Guidelines\"", SystemOpen[
             "https://wolfr.am/ComputationalEssayGuidelines"]& , "\"\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             TemplateBox[{
               TagBox[
                GridBox[{{"\"Tools\"", 
                   PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{0., 0.65}, {0., -0.65}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 8, 
                    PlotRangePadding -> None, Background -> None], True -> 
                    GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 8, 
                    PlotRangePadding -> None, Background -> None]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[-0.1]]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
               "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`ToggleToolbar[
              ButtonNotebook[]]& , "\"Toggle documentation toolbar\"", False},
             "OrangeButtonTemplate"], 
           TagBox[
            
            GridBox[{{"\"\"", "\"\""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxDividers -> {
              "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
             RGBColor[0.99215, 0.843125, 0.68235]], "Grid"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Check\"", "\"Check notebook for potential errors\""}, 
              "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`CheckDefinitionNotebook[
              ButtonNotebook[]]& , "\"Check notebook for potential errors\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Publish to Cloud\"", 
               "\"Publish your computational essay to the cloud\""}, 
              "PrettyTooltipTemplate"], 
             With[{$CellContext`nb = ButtonNotebook[]}, CreateDialog[
                
                ComputationalEssayHelpers`Private`createSubmissionDialog[$\
CellContext`nb], WindowSize -> {350, 150}, Background -> White, WindowFrame -> 
                "Normal", "Evaluator" -> "System"]; Null]& , 
             "\"Publish your computational essay to the cloud\"", False}, 
            "OrangeButtonTemplate"], 
           ItemBox[
            StyleBox[
             DynamicBox[
              ToBoxes[
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
               StandardForm], Evaluator -> "System", 
              Initialization :> (CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
               "")], "Text", 
             GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
            StripOnInput -> False], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Submit to Notebook Archive\"", 
               "\"Submit your essay to the Wolfram Notebook Archive\""}, 
              "PrettyTooltipTemplate"], 
             ComputationalEssayHelpers`Private`submitEssay[]& , 
             "\"Submit your essay to the Wolfram Notebook Archive\"", False}, 
            "OrangeButtonTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
           "Rows" -> {{Center}}}, AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.9843, 0.68625, 0.3647], 
             RGBColor[0.7185389999999999, 0.5009625, 0.266231]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {
            1 -> RGBColor[0.9843, 0.68625, 0.3647], 2 -> 
             RGBColor[0.7185389999999999, 0.5009625, 0.266231]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "Columns" -> {5, {0.9}, 5}, 
           "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 1.55}}, FrameStyle -> 
         RGBColor[0.9843, 0.68625, 0.3647]], "Grid"]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{{
                Thickness[0.03333333333333333], {
                 FaceForm[{
                   RGBColor[
                   0.8200000000000001, 0.8200000000000001, 
                    0.8200000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{27., 
                  1.}, {3., 1.}, {3., 29.}, {27., 29.}}}]}, {
                 FaceForm[{
                   RGBColor[1., 1., 1.], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                  2.}, {26., 2.}, {26., 28.}, {4., 28.}}}]}, {
                 FaceForm[{
                   RGBColor[0.749, 0.749, 0.749], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 
                  2.}, {6., 2.}, {6., 10.}, {24., 10.}}}]}, {
                 FaceForm[{
                   RGBColor[0.898, 0.898, 0.898], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 
                  2.}, {7., 2.}, {7., 9.}, {23., 9.}}}]}, {
                 FaceForm[{
                   RGBColor[1., 1., 1.], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22., 
                  2.}, {12., 2.}, {12., 8.}, {22., 8.}}}]}, {
                 FaceForm[{
                   RGBColor[0.984, 0.6859999999999999, 0.365], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, {{{8., 7.}, {11., 7.}, {11., 8.}, {8., 8.}}, {{8., 
                  5.}, {11., 5.}, {11., 6.}, {8., 6.}}, {{8., 4.}, {11., 
                  4.}, {11., 3.}, {8., 3.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}}}, {{{9.697299999999998, 24.522}, {9.133299999999998, 
                   24.645}, {8.861299999999998, 24.259999999999998`}, {
                   9.313299999999998, 24.092}}, {{9.291299999999998, 
                   23.933}, {8.9683, 24.052999999999997`}, {9.2183, 
                   23.726999999999997`}, {9.587299999999999, 23.601}}, {{
                   9.553299999999998, 23.447}, {9.169299999999998, 23.578}, {
                   8.760299999999999, 23.456999999999997`}, {
                   9.102299999999998, 23.348999999999997`}}, {{
                   9.083299999999998, 22.633}, {9.025299999999998, 23.208}, {
                   8.567299999999998, 23.354}, {8.555299999999999, 
                   22.865}}, {{8.521299999999998, 23.551}, {9.039299999999999,
                    23.703}, {8.711299999999998, 24.13}, {8.2183, 
                   23.962999999999997`}}, {{8.4073, 23.197}, {
                   8.171299999999999, 22.851}, {8.171299999999999, 22.445}, {
                   8.398299999999999, 22.837}}, {{8.091299999999999, 
                   23.014}, {8.395299999999999, 23.458}, {8.091299999999999, 
                   23.871}, {7.786299999999999, 23.458}}, {{8.010299999999999,
                    22.851}, {7.773299999999999, 23.197}, {7.782299999999998, 
                   22.837}, {8.010299999999999, 22.445}}, {{7.964299999999999,
                    23.962999999999997`}, {7.469299999999999, 24.13}, {
                   7.141299999999999, 23.703}, {7.659299999999998, 
                   23.551}}, {{7.626299999999999, 22.865}, {7.614299999999998,
                    23.354}, {7.155299999999999, 23.209}, {7.097299999999999, 
                   22.633999999999997`}}, {{7.078299999999999, 
                   23.348999999999997`}, {7.422299999999998, 
                   23.456999999999997`}, {7.0112999999999985`, 23.578}, {
                   6.6282999999999985`, 23.447}}, {{6.593299999999998, 
                   23.601}, {6.962299999999999, 23.726999999999997`}, {
                   7.214299999999998, 24.054}, {6.889299999999999, 
                   23.933999999999997`}}, {{6.867299999999998, 24.092}, {
                   7.319299999999998, 24.259999999999998`}, {
                   7.0482999999999985`, 24.645}, {6.484299999999998, 
                   24.522}}, {{7.113299999999999, 25.217}, {7.158299999999999,
                    24.761}, {7.356299999999999, 24.479999999999997`}, {
                   7.344299999999999, 24.904}}, {{7.5032999999999985`, 
                   24.817999999999998`}, {7.518299999999998, 24.279}, {
                   8.010299999999999, 24.113}, {8.010299999999999, 
                   24.637999999999998`}}, {{7.2452999999999985`, 25.302}, {
                   7.4712999999999985`, 24.997}, {7.8622999999999985`, 
                   24.857}, {7.656299999999998, 25.122}}, {{7.800299999999998,
                    25.192}, {8.091299999999999, 24.82}, {8.381299999999998, 
                   25.192}, {8.091299999999999, 25.689}}, {{8.171299999999999,
                    24.637999999999998`}, {8.171299999999999, 24.113}, {
                   8.663299999999998, 24.279}, {8.677299999999999, 
                   24.817999999999998`}}, {{8.836299999999998, 24.904}, {
                   8.8243, 24.479999999999997`}, {9.022299999999998, 
                   24.761}, {9.068299999999999, 25.217}}, {{8.318299999999999,
                    24.857}, {8.710299999999998, 24.997}, {8.935299999999998, 
                   25.302}, {8.525299999999998, 25.122}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQbb/k/j6+P8oOE9/W2JvOs3CQKL4u9OmhkgMDGFg4
wOTzhJoPnEo0d1i3Lan+ZqySw+2fdVl7TMwdPjqeT7vargSVN3MQkT351J5F
0eH64gJbru1mDk9BBugpQM0zcwicpthXulEOLl8ja5HuslIarp/ZRNDM5q80
3PwHEeLbLx6QgNuvt1udn/urFNx9MHmY+2H6VdgapzqftoCbD5G3hNuvGdN/
6KuHJZr7rODuh8nX3bStjOhQguuH+R9mPgC7F3w4
                   "]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11., 
                  25.}, {24.000999999999998`, 25.}, {24.000999999999998`, 
                  26.}, {11., 26.}}}]}, {
                 FaceForm[{
                   RGBColor[0.749, 0.749, 0.749], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 
                  22.}, {11., 22.}, {11., 24.}, {24., 24.}}}]}, {
                 FaceForm[{
                   RGBColor[0.984, 0.6859999999999999, 0.365], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 20.}, {24.,
                   20.}, {24., 21.}, {19., 21.}}, {{6., 20.}, {18., 20.}, {
                  18., 21.}, {6., 21.}}, {{6., 18.}, {10., 18.}, {10., 19.}, {
                  6., 19.}}, {{11., 19.}, {17., 19.}, {17., 18.}, {11., 
                  18.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10ksKgzAYReHQdtgFZFqRIEEkPioOXUOXUOjY/c90kDvogSuEn08OaoKv
7/H53UMIz2s9rnULutL+P4txh/vyiPtvY/byWudQ52Zc0MtLnRk93aOX9byE
nub3yhG9m+xlnY/2MxsP6OUJfTZmLzd16jyicUYvd/Bs3KOXE9waZ/R8v/YT
jfkfl/0EHWIqGQ==
                  "]]}, {
                 FaceForm[{
                   RGBColor[0.392, 0.392, 0.392], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YB78sqmiXoOlxjuMXF2sTisvRFf5h+n59Dj9YrF
RJDFwUzqQLQCo56D3oQFPwyfMUH4B3Ud1qs+aZ53lsHhxfb1zM959OD8lpoL
myNN9Rwq5ixS3vmH0QEo26ORC+MzOSQuvGbyfoeew7F/m6o/bWB2mLcaZKO+
g5xFuktmPqvD1mWVxzWtDBy2XwQ5iNXhjf5udf5uAwdWE0Ezm71MDs/WgSwy
cFh9/mrYG30mhw+tJ0MOrjBwiM09CjSR0QFkS/sWA7h7+koLpXkfIPgvbq75
FXPWwCHx8GXtVEkmuHoJsIXMDm0g45YYOHR8uX29sZjZgZ8b6CJ3A4fvbPEz
fETZHKqW6jjLZOs7sIO4PWwO6OEHAOM+kNE=
                   "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3XHp3gNuYX2HJyKyJ5/aSzgsZtzDKiSi65AbVrtu
2yMxB7VDbcvDuXQcOKXnxWmeFnSo+21VcI5D24HVRNDMZi+nQ+LCaybvd2g5
RDvZvbi5hs0hXSmnoipVy0HtSfO8s6uYHaIVHD8m82g5rFcFCTA4aElMvcKZ
geBv1MsDWqnlYLM3aJpiHzPUPm0HOYt0l8x8NofU708SF4ZpO1zRTpV8FMHp
EFyiMv1/gI7D9qT6m7aVghD3hug6HN+1o5etQMzh/wSgCw30HfbxzTFetEXc
4dOGgOxZ0w0cwM4XkHQ4Xe+xv3avocO0TTyFa7pFHfi5ty6rbDdyqFu3Lak+
Ushhho9oj5eXscOcRco7/7TzOSyrPK5p9cnYQazH6xWLCbuDLNhdJnD3r/kV
k3t0HoJfKM37QNfAxEEDbDCbwxI/B+HExcYOBrvVgSI8DidDDq5Ywmfs8OaA
pbLXbwEHq0lAF8kbOXzJAQa4magDSPuEAwYOINfdfiHpgB4/AHQArZ4=
                   "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvTz8lNGRjXoO67Yl1d/cK+MwK3T+6rUROg5rum9n
MLyXcujReMu7z0Db4ULa1edZq0Ucchcz7mEV0nJ4xWIiaGbD62AzG6RB08HZ
7sXNNb84HDzmNqgdctN0MNitzs+9lcXht1XBuY5LGg7rVZ80zzvL4ACxThPO
V3D8mHxmrqbDs3UgARaHAE+gAUxaDqwg4/dyOIBU5yVrOajs/NP+5TaPA5C3
mLFG22HG3cntrVEiDpNWNgV6ztVxYPsg5hFQI+UgmuX7ue+ynkNokPqCTgMZ
B3ZboANf6ztUN+v7LOOSdQC5atlMAwe+OcaLtmyXcZC1SHfJ9Dd0WA/yv620
wyJlkEVGDh4BfySKr4s7TPnGFj9jjYlDxBt9oI/4HL7cvt5YfMwU7n4w/xkm
/2PryZCDKxgdmordpnxzM3XQSZV8FCHO6QA2vtrEIXKF6VnrcwIOQdMU+0o3
Gju4/Hr7+oCliEO9x/5a2R+GDixH+w3L10o7AAMhaFqjAcT9XXIO6PEFAPga
wsg=
                   "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSt0/uq1N/QdLjHcY+Ls4nNoUDvUtjxcz8Fq0ul6
j/28DmtvxJf5x+k6bL8IUsDusJtVSMS+TcdhveqT5nlnGRycZF4/MruF4DcF
es5tWKbroAbirmJzCC5Rmf5/gp5D1XFNoJE8Dkt1nIE69B3ico/+21TN6/BA
d8KCH4UGDo8ixIFW8DnIWqS7ZPIbOrQAdZ+/yuVgszdommKfocPq81fD3uiz
OkQ52b24ucbQwd9BOPHwZWaH5HdAkROGDln5H1pPhjA5gK25bwh3Ty3IQE4j
OB9oyG7194YO7PEzfER7mBxWgcw9b+jwmsVE0MyGBWLfOkOHApBxB1nBtmir
wtzD7QAKldpaAwdGUHDJ8zughx8AsHaP1w==
                   "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQvb9W1iI9xchhwoIfhs/WcTs42b24uWaXkYNI4uHL
2qkcDlO+scXP4DF2YI+f4SPaw+JgszdomqKfscN61SfN884yOHTJJ7+LUkLw
d6vzc299ZuSQM6t8ziJlFgeQcb/mGDmogaRXsTu0nQw5uMLFyMFXtMfrFQu3
Q7EbyAZDh9yw2nXbHgk6gKzzKTVwaGI52m/4XdjB4WPymdhufQeXX29fH7AU
dugLLlGZ/l/XYc9jEdmTqUION+LL/OXEdB3W/orJPfqPx8FPTizL11jHYR/Q
mX2lrA5ty8NPGbHoOPSVFkrzPmB2MJipJTH1irbDKaAzlvgxOeyPVnD8uFgb
7n4QN9kHwc+uqFqq06wNNY/JYeetrr+p27UdykDG6bI4AGWdZV5rO/wEhp7q
E1aHRYx7WIWu6ED9y+uw4JrJe4ujug4z7k5ub70l5HBna0vNhWJ9B4ni60Kf
Dgo7GIG0HTZwOGftd3HiHRGHTxsCsmddN3TQ+TYdqEPAAT1+AE3XvCM=
                   "]}]}}}, {
              ImageSize -> 12, AspectRatio -> Automatic, 
               ImageSize -> {30., 30.}, PlotRange -> {{0., 30.}, {0., 30.}}}],
              "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
         "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
         Dynamic[
           FEPrivate`If[
            CurrentValue[Enabled], 
            GrayLevel[1], 
            RGBColor[0.8730375, 0.83578125, 0.7955875]], Evaluator -> 
           "System"], StripOnInput -> False], ButtonFunction :> 
        With[{RSNB`nb$ = ButtonNotebook[]}, 
          If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
            ProgressIndicator[Appearance -> "Necklace"]]; 
          With[{RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False}, 
              Internal`WithLocalSettings[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                 True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; 
                Needs["ResourceSystemClient`DefinitionNotebook`"], 
                ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                RSNB`nb$, 
                 #2[]], 
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                 False; Null]; Null]]]; 
          CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; Null],
         FrameMargins -> {{5, 5}, {0, 0}}, 
        Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaN1lY4QhCyIrAwo1R5n1BhlAEFANlwxXNmaCoem
KIPacD1kBBQBisOVba1zbos1QlMDQUBxoCzEtUAtjRhGQVAj2EAGMCBGGZGm
Ee82In1KfLgREwvExCkA9SYWEg==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaN1lY4QhCyIrAwo1Zds2ptsAkFANlwxXNmaCoee
JJP7c4J/r4+FICAbKAIUhyvbWufcn2L6eH4IXA0EAUWA4kBZiGuBWiammqGp
gSCgOFCWAQyIUUakacS7jUifEh9uxMQCMXEKAB4IRIc=
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaNDUxIhCFkQWRlQ6vOz678/PIEgIBuuGK7s6Iz0
X++f/DnY+Ht9LAQB2UARoDhc2c4Wry/Pb/zZVw1XA1W5rxooDpSFuBZk1Nv7
aGogCCgOlGUAA2KUEWka8W4j0qfEhxsxsUBMnAIAq2R1ew==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
        Background -> RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
        Method -> "Queued", ImageSize -> {All, 23}, Enabled -> Dynamic[
          Not[
           TrueQ[ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
          TrackedSymbols :> {
           ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
        Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              AdjustmentBox[
               TemplateBox[{
                 ActionMenuBox[
                  TagBox[
                   PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                   MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                  Method -> "Queued"], "\"View suggestions\""}, 
                "PrettyTooltipTemplate"], BoxBaselineShift -> -0.3]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -1.}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05555555555555555], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh4qXaoYcOfoO
m+a+X37stKZDbP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4PzZRxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA8nn+Z
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.175292500000001, 
             7.416875}, {7.796855000000001, 11.3084375}, {7.796855000000001, 
             13.38}, {10.11998, 13.38}, {10.11998, 11.3084375}, {
             9.741542500000001, 7.416875}, {8.175292500000001, 
             7.416875}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/cTvZcLf/4oOD6tE1rk/5HNQjDzAkqeL4FsusdsW
1KjgwAAGAg7hCSdehX2Xd5BvfR24Q07QwaZCOJPjjZyDHdf1xQW2Qg56LJYa
iWlyDv2HvmrEzBeG80GmVbmIwvkvtjT6Sb8Qg+t/BLLPUwJuPti6DEm4/WD7
2qTg7gMZJyIm7QBzP4y/zEVob88lJTi/7+dk7hV1ynD9c3LzfPxZVODmr3ro
0futUwVu/0bpbbqnzqjA3Qfjw9wP48P8B9MP8z/MfFj4wOyHhR/MfbDwRQ9/
ACBxmlc=
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell[
    StyleData["Hyperlink"], FontColor -> 
    RGBColor[0.7185389999999999, 0.5009625, 0.266231]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> 
    RGBColor[0.47902599999999995`, 0.333975, 0.17748733333333333`]], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.854902, 0.396078, 0.145098], 
       RGBColor[
       0.0196078431372549, 0.28627450980392155`, 0.6509803921568628]]]], 
   Cell[
    StyleData["StringTypeLink"], 
    TemplateBoxOptions -> {DisplayFunction :> (TagBox[
        DynamicBox[
         If[
          CurrentValue["MouseOver"], 
          ButtonBox[
           
           StyleBox[#, FontColor -> 
            RGBColor[0.9686274509803922, 0.4666666666666667, 0.]], 
           ButtonData -> #2], 
          ButtonBox[#, ButtonData -> #2]]], 
        MouseAppearanceTag["LinkHand"]]& )}, 
    ButtonBoxOptions -> {
     BaseStyle -> {FontColor -> GrayLevel[0.46666667], "Link"}}], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.905882]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, StyleMenuListing -> None, Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.880722, 0.611041, 0.142051], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.9821083, 0.94165615, 0.87130765]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.368417, 0.506779, 0.709798], Background -> 
    RGBColor[0.90526255, 0.92601685, 0.9564697]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.560181, 0.691569, 0.194885], Background -> 
    RGBColor[0.9340271499999999, 0.95373535, 0.87923275]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    RGBColor[0.898039, 0.898039, 0.898039]], 
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}]}, Visible -> False, 
  FrontEndVersion -> "13.1 for Microsoft Windows (64-bit) (June 16, 2022)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"e0fd4ab0-86e1-4deb-91f3-e4038de9feaf"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Examples"->{
  Cell[580, 22, 142, 2, 98, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]},
 "Your Essay Title"->{
  Cell[580, 22, 142, 2, 98, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]},
 "AuthorName"->{
  Cell[725, 26, 181, 4, 30, "Author",ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c",
   CellTags->"AuthorName",
   CellID->960727095]},
 "Abstract"->{
  Cell[909, 32, 144, 2, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "TemplateCell"->{
  Cell[909, 32, 144, 2, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "SectionHeader"->{
  Cell[1078, 38, 129, 2, 67, "Section",ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940",
   CellTags->"SectionHeader",
   CellID->453852445]},
 "ExampleTopicSentence"->{
  Cell[1210, 42, 130, 2, 35, "Text",ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f",
   CellTags->"ExampleTopicSentence",
   CellID->816667160]},
 "ExampleCodeText"->{
  Cell[1343, 46, 129, 2, 38, "CodeText",ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0",
   CellTags->"ExampleCodeText",
   CellID->66178570]},
 "ExampleInput"->{
  Cell[1497, 52, 239, 5, 28, "Input",ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5",
   CellTags->"ExampleInput",
   CellID->844129532]},
 "ExampleOutput"->{
  Cell[1739, 59, 242, 5, 32, "Output",ExpressionUUID->"c00f4ee8-0557-49a4-ab3b-dadc018208b9",
   CellTags->"ExampleOutput",
   CellID->171130590]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Examples", 831568, 17083},
 {"Your Essay Title", 831754, 17087},
 {"AuthorName", 831934, 17091},
 {"Abstract", 832093, 17095},
 {"TemplateCell", 832274, 17099},
 {"SectionHeader", 832456, 17103},
 {"ExampleTopicSentence", 832632, 17107},
 {"ExampleCodeText", 832807, 17111},
 {"ExampleInput", 832977, 17115},
 {"ExampleOutput", 833143, 17119}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 142, 2, 98, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577],
Cell[725, 26, 181, 4, 30, "Author",ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c",
 CellTags->"AuthorName",
 CellID->960727095],
Cell[909, 32, 144, 2, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573],
Cell[CellGroupData[{
Cell[1078, 38, 129, 2, 67, "Section",ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940",
 CellTags->"SectionHeader",
 CellID->453852445],
Cell[1210, 42, 130, 2, 35, "Text",ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f",
 CellTags->"ExampleTopicSentence",
 CellID->816667160],
Cell[1343, 46, 129, 2, 38, "CodeText",ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0",
 CellTags->"ExampleCodeText",
 CellID->66178570],
Cell[CellGroupData[{
Cell[1497, 52, 239, 5, 28, "Input",ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5",
 CellTags->"ExampleInput",
 CellID->844129532],
Cell[1739, 59, 242, 5, 32, "Output",ExpressionUUID->"c00f4ee8-0557-49a4-ab3b-dadc018208b9",
 CellTags->"ExampleOutput",
 CellID->171130590]
}, Open  ]],
Cell[1996, 67, 95, 1, 32, "Item",ExpressionUUID->"acdb2ad8-0a92-4f50-8bae-de040b09b38c",
 CellID->316654537],
Cell[2094, 70, 95, 1, 32, "Item",ExpressionUUID->"8090181c-e17a-4c99-bc3c-696fb19cb01c",
 CellID->316654538]
}, Open  ]],
Cell[CellGroupData[{
Cell[2226, 76, 169, 2, 67, "Section",ExpressionUUID->"8286c212-9b89-469d-9130-506272b3fb92",
 CellID->472529298],
Cell[2398, 80, 200, 2, 35, "Text",ExpressionUUID->"8a448c8d-68ca-4514-9399-cdecb94bb552",
 CellID->202213930],
Cell[2601, 84, 342, 9, 35, "Text",ExpressionUUID->"a66b3aa3-99b4-4b35-9164-d9f17ced7229",
 CellID->651557233],
Cell[CellGroupData[{
Cell[2968, 97, 207, 3, 28, "Input",ExpressionUUID->"65ed3749-a897-4557-a0a0-97604888f2b1",
 CellID->79423883],
Cell[3178, 102, 205, 5, 32, "Output",ExpressionUUID->"98183efc-cb99-4238-aec5-6f3667415527",
 CellID->26484653]
}, Open  ]],
Cell[3398, 110, 191, 2, 35, "Text",ExpressionUUID->"0d6b809e-bdf3-4750-b80a-7aa6b664dc29",
 CellID->75843069],
Cell[3592, 114, 193, 2, 35, "Text",ExpressionUUID->"cd485f84-0680-4ded-8601-6dc9d16f549b",
 CellID->442976440],
Cell[3788, 118, 244, 4, 58, "Text",ExpressionUUID->"22e09202-7acf-4b0d-8d23-3c7ca321d8de",
 CellID->11063210],
Cell[4035, 124, 316, 8, 35, "Text",ExpressionUUID->"c171bb24-6646-4bc5-ae24-ed35b3345731",
 CellID->131205281],
Cell[4354, 134, 247, 3, 35, "Text",ExpressionUUID->"c1238648-f5e9-4830-8b0f-c71634049ea9",
 CellID->299432710],
Cell[4604, 139, 171, 2, 35, "Text",ExpressionUUID->"8288fac0-2476-4255-8e68-a9d6eb7e38a9",
 CellID->210230365],
Cell[4778, 143, 336, 4, 35, "Text",ExpressionUUID->"3d94d2ae-09f0-467e-9810-c3adc96f0994",
 CellID->59263262],
Cell[5117, 149, 213, 2, 35, "Text",ExpressionUUID->"512c8136-4aac-45f2-9006-c186618b7be2",
 CellID->112798681],
Cell[5333, 153, 212, 2, 35, "Text",ExpressionUUID->"99af6316-6ead-4b38-8beb-9b5aa3612cd2",
 CellID->85100390],
Cell[CellGroupData[{
Cell[5570, 159, 202, 3, 41, "WolframAlphaLong",ExpressionUUID->"fbf1ac55-28db-4f32-9192-d142d02ad174",
 CellID->30061086],
Cell[5775, 164, 183542, 3740, 1992, "Print",ExpressionUUID->"3363037a-0bd3-42f3-a52d-4a098f4563ba",
 CellID->74764740]
}, Open  ]],
Cell[189332, 3907, 212, 2, 35, "Text",ExpressionUUID->"8420b33c-d0e1-4039-9559-4f371e303e23",
 CellID->186742117],
Cell[189547, 3911, 211, 2, 35, "Text",ExpressionUUID->"9c50c069-e340-4fee-9561-31ac33a46280",
 CellID->319308745],
Cell[189761, 3915, 180, 2, 35, "Text",ExpressionUUID->"30ab35bd-c168-441f-be5b-4e764ada803f",
 CellID->739313864],
Cell[CellGroupData[{
Cell[189966, 3921, 201, 3, 41, "WolframAlphaLong",ExpressionUUID->"5bc24a5b-4c61-4a0b-9704-5b40c0af21cc",
 CellID->56366454],
Cell[190170, 3926, 224958, 4586, 2352, "Print",ExpressionUUID->"de374020-2b8f-4230-8bbe-f3b9036f129b",
 CellID->869344860]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[415177, 8518, 173, 2, 67, "Section",ExpressionUUID->"c4d73371-b12a-4210-84cb-6a4af9429812",
 CellID->425100635],
Cell[415353, 8522, 186, 2, 35, "Text",ExpressionUUID->"3c5c65ba-8525-4acd-9acf-773100203db9",
 CellID->254444894],
Cell[415542, 8526, 221, 3, 35, "Text",ExpressionUUID->"53f7d88b-f50a-4843-897b-359e67916465",
 CellID->88692720],
Cell[415766, 8531, 231, 4, 35, "Text",ExpressionUUID->"402777f1-1b3b-4fdb-a220-9cda7eb7469e",
 CellID->64507219],
Cell[416000, 8537, 230, 3, 35, "Text",ExpressionUUID->"4121e758-b099-4c19-9df8-67d831c6a0f3",
 CellID->321624115],
Cell[416233, 8542, 312, 4, 35, "Text",ExpressionUUID->"75a8f0d8-76cf-46e1-9d63-ed4d5c1902e2",
 CellID->512960162],
Cell[416548, 8548, 165, 2, 35, "Text",ExpressionUUID->"3addac6c-b634-4c02-ab35-de12fb3831e9",
 CellID->379211034],
Cell[416716, 8552, 498, 13, 35, "Text",ExpressionUUID->"c8cb3aee-ac53-4b95-8f35-d8e5b605575b",
 CellID->185993044],
Cell[CellGroupData[{
Cell[417239, 8569, 547, 12, 31, "Input",ExpressionUUID->"a9dce4c0-0b03-4418-862e-8f49f3bc4921",
 CellID->36068717],
Cell[417789, 8583, 343, 7, 32, "Output",ExpressionUUID->"c0fa04a2-1ee5-40de-9a54-c40ffc42c15b",
 CellID->590652195]
}, Open  ]],
Cell[418147, 8593, 175, 2, 35, "Text",ExpressionUUID->"219d3472-791c-4fb0-9066-d0790acc7acb",
 CellID->41997672],
Cell[418325, 8597, 488, 14, 35, "Text",ExpressionUUID->"83d113b0-2db9-47b9-ae4e-e671bd362707",
 CellID->7049359],
Cell[418816, 8613, 187, 2, 35, "Text",ExpressionUUID->"c4590fef-22d3-4df3-86f7-951af2703755",
 CellID->646920125],
Cell[419006, 8617, 246, 3, 35, "Text",ExpressionUUID->"58abbdd7-27fb-4936-928a-503044f9d0f2",
 CellID->378066162],
Cell[CellGroupData[{
Cell[419277, 8624, 344, 9, 28, "Input",ExpressionUUID->"a4340373-f0a5-4dfc-ad45-a0d6b99ae7ea",
 CellID->96340892],
Cell[419624, 8635, 287, 8, 32, "Output",ExpressionUUID->"f90e69a9-e923-4f5f-b1a1-c3dce088ac40",
 CellID->272849548]
}, Open  ]],
Cell[CellGroupData[{
Cell[419948, 8648, 346, 9, 28, "Input",ExpressionUUID->"e2444a32-a5ed-417d-8ab0-11088bbbf671",
 CellID->451210339],
Cell[420297, 8659, 240, 6, 32, "Output",ExpressionUUID->"635baf49-37b1-4316-9317-138a99812824",
 CellID->198680619]
}, Open  ]],
Cell[CellGroupData[{
Cell[420574, 8670, 364, 9, 28, "Input",ExpressionUUID->"7191f895-4552-4881-aef0-c7f7a9fe5aeb",
 CellID->106504204],
Cell[420941, 8681, 173, 3, 32, "Output",ExpressionUUID->"45c0357c-e026-4e33-97cc-449545c4aa20",
 CellID->348915208]
}, Open  ]],
Cell[421129, 8687, 383, 10, 35, "Text",ExpressionUUID->"7fd48ba1-6683-46ea-bf2d-ea6f3909f23c",
 CellID->299066301],
Cell[421515, 8699, 411, 11, 35, "Text",ExpressionUUID->"bbe86399-dff6-4bd4-8c26-27b7b7b9bdec",
 CellID->229470244],
Cell[421929, 8712, 183, 2, 35, "Text",ExpressionUUID->"d0079f6f-9dea-4d1b-b973-a58c1ec59891",
 CellID->779400449],
Cell[422115, 8716, 198, 2, 35, "Text",ExpressionUUID->"1dfb7e8f-c38e-425e-a0b3-26d8c07f0797",
 CellID->205102427],
Cell[422316, 8720, 400, 10, 33, "Text",ExpressionUUID->"31f5b40b-245f-4007-84d4-47b38443bbc1",
 CellID->10909907],
Cell[422719, 8732, 539, 15, 58, "Text",ExpressionUUID->"3fb407ed-8d87-4856-9f3e-fbf81469891e",
 CellID->390360469],
Cell[CellGroupData[{
Cell[423283, 8751, 283, 7, 50, "Input",ExpressionUUID->"a95f4661-ea6a-4adb-8c78-7a33517f3b1f",
 CellID->340525169],
Cell[423569, 8760, 171, 3, 32, "Output",ExpressionUUID->"219fd236-f3a2-4e34-8777-fb49e9f74aa1",
 CellID->265308064]
}, Open  ]],
Cell[CellGroupData[{
Cell[423777, 8768, 334, 9, 50, "Input",ExpressionUUID->"903ad14f-c1d4-4a4c-9c38-d3230a0e42e5",
 CellID->191590863],
Cell[424114, 8779, 309, 9, 53, "Output",ExpressionUUID->"a3c1c79e-c3df-4192-bd19-4aaace35efe8",
 CellID->33122668]
}, Open  ]],
Cell[CellGroupData[{
Cell[424460, 8793, 332, 10, 50, "Input",ExpressionUUID->"91b0caf6-97cb-4365-86aa-74fe42070214",
 CellID->117827102],
Cell[424795, 8805, 263, 7, 50, "Output",ExpressionUUID->"7b18ec02-00f7-4e80-b6b9-e5990539366b",
 CellID->32054058]
}, Open  ]],
Cell[CellGroupData[{
Cell[425095, 8817, 368, 11, 47, "Input",ExpressionUUID->"47bb002a-9ca1-43e4-b960-4df87bb7f641",
 CellID->50818109],
Cell[425466, 8830, 4351, 108, 233, "Output",ExpressionUUID->"f4f2e9e3-58c0-40ae-b7e9-9989e9d4d8f4",
 CellID->136442414]
}, Open  ]],
Cell[CellGroupData[{
Cell[429854, 8943, 379, 10, 33, "Input",ExpressionUUID->"de4d1ddd-dbd4-43ea-a947-efb051a60c7a",
 CellID->72892788],
Cell[430236, 8955, 313, 9, 33, "Output",ExpressionUUID->"9ea45a7c-ae39-41aa-8636-b792327c3a6b",
 CellID->78850932]
}, Open  ]],
Cell[CellGroupData[{
Cell[430586, 8969, 404, 12, 33, "Input",ExpressionUUID->"82942e6e-55a0-4a10-bcc3-546cff9ede48",
 CellID->43850206],
Cell[430993, 8983, 340, 9, 37, "Output",ExpressionUUID->"4524a2c8-6f0a-4df7-be41-70948d3ade34",
 CellID->140632974]
}, Open  ]],
Cell[CellGroupData[{
Cell[431370, 8997, 358, 9, 33, "Input",ExpressionUUID->"2dbde346-7ad1-493b-addb-72d816ed2de8",
 CellID->439843047],
Cell[431731, 9008, 339, 10, 37, "Output",ExpressionUUID->"dc1a3b50-c3a4-46e5-a39e-07738cb27502",
 CellID->58811808]
}, Open  ]],
Cell[432085, 9021, 450, 12, 33, "Text",ExpressionUUID->"b899a7e2-4cac-42da-97c0-d479f1838c65",
 CellID->9670579],
Cell[432538, 9035, 534, 15, 33, "Text",ExpressionUUID->"85d8ebd9-4aca-409a-8184-f0c0e626264d",
 CellID->3702400],
Cell[433075, 9052, 535, 15, 33, "Text",ExpressionUUID->"f51f251b-b5d3-4634-b144-7640eb519b6b",
 CellID->11478502],
Cell[433613, 9069, 199, 2, 35, "Text",ExpressionUUID->"0e4f91b7-ee70-4794-aeb1-b551e0059cfa",
 CellID->4914579],
Cell[433815, 9073, 461, 13, 35, "Text",ExpressionUUID->"d940bc7d-9de6-42ea-9f42-a60ac0363727",
 CellID->816443656],
Cell[CellGroupData[{
Cell[434301, 9090, 344, 5, 41, "WolframAlphaLong",ExpressionUUID->"fb5d4640-4c74-4b9f-8a57-3d0ebce45681",
 CellID->263589602],
Cell[434648, 9097, 47509, 936, 528, "Print",ExpressionUUID->"08a08fb3-2053-4feb-bf34-f42952ab0b26",
 CellID->39789554]
}, Open  ]],
Cell[CellGroupData[{
Cell[482194, 10038, 562, 17, 33, "Input",ExpressionUUID->"d92a4569-8111-4368-b957-950c3f7bcefb",
 CellID->712993642],
Cell[482759, 10057, 198, 3, 32, "Output",ExpressionUUID->"4d4c2229-e15a-4263-bb19-bab4c50356ee",
 CellID->131124658]
}, Open  ]],
Cell[CellGroupData[{
Cell[482994, 10065, 563, 17, 33, "Input",ExpressionUUID->"807b9df5-672c-462f-8731-e5c9e3e6360c",
 CellID->701784750],
Cell[483560, 10084, 197, 3, 32, "Output",ExpressionUUID->"1729c077-1eac-46e0-8a7f-f56d38c8241a",
 CellID->22367681]
}, Open  ]],
Cell[483772, 10090, 252, 3, 35, "Text",ExpressionUUID->"cd74bef1-6e6f-4cf4-a7ca-d88d235fc71a",
 CellID->17587572],
Cell[484027, 10095, 201, 2, 35, "Text",ExpressionUUID->"9825d916-aaaf-4ca7-9b4a-09dd3bad9ac6",
 CellID->12385706],
Cell[484231, 10099, 290, 5, 58, "Text",ExpressionUUID->"4475550f-883c-4687-89d5-6936aafddc00",
 CellID->54939517],
Cell[484524, 10106, 168, 2, 35, "Text",ExpressionUUID->"6056801e-847a-4667-911d-9acbb16f3acf",
 CellID->148124795],
Cell[CellGroupData[{
Cell[484717, 10112, 225, 4, 28, "Input",ExpressionUUID->"4c9663a3-7d05-4bb9-baba-ef5fcdc65a05",
 CellID->670978736],
Cell[484945, 10118, 174, 3, 32, "Output",ExpressionUUID->"87aecf7d-0234-42bd-98b6-eba0abcb825a",
 CellID->127935199]
}, Open  ]],
Cell[CellGroupData[{
Cell[485156, 10126, 237, 4, 28, "Input",ExpressionUUID->"1bc13141-dd72-4c13-a2c9-e4ec4792a4af",
 CellID->291243491],
Cell[485396, 10132, 198, 4, 32, "Output",ExpressionUUID->"60d466c9-ac8a-4921-88d4-5d61ab941df7",
 CellID->24321667]
}, Open  ]],
Cell[CellGroupData[{
Cell[485631, 10141, 350, 8, 28, "Input",ExpressionUUID->"ef2ed195-5eea-475d-a726-679b24293a07",
 CellID->817970426],
Cell[485984, 10151, 7726, 153, 241, "Output",ExpressionUUID->"9fd23365-4e60-452f-a21b-455f68c2793a",
 CellID->49351638]
}, Open  ]],
Cell[CellGroupData[{
Cell[493747, 10309, 342, 8, 28, "Input",ExpressionUUID->"47bc287a-5957-41fd-966c-2c82e3e48c25",
 CellID->12818174],
Cell[494092, 10319, 6737, 138, 229, "Output",ExpressionUUID->"6c45e35f-29ae-4206-95cf-4bffdb9a091a",
 CellID->68584873]
}, Open  ]],
Cell[CellGroupData[{
Cell[500866, 10462, 492, 10, 28, "Input",ExpressionUUID->"ccc3d943-d0cb-4089-bab3-281a8e384b85",
 CellID->169271410],
Cell[501361, 10474, 6747, 138, 241, "Output",ExpressionUUID->"c73c7fd7-f966-4439-816c-73f8b2544283",
 CellID->222096917]
}, Open  ]],
Cell[CellGroupData[{
Cell[508145, 10617, 490, 10, 28, "Input",ExpressionUUID->"736f62fd-8ec5-44e2-8db9-97d663a589e8",
 CellID->55427159],
Cell[508638, 10629, 6674, 137, 236, "Output",ExpressionUUID->"33fb6a38-eaa7-41e3-85de-65f5d5ef32e4",
 CellID->414186869]
}, Open  ]],
Cell[CellGroupData[{
Cell[515349, 10771, 491, 10, 28, "Input",ExpressionUUID->"e7cd9956-5b7b-48e1-8d20-b18c2358ea9a",
 CellID->314003380],
Cell[515843, 10783, 6749, 137, 238, "Output",ExpressionUUID->"37019675-b253-441e-b578-eb106905b741",
 CellID->141478762]
}, Open  ]],
Cell[CellGroupData[{
Cell[522629, 10925, 551, 11, 28, "Input",ExpressionUUID->"e694f9ab-e1e9-4561-9b05-1be607b2d4ab",
 CellID->79653431],
Cell[523183, 10938, 6747, 139, 229, "Output",ExpressionUUID->"356449b3-4759-4577-af62-362b41380293",
 CellID->197022446]
}, Open  ]],
Cell[CellGroupData[{
Cell[529967, 11082, 545, 11, 28, "Input",ExpressionUUID->"a5f0687a-fa9b-4b54-8a90-8ddd89a3dd97",
 CellID->165362270],
Cell[530515, 11095, 6846, 139, 237, "Output",ExpressionUUID->"a453146d-5893-47b4-8b4b-fcd410dc308e",
 CellID->105064475]
}, Open  ]],
Cell[CellGroupData[{
Cell[537398, 11239, 550, 11, 28, "Input",ExpressionUUID->"5f9fa0ad-ea3a-4e9d-9c1e-e8fe00a66ec7",
 CellID->130621690],
Cell[537951, 11252, 6862, 139, 237, "Output",ExpressionUUID->"85c0a6e6-912c-4ec4-9b77-85e17c25d295",
 CellID->136296211]
}, Open  ]],
Cell[544828, 11394, 166, 2, 35, "Text",ExpressionUUID->"13230542-ffa8-4245-9882-2aeed907eea4",
 CellID->387562797],
Cell[544997, 11398, 233, 4, 35, "Text",ExpressionUUID->"479eaf32-76d8-4601-bae4-ba588b06f749",
 CellID->735992558],
Cell[CellGroupData[{
Cell[545255, 11406, 234, 4, 28, "Input",ExpressionUUID->"6fab4968-d2e5-4b12-b14f-28d9bb701463",
 CellID->36138],
Cell[545492, 11412, 399, 7, 52, "Output",ExpressionUUID->"36fa3732-bef6-42eb-a4ed-4e7a9869070b",
 CellID->10831694]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[545940, 11425, 173, 2, 67, "Section",ExpressionUUID->"64022d50-f0cb-467f-99d9-06515c17d0bd",
 CellID->116984980],
Cell[CellGroupData[{
Cell[546138, 11431, 218, 4, 28, "Input",ExpressionUUID->"f559eb9c-4284-4a20-b00a-67a98f444fe0",
 CellID->183599965],
Cell[546359, 11437, 12985, 305, 120, "Output",ExpressionUUID->"b1301bac-8f71-4880-a920-e86ae3ab5c9e",
 CellID->131860268]
}, Open  ]],
Cell[CellGroupData[{
Cell[559381, 11747, 324, 7, 28, "Input",ExpressionUUID->"1af07af9-34df-452d-baae-a86bc478ad78",
 CellID->349234795],
Cell[559708, 11756, 366, 12, 59, "Output",ExpressionUUID->"03c8dc30-d0e0-40f2-b595-f965221a05fd",
 CellID->73383408]
}, Open  ]],
Cell[CellGroupData[{
Cell[560111, 11773, 419, 10, 48, "Input",ExpressionUUID->"7b5d0210-c083-4cbb-a182-fdf7c27216ac",
 CellID->820835885],
Cell[560533, 11785, 967, 30, 71, "Output",ExpressionUUID->"5b14606c-10f1-48a1-a539-b44c53f87113",
 CellID->396942064]
}, Open  ]],
Cell[CellGroupData[{
Cell[561537, 11820, 266, 7, 28, "Input",ExpressionUUID->"0574d984-663f-4aa8-8342-50c71af8324e",
 CellID->23894860],
Cell[561806, 11829, 436, 9, 52, "Output",ExpressionUUID->"4233268c-7f27-4d14-b8e1-070e7fa0b05a",
 CellID->29405763]
}, Open  ]],
Cell[CellGroupData[{
Cell[562279, 11843, 349, 10, 28, "Input",ExpressionUUID->"ac611a9f-35c3-46ff-b3fc-bcd51dcfc4f6",
 CellID->101194223],
Cell[562631, 11855, 7400, 141, 246, "Output",ExpressionUUID->"63da104d-06a2-4b7d-8d58-e7bb0dbd033b",
 CellID->247516843]
}, Open  ]],
Cell[CellGroupData[{
Cell[570068, 12001, 510, 15, 48, "Input",ExpressionUUID->"a6a9fad0-7dfc-44b4-941d-1621b8bc21d1",
 CellID->23431321],
Cell[570581, 12018, 122316, 2095, 377, "Output",ExpressionUUID->"a72ecc79-fef2-4be4-8647-4ee510e2b808",
 CellID->49138764]
}, Open  ]],
Cell[CellGroupData[{
Cell[692934, 14118, 443, 12, 28, "Input",ExpressionUUID->"609058af-3f0d-4703-ab29-44641969f66e",
 CellID->418644106],
Cell[693380, 14132, 1042, 33, 66, "Output",ExpressionUUID->"d3f3f9b9-3968-47fe-9aad-2f3ccec90817",
 CellID->38358058]
}, Open  ]],
Cell[CellGroupData[{
Cell[694459, 14170, 497, 13, 48, "Input",ExpressionUUID->"1dc2b1bf-b235-4896-90fd-2be3dcf6da39",
 CellID->64107013],
Cell[694959, 14185, 851, 27, 72, "Output",ExpressionUUID->"fc0f3c3b-105f-400e-98e1-ed46e3b1d19c",
 CellID->671903771]
}, Open  ]],
Cell[CellGroupData[{
Cell[695847, 14217, 652, 18, 48, "Input",ExpressionUUID->"538f77e5-555a-4ad4-abe1-bbb5289b57b0",
 CellID->21950654],
Cell[696502, 14237, 860, 26, 73, "Output",ExpressionUUID->"b33aa2bb-d4ab-451a-a4d9-e206ad3aefcf",
 CellID->497776818]
}, Open  ]],
Cell[CellGroupData[{
Cell[697399, 14268, 231, 4, 28, "Input",ExpressionUUID->"e3ef35c1-947c-4b3e-970b-bd319e49014a",
 CellID->180066450],
Cell[697633, 14274, 186, 3, 32, "Output",ExpressionUUID->"2bd0523c-1f2a-4b53-8cd1-98aef2ff3636",
 CellID->829342428]
}, Open  ]],
Cell[CellGroupData[{
Cell[697856, 14282, 377, 9, 28, "Input",ExpressionUUID->"2c154d6c-ec69-4d88-b12f-5d88ce95dc6f",
 CellID->280735267],
Cell[698236, 14293, 434, 8, 40, "Output",ExpressionUUID->"f58e41e9-9e49-44aa-87fe-954ee3e29f7b",
 CellID->152134808]
}, Open  ]],
Cell[CellGroupData[{
Cell[698707, 14306, 469, 12, 48, "Input",ExpressionUUID->"2a617daa-f883-4561-a71d-d693d6f0f177",
 CellID->53497224],
Cell[699179, 14320, 356, 7, 32, "Output",ExpressionUUID->"eb3417a5-43c6-419e-85dd-9ed0ef137d72",
 CellID->88604903]
}, Open  ]],
Cell[CellGroupData[{
Cell[699572, 14332, 904, 25, 105, "Input",ExpressionUUID->"d275a1e5-fa83-4afe-b511-0d8cc4bf29f4",
 CellID->48400956],
Cell[700479, 14359, 1125, 27, 172, "Output",ExpressionUUID->"e599cf67-5e53-4208-b42e-77208c9a9aea",
 CellID->63719677]
}, Open  ]],
Cell[CellGroupData[{
Cell[701641, 14391, 900, 25, 105, "Input",ExpressionUUID->"dedf33b6-3def-47a2-8f2c-2b291b3c1c4b",
 CellID->260589022],
Cell[702544, 14418, 943, 22, 96, "Output",ExpressionUUID->"35bfe782-ebc1-41c4-a0e0-74a2af96e02b",
 CellID->159587370]
}, Open  ]],
Cell[CellGroupData[{
Cell[703524, 14445, 414, 10, 28, "Input",ExpressionUUID->"b0d80dde-4305-4a87-b748-1011838a8b8f",
 CellID->33170497],
Cell[703941, 14457, 209, 3, 32, "Output",ExpressionUUID->"314212e7-e96c-4bf4-ba0b-bc028e95fc14",
 CellID->559780725]
}, Open  ]],
Cell[704165, 14463, 386, 7, 81, "Text",ExpressionUUID->"92994e86-00af-497e-85fb-daca7aa08df0",
 CellID->129435059],
Cell[CellGroupData[{
Cell[704576, 14474, 427, 11, 28, "Input",ExpressionUUID->"2a393c09-535f-44d5-ab91-08bac4e416a7",
 CellID->151491553],
Cell[705006, 14487, 3218, 115, 1747, "Output",ExpressionUUID->"3b156577-6fc5-4fbb-b8e2-4bd27d423ce1",
 CellID->387635740]
}, Open  ]],
Cell[708239, 14605, 171, 2, 28, "Input",ExpressionUUID->"6fc9ac0b-29e1-43e1-be56-2e82b0606e7d",
 CellID->209116410],
Cell[708413, 14609, 1216, 24, 140, "Text",ExpressionUUID->"f9dd4fc6-43ca-4785-90eb-aa31907a6028",
 CellID->62140769],
Cell[CellGroupData[{
Cell[709654, 14637, 412, 10, 48, "Input",ExpressionUUID->"a4f2596f-7084-42cd-8838-e68d154bbd45",
 CellID->261816993],
Cell[710069, 14649, 392, 11, 65, "Output",ExpressionUUID->"fed9f3cf-8de1-41c4-a0ff-f0a0d07534d1",
 CellID->393569845]
}, Open  ]],
Cell[CellGroupData[{
Cell[710498, 14665, 414, 10, 48, "Input",ExpressionUUID->"dc97cf8e-9eef-4110-a8a1-cc74e10000d1",
 CellID->23771277],
Cell[710915, 14677, 318, 9, 65, "Output",ExpressionUUID->"43c35a2f-5569-4dd8-bc39-1a1954cb4f09",
 CellID->91622078]
}, Open  ]],
Cell[711248, 14689, 1013, 29, 86, "Input",ExpressionUUID->"d54d2f8c-de39-4a0a-b305-2ec69e248177",
 CellID->16585294],
Cell[CellGroupData[{
Cell[712286, 14722, 725, 21, 67, "Input",ExpressionUUID->"cf7abd27-9d24-48ef-8c89-e8dd98f31d57",
 CellID->438222600],
Cell[713014, 14745, 307, 7, 32, "Output",ExpressionUUID->"2d92f152-fbaa-4c9a-86d7-e34deed2fe60",
 CellID->252553827]
}, Open  ]],
Cell[CellGroupData[{
Cell[713358, 14757, 276, 6, 28, "Input",ExpressionUUID->"2fab8d41-b8bb-403c-b67f-6bb2f623e164",
 CellID->77932969],
Cell[713637, 14765, 307, 7, 32, "Output",ExpressionUUID->"0145eb3d-6752-4385-8399-721d0e359d4b",
 CellID->213226253]
}, Open  ]],
Cell[CellGroupData[{
Cell[713981, 14777, 277, 6, 28, "Input",ExpressionUUID->"519f92b5-58dc-4d0e-a0fd-d6db4c863f33",
 CellID->271611407],
Cell[714261, 14785, 310, 7, 32, "Output",ExpressionUUID->"e135fb9c-88aa-4f60-bcab-ad67a9c482a1",
 CellID->174150539]
}, Open  ]],
Cell[CellGroupData[{
Cell[714608, 14797, 277, 6, 28, "Input",ExpressionUUID->"fe8f9788-6255-4d01-9b12-d6c63836b02e",
 CellID->840157792],
Cell[714888, 14805, 311, 7, 32, "Output",ExpressionUUID->"b47cfe95-ae56-4094-877a-ebd193195dea",
 CellID->353386998]
}, Open  ]],
Cell[CellGroupData[{
Cell[715236, 14817, 256, 5, 28, "Input",ExpressionUUID->"71113946-08e7-4382-9d54-587a56f5289f",
 CellID->534059894],
Cell[715495, 14824, 301, 7, 32, "Output",ExpressionUUID->"2e4780e6-d900-41af-bfe0-1bfe95ad0150",
 CellID->357321230]
}, Open  ]],
Cell[715811, 14834, 240, 4, 35, "Text",ExpressionUUID->"259f359a-abcc-44e6-b60f-393acc95d3f6",
 CellID->657109313],
Cell[716054, 14840, 917, 28, 35, "Text",ExpressionUUID->"c21b47c2-d064-4364-80a9-91c4a9e35de9",
 CellID->110577817],
Cell[716974, 14870, 1607, 47, 119, "Input",ExpressionUUID->"738415cc-82c6-4fdd-a1d5-e2539e766221",
 CellID->429272031],
Cell[CellGroupData[{
Cell[718606, 14921, 306, 6, 28, "Input",ExpressionUUID->"3a1c5180-ec0a-40e3-8a89-73501ad7c110",
 CellID->510309632],
Cell[718915, 14929, 1110, 35, 52, "Output",ExpressionUUID->"b1da78de-f652-40f9-9035-3b6e12ef5873",
 CellID->30474415]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

